{
  "swagger": "2.0",
  "info": {
    "title": "Open Bank Project API",
    "description": "An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2021. Licensed under the AGPL and commercial licences.",
    "contact": {
      "name": "TESOBE GmbH. / Open Bank Project",
      "url": "https://openbankproject.com",
      "email": "contact@tesobe.com"
    },
    "version": "v3.1.0"
  },
  "host": "api3.openbankproject.com",
  "basePath": "/",
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "directLogin": {
      "type": "apiKey",
      "description": "https://github.com/OpenBankProject/OBP-API/wiki/Direct-Login",
      "in": "header",
      "name": "Authorization"
    },
    "gatewayLogin": {
      "type": "apiKey",
      "description": "https://github.com/OpenBankProject/OBP-API/wiki/Gateway-Login",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [{ "directLogin": [], "gatewayLogin": [] }],
  "paths": {
    "/obp/v3.1.0/accounts/public": {
      "get": {
        "tags": ["Account-Public", "Account", "PublicData"],
        "summary": "Get Public Accounts at all Banks",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get public accounts at all banks (Anonymous access).<br />Returns accounts that contain at least one public view (a view where is_public is true)<br />For each account the API returns the ID and the available views.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv2.0.0-publicAccountsAllBanks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["jsonString"],
              "properties": {
                "jsonString": { "type": "string", "example": "{}" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["accounts"],
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "required": ["id", "label", "bank_id", "views_available"],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
                      },
                      "label": { "type": "string", "example": "NoneLabel" },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "views_available": {
                        "type": "array",
                        "items": {
                          "required": ["id", "short_name", "is_public"],
                          "properties": {
                            "id": { "type": "string", "example": "1" },
                            "short_name": {
                              "type": "string",
                              "example": "HHH"
                            },
                            "is_public": {
                              "type": "boolean",
                              "example": "true"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-30066: Could not get accounts."
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/adapter": {
      "get": {
        "tags": ["API", "New-Style"],
        "summary": "Get Adapter Info",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get basic information about the Adapter.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getAdapterInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["name", "version", "git_commit", "date"],
              "properties": {
                "name": { "type": "string", "example": "String" },
                "version": { "type": "string", "example": "String" },
                "git_commit": { "type": "string", "example": "String" },
                "date": { "type": "string", "example": "2013-01-21T23:08:00Z" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-50000: Unknown Error."
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/api/glossary": {
      "get": {
        "tags": ["Documentation", "New-Style"],
        "summary": "Get API Glossary",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the glossary of the API</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getApiGlossary",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["glossary_items"],
              "properties": {
                "glossary_items": {
                  "type": "array",
                  "items": {
                    "required": ["title", "description"],
                    "properties": {
                      "title": { "type": "string", "example": "Dr." },
                      "description": {
                        "required": ["markdown", "html"],
                        "properties": {
                          "markdown": { "type": "string", "example": "String" },
                          "html": { "type": "string", "example": "String" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks": {
      "get": {
        "tags": [
          "Bank",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Banks",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get banks on this API instance<br />Returns a list of banks supported on this server:</p><ul><li>ID used as parameter in URLs</li><li>Short and full name of bank</li><li>Logo URL</li><li>Website</li></ul><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getBanks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["banks"],
              "properties": {
                "banks": {
                  "type": "array",
                  "items": {
                    "required": [
                      "website",
                      "full_name",
                      "logo",
                      "id",
                      "short_name",
                      "bank_routing"
                    ],
                    "properties": {
                      "website": {
                        "type": "string",
                        "example": "www.openbankproject.com"
                      },
                      "full_name": { "type": "string", "example": "full_name" },
                      "logo": { "type": "string", "example": "logo" },
                      "id": { "type": "string", "example": "gh.29.uk" },
                      "short_name": {
                        "type": "string",
                        "example": "short_name "
                      },
                      "bank_routing": {
                        "required": ["scheme", "address"],
                        "properties": {
                          "scheme": { "type": "string", "example": "Bank_ID" },
                          "address": { "type": "string", "example": "gh.29.uk" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Bank"],
        "summary": "Create Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create a new bank (Authenticated access).<br />Authentication is Mandatory</p>",
        "operationId": "OBPv2.2.0-createBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BankJSONV220 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "national_identifier",
                "full_name",
                "swift_bic",
                "logo_url",
                "id",
                "short_name",
                "bank_routing",
                "website_url"
              ],
              "properties": {
                "national_identifier": {
                  "type": "string",
                  "example": "UK97ZZZ1234567890"
                },
                "full_name": { "type": "string", "example": "uk" },
                "swift_bic": { "type": "string", "example": "IIIGGB22" },
                "logo_url": {
                  "type": "string",
                  "example": "https://static.openbankproject.com/images/sandbox/bank_x.png"
                },
                "id": { "type": "string", "example": "gh.29.uk.x" },
                "short_name": { "type": "string", "example": "uk" },
                "bank_routing": "~paths~/obp/v3.1.0/banks~get~responses~200~schema~properties~banks~items~properties~bank_routing",
                "website_url": {
                  "type": "string",
                  "example": "https://www.example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks~post~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-10001: Incorrect json format."
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}": {
      "get": {
        "tags": [
          "Bank",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the bank specified by BANK_ID<br />Returns information about a single bank specified by BANK_ID including:</p><ul><li>Short and full name of bank</li><li>Logo URL</li><li>Website</li></ul><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-bankById",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "bank_routings",
                "website",
                "full_name",
                "logo",
                "id",
                "short_name"
              ],
              "properties": {
                "bank_routings": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks~get~responses~200~schema~properties~banks~items~properties~bank_routing"
                },
                "website": {
                  "type": "string",
                  "example": "www.openbankproject.com"
                },
                "full_name": { "type": "string", "example": "full_name" },
                "logo": { "type": "string", "example": "logo" },
                "id": { "type": "string", "example": "gh.29.uk" },
                "short_name": { "type": "string", "example": "short_name " }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-20001: User not logged in. Authentication is required!"
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/account-applications": {
      "get": {
        "tags": ["Account-Application", "Account", "New-Style"],
        "summary": "Get Account Applications",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the Account Applications.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getAccountApplications",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["account_applications"],
              "properties": {
                "account_applications": {
                  "type": "array",
                  "items": {
                    "required": [
                      "date_of_application",
                      "account_application_id",
                      "product_code",
                      "status",
                      "customer",
                      "user"
                    ],
                    "properties": {
                      "date_of_application": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "account_application_id": {
                        "type": "string",
                        "example": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
                      },
                      "product_code": {
                        "type": "string",
                        "example": "saveing1"
                      },
                      "status": { "type": "string", "example": "REQUESTED" },
                      "customer": {
                        "required": [
                          "customer_id",
                          "name_suffix",
                          "email",
                          "branch_id",
                          "mobile_phone_number",
                          "customer_number",
                          "highest_education_attained",
                          "dob_of_dependants",
                          "bank_id",
                          "date_of_birth",
                          "last_ok_date",
                          "employment_status",
                          "legal_name",
                          "title",
                          "face_image",
                          "dependants",
                          "relationship_status",
                          "kyc_status"
                        ],
                        "properties": {
                          "customer_id": {
                            "type": "string",
                            "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                          },
                          "name_suffix": { "type": "string", "example": "Sr" },
                          "email": {
                            "type": "string",
                            "example": "felixsmith@example.com"
                          },
                          "branch_id": {
                            "type": "string",
                            "example": "DERBY6"
                          },
                          "mobile_phone_number": {
                            "type": "string",
                            "example": "+44 07972 444 876"
                          },
                          "customer_number": {
                            "type": "string",
                            "example": "5987953"
                          },
                          "highest_education_attained": {
                            "type": "string",
                            "example": "Master"
                          },
                          "dob_of_dependants": {
                            "type": "array",
                            "items": { "type": "string", "format": "date" }
                          },
                          "bank_id": {
                            "type": "string",
                            "example": "gh.29.uk"
                          },
                          "date_of_birth": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-09-19T00:00:00Z"
                          },
                          "credit_rating": {
                            "required": ["rating", "source"],
                            "properties": {
                              "rating": { "type": "string", "example": "OBP" },
                              "source": { "type": "string", "example": "OBP" }
                            }
                          },
                          "last_ok_date": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-09-19T00:00:00Z"
                          },
                          "employment_status": {
                            "type": "string",
                            "example": "worker"
                          },
                          "legal_name": {
                            "type": "string",
                            "example": "Eveline Tripman"
                          },
                          "credit_limit": {
                            "required": ["currency", "amount"],
                            "properties": {
                              "currency": {
                                "type": "string",
                                "example": "EUR"
                              },
                              "amount": { "type": "string", "example": "0" }
                            }
                          },
                          "title": { "type": "string", "example": "Dr." },
                          "face_image": {
                            "required": ["url", "date"],
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": "www.openbankproject"
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "example": "2017-09-19T00:00:00Z"
                              }
                            }
                          },
                          "dependants": {
                            "type": "integer",
                            "format": "int32",
                            "example": "1"
                          },
                          "relationship_status": {
                            "type": "string",
                            "example": "single"
                          },
                          "kyc_status": { "type": "boolean", "example": "true" }
                        }
                      },
                      "user": {
                        "required": [
                          "provider",
                          "email",
                          "username",
                          "provider_id",
                          "user_id"
                        ],
                        "properties": {
                          "provider": {
                            "type": "string",
                            "example": "http://127.0.0.1:8080"
                          },
                          "email": {
                            "type": "string",
                            "example": "felixsmith@example.com"
                          },
                          "username": {
                            "type": "string",
                            "example": "felixsmith"
                          },
                          "provider_id": {
                            "type": "string",
                            "example": "Chris"
                          },
                          "user_id": {
                            "type": "string",
                            "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Account-Application", "Account", "New-Style"],
        "summary": "Create Account Application",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Account Application</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createAccountApplication",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AccountApplicationJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["product_code"],
              "properties": {
                "product_code": { "type": "string", "example": "saveing1" },
                "user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/account-applications/{ACCOUNT_APPLICATION_ID}": {
      "get": {
        "tags": ["Account-Application", "Account", "New-Style"],
        "summary": "Get Account Application by Id",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the Account Application.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getAccountApplication",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ACCOUNT_APPLICATION_ID",
            "description": "the account application id ",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Account-Application", "Account", "New-Style"],
        "summary": "Update Account Application Status",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update an Account Application status</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateAccountApplicationStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AccountApplicationUpdateStatusJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["status"],
              "properties": {
                "status": { "type": "string", "example": "ACCEPTED" }
              }
            }
          },
          {
            "in": "path",
            "name": "ACCOUNT_APPLICATION_ID",
            "description": "the account application id ",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/account-web-hooks": {
      "post": {
        "tags": ["Webhook", "Bank", "New-Style"],
        "summary": "Create an Account Webhook",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create an Account Webhook</p><p>Webhooks are used to call external URLs when certain events happen.</p><p>Account Webhooks focus on events around accounts.</p><p>For instance, a webhook could be used to notify an external service if a balance changes on an account.</p><p>This functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createAccountWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AccountWebhookPostJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "is_active",
                "url",
                "trigger_name",
                "http_protocol",
                "http_method",
                "account_id"
              ],
              "properties": {
                "is_active": { "type": "string", "example": "true" },
                "url": {
                  "type": "string",
                  "example": "https://localhost.openbankproject.com"
                },
                "trigger_name": {
                  "type": "string",
                  "example": "OnBalanceChange"
                },
                "http_protocol": { "type": "string", "example": "HTTP/1.1" },
                "http_method": { "type": "string", "example": "POST" },
                "account_id": {
                  "type": "string",
                  "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "created_by_user_id",
                "is_active",
                "url",
                "trigger_name",
                "http_protocol",
                "account_webhook_id",
                "http_method",
                "bank_id",
                "account_id"
              ],
              "properties": {
                "created_by_user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "is_active": { "type": "boolean", "example": "true" },
                "url": {
                  "type": "string",
                  "example": "https://localhost.openbankproject.com"
                },
                "trigger_name": {
                  "type": "string",
                  "example": "OnBalanceChange"
                },
                "http_protocol": { "type": "string", "example": "HTTP/1.1" },
                "account_webhook_id": {
                  "type": "string",
                  "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
                },
                "http_method": { "type": "string", "example": "POST" },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "account_id": {
                  "type": "string",
                  "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Webhook", "Bank", "New-Style"],
        "summary": "Enable/Disable an Account Webhook",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Enable/Disable an Account Webhook</p><p>Webhooks are used to call external URLs when certain events happen.</p><p>Account Webhooks focus on events around accounts.</p><p>For instance, a webhook could be used to notify an external service if a balance changes on an account.</p><p>This functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-enableDisableAccountWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AccountWebhookPutJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["account_webhook_id", "is_active"],
              "properties": {
                "account_webhook_id": {
                  "type": "string",
                  "example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
                },
                "is_active": { "type": "string", "example": "true" }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-web-hooks~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts": {
      "get": {
        "tags": ["Account", "PrivateData", "PublicData", "New-Style"],
        "summary": "Get Accounts at Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the list of accounts at BANK_ID that the user has access to.<br />For each account the API returns the account ID and the views available to the user..<br />Each account must have at least one private View.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-getPrivateAccountsAtOneBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-30001: Bank not found. Please specify a valid value for BANK_ID."
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts-held": {
      "get": {
        "tags": [
          "Account",
          "Account Information Service (AIS)",
          "View-Custom",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Accounts Held",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Accounts held by the current User if even the User has not been assigned the owner View yet.</p><p>Can be used to onboard the account to the API - since all other account and transaction endpoints require views to be assigned.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/banks/BANK_ID/accounts-held?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getAccountsHeld",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["accounts"],
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "required": [
                      "number",
                      "account_routings",
                      "label",
                      "bank_id",
                      "id"
                    ],
                    "properties": {
                      "number": { "type": "string", "example": "123" },
                      "account_routings": {
                        "type": "array",
                        "items": {
                          "required": ["scheme", "address"],
                          "properties": {
                            "scheme": {
                              "type": "string",
                              "example": "AccountNumber"
                            },
                            "address": {
                              "type": "string",
                              "example": "4930396"
                            }
                          }
                        }
                      },
                      "label": { "type": "string", "example": "My Account" },
                      "bank_id": { "type": "string", "example": "123" },
                      "id": { "type": "string", "example": "12314" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}": {
      "post": {
        "tags": ["Account", "New-Style"],
        "summary": "Update Account Label",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the label for the account. The label is how the account is known to the account owner e.g. 'My savings account'</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-updateAccountLabel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "UpdateAccountJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["id", "label", "bank_id"],
              "properties": {
                "id": { "type": "string", "example": "123123" },
                "label": { "type": "string", "example": "label" },
                "bank_id": { "type": "string", "example": "gh.29.uk" }
              }
            }
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": ["success"],
              "properties": {
                "success": { "type": "string", "example": "Success" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Account", "Onboarding", "New-Style"],
        "summary": "Create Account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Account at bank specified by BANK_ID with Id specified by ACCOUNT_ID.</p><p>The User can create an Account for themself  - or -  the User that has the USER_ID specified in the POST body.</p><p>If the PUT body USER_ID <em>is</em> specified, the logged in user must have the Role canCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.</p><p>If the PUT body USER_ID is <em>not</em> specified, the account will be owned by the logged in User.</p><p>The 'product_code' field SHOULD be a product_code from Product.<br />If the 'product_code' matches a product_code from Product, account attributes will be created that match the Product Attributes.</p><p>Note: The Amount MUST be zero.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateAccountRequestJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "branch_id",
                "account_routings",
                "label",
                "balance",
                "user_id",
                "product_code"
              ],
              "properties": {
                "branch_id": { "type": "string", "example": "DERBY6" },
                "account_routings": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                },
                "label": { "type": "string", "example": "My Account" },
                "balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "product_code": { "type": "string", "example": "AC" }
              }
            }
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "account_attributes",
                "branch_id",
                "account_routings",
                "label",
                "balance",
                "user_id",
                "product_code",
                "account_id"
              ],
              "properties": {
                "account_attributes": {
                  "type": "array",
                  "items": {
                    "required": [
                      "name",
                      "account_attribute_id",
                      "product_code",
                      "type",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "OVERDRAFT_START_DATE"
                      },
                      "account_attribute_id": {
                        "type": "string",
                        "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
                      },
                      "product_code": {
                        "type": "string",
                        "example": "saving1"
                      },
                      "type": { "type": "string", "example": "DATE_WITH_DAY" },
                      "value": { "type": "string", "example": "2012-04-23" }
                    }
                  }
                },
                "branch_id": { "type": "string", "example": "DERBY6" },
                "account_routings": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                },
                "label": { "type": "string", "example": "My Account" },
                "balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "product_code": { "type": "string", "example": "AC" },
                "account_id": {
                  "type": "string",
                  "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account": {
      "get": {
        "tags": ["Account", "New-Style"],
        "summary": "Get Account by Id (Full)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):</p><ul><li>Number</li><li>Owners</li><li>Type</li><li>Balance</li><li>IBAN</li><li>Available views (sorted by short_name)</li></ul><p>More details about the data moderation by the view <a href=\"#1_2_1-getViewsForBankAccount\">here</a>.</p><p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications.<br />This call provides balance and other account information via delegated authentication using OAuth.</p><p>Authentication is required if the 'is_public' field in view (VIEW_ID) is not set to <code>true</code>.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getPrivateAccountByIdFull",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "number",
                "account_attributes",
                "views_available",
                "account_routings",
                "label",
                "owners",
                "balance",
                "bank_id",
                "id",
                "type"
              ],
              "properties": {
                "number": { "type": "string", "example": "123" },
                "account_attributes": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~responses~200~schema~properties~account_attributes~items"
                },
                "views_available": {
                  "type": "array",
                  "items": {
                    "required": [
                      "can_see_transaction_start_date",
                      "can_add_url",
                      "can_add_where_tag",
                      "can_see_transaction_this_bank_account",
                      "can_see_bank_account_owners",
                      "can_see_private_alias",
                      "can_edit_owner_comment",
                      "can_see_other_account_national_identifier",
                      "can_see_public_alias",
                      "can_see_physical_location",
                      "can_see_owner_comment",
                      "can_see_bank_account_iban",
                      "can_see_corporate_location",
                      "can_see_bank_account_number",
                      "can_see_other_account_bank_name",
                      "description",
                      "can_see_transaction_other_bank_account",
                      "can_delete_corporate_location",
                      "can_see_comments",
                      "can_see_bank_account_bank_name",
                      "can_add_more_info",
                      "can_see_other_account_number",
                      "can_see_other_account_swift_bic",
                      "can_add_open_corporates_url",
                      "can_see_other_account_kind",
                      "can_delete_physical_location",
                      "can_see_bank_account_label",
                      "can_see_transaction_currency",
                      "is_public",
                      "can_see_transaction_finish_date",
                      "can_add_tag",
                      "can_see_images",
                      "can_see_bank_account_currency",
                      "hide_metadata_if_alias_used",
                      "can_delete_where_tag",
                      "alias",
                      "can_add_image_url",
                      "can_add_comment",
                      "can_see_image_url",
                      "id",
                      "can_see_bank_account_national_identifier",
                      "can_see_tags",
                      "can_see_open_corporates_url",
                      "short_name",
                      "can_delete_tag",
                      "can_see_more_info",
                      "can_see_transaction_metadata",
                      "can_delete_comment",
                      "can_see_where_tag",
                      "can_add_private_alias",
                      "can_add_public_alias",
                      "can_see_bank_account_swift_bic",
                      "can_add_image",
                      "can_see_transaction_type",
                      "can_see_other_account_iban",
                      "can_add_physical_location",
                      "can_add_corporate_location",
                      "can_delete_image",
                      "can_see_url",
                      "can_see_bank_account_balance",
                      "can_see_transaction_balance",
                      "can_see_transaction_amount",
                      "can_see_other_account_metadata",
                      "can_see_bank_account_type",
                      "can_see_transaction_description"
                    ],
                    "properties": {
                      "can_see_transaction_start_date": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_url": { "type": "boolean", "example": "true" },
                      "can_add_where_tag": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_this_bank_account": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_owners": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_private_alias": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_edit_owner_comment": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_national_identifier": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_public_alias": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_physical_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_owner_comment": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_iban": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_corporate_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_number": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_bank_name": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "description": {
                        "type": "string",
                        "example": "description"
                      },
                      "can_see_transaction_other_bank_account": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_corporate_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_comments": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_bank_name": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_more_info": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_number": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_swift_bic": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_open_corporates_url": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_kind": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_physical_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_label": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_currency": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "is_public": { "type": "boolean", "example": "true" },
                      "can_see_transaction_finish_date": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_tag": { "type": "boolean", "example": "true" },
                      "can_see_images": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_currency": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "hide_metadata_if_alias_used": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_where_tag": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "alias": { "type": "string", "example": "None" },
                      "can_add_image_url": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_comment": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_image_url": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "id": { "type": "string", "example": "123" },
                      "can_see_bank_account_national_identifier": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_tags": { "type": "boolean", "example": "true" },
                      "can_see_open_corporates_url": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "short_name": {
                        "type": "string",
                        "example": "short_name"
                      },
                      "can_delete_tag": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_more_info": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_metadata": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_comment": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_where_tag": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_private_alias": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_public_alias": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_swift_bic": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_image": { "type": "boolean", "example": "true" },
                      "can_see_transaction_type": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_iban": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_physical_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_corporate_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_image": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_url": { "type": "boolean", "example": "true" },
                      "can_see_bank_account_balance": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_balance": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_amount": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_metadata": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_type": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_description": {
                        "type": "boolean",
                        "example": "true"
                      }
                    }
                  }
                },
                "account_routings": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                },
                "label": { "type": "string", "example": "NoneLabel" },
                "owners": {
                  "type": "array",
                  "items": {
                    "required": ["id", "provider", "display_name"],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                      },
                      "provider": {
                        "type": "string",
                        "example": "http://127.0.0.1:8080"
                      },
                      "display_name": { "type": "string", "example": "OBP" }
                    }
                  }
                },
                "balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "id": {
                  "type": "string",
                  "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                },
                "type": { "type": "string", "example": "OBP" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders": {
      "get": {
        "tags": ["Account", "New-Style"],
        "summary": "Get Checkbook orders",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<pre><code>  Get all checkbook orders</code></pre><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getCheckbookOrders",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["account", "orders"],
              "properties": {
                "account": {
                  "required": [
                    "account_routings",
                    "account_type",
                    "bank_id",
                    "account_id",
                    "branch_routings"
                  ],
                  "properties": {
                    "account_routings": {
                      "type": "array",
                      "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                    },
                    "account_type": { "type": "string", "example": "330" },
                    "bank_id": { "type": "string", "example": "gh.29.uk" },
                    "account_id": {
                      "type": "string",
                      "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                    },
                    "branch_routings": {
                      "type": "array",
                      "items": {
                        "required": ["scheme", "address"],
                        "properties": {
                          "scheme": {
                            "type": "string",
                            "example": "BranchNumber"
                          },
                          "address": { "type": "string", "example": "678" }
                        }
                      }
                    }
                  }
                },
                "orders": {
                  "type": "array",
                  "items": {
                    "required": ["order"],
                    "properties": {
                      "order": {
                        "required": [
                          "order_id",
                          "number_of_checkbooks",
                          "first_check_number",
                          "order_date",
                          "status",
                          "shipping_code",
                          "distribution_channel"
                        ],
                        "properties": {
                          "order_id": {
                            "type": "string",
                            "example": "xjksajfkj"
                          },
                          "number_of_checkbooks": {
                            "type": "string",
                            "example": "4"
                          },
                          "first_check_number": {
                            "type": "string",
                            "example": "5165276"
                          },
                          "order_date": {
                            "type": "string",
                            "example": "07082013"
                          },
                          "status": { "type": "string", "example": "2" },
                          "shipping_code": { "type": "string", "example": "1" },
                          "distribution_channel": {
                            "type": "string",
                            "example": "1201"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties": {
      "get": {
        "tags": [
          "Counterparty",
          "Payment Initiation Service (PIS)",
          "Account",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Counterparties (Explicit)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the Counterparties (Explicit) for the account / view.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.2.0-getExplictCounterpartiesForAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["counterparties"],
              "properties": {
                "counterparties": {
                  "type": "array",
                  "items": {
                    "required": [
                      "other_account_routing_address",
                      "other_account_routing_scheme",
                      "created_by_user_id",
                      "name",
                      "other_account_secondary_routing_address",
                      "is_beneficiary",
                      "description",
                      "other_branch_routing_address",
                      "bespoke",
                      "other_bank_routing_scheme",
                      "other_branch_routing_scheme",
                      "this_account_id",
                      "this_view_id",
                      "other_bank_routing_address",
                      "this_bank_id",
                      "counterparty_id",
                      "other_account_secondary_routing_scheme"
                    ],
                    "properties": {
                      "other_account_routing_address": {
                        "type": "string",
                        "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
                      },
                      "other_account_routing_scheme": {
                        "type": "string",
                        "example": "OBP"
                      },
                      "created_by_user_id": {
                        "type": "string",
                        "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                      },
                      "name": {
                        "type": "string",
                        "example": "CounterpartyName"
                      },
                      "other_account_secondary_routing_address": {
                        "type": "string",
                        "example": "DE89370400440532013000"
                      },
                      "is_beneficiary": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "description": {
                        "type": "string",
                        "example": "My landlord"
                      },
                      "other_branch_routing_address": {
                        "type": "string",
                        "example": "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
                      },
                      "bespoke": {
                        "type": "array",
                        "items": {
                          "required": ["key", "value"],
                          "properties": {
                            "key": {
                              "type": "string",
                              "example": "englishName"
                            },
                            "value": {
                              "type": "string",
                              "example": "english Name"
                            }
                          }
                        }
                      },
                      "other_bank_routing_scheme": {
                        "type": "string",
                        "example": "OBP"
                      },
                      "other_branch_routing_scheme": {
                        "type": "string",
                        "example": "OBP"
                      },
                      "this_account_id": {
                        "type": "string",
                        "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                      },
                      "this_view_id": { "type": "string", "example": "owner" },
                      "other_bank_routing_address": {
                        "type": "string",
                        "example": "gh.29.uk"
                      },
                      "this_bank_id": {
                        "type": "string",
                        "example": "gh.29.uk"
                      },
                      "counterparty_id": {
                        "type": "string",
                        "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                      },
                      "other_account_secondary_routing_scheme": {
                        "type": "string",
                        "example": "IBAN"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty", "Account"],
        "summary": "Create Counterparty (Explicit)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Counterparty (Explicit) for an Account.</p><p>In OBP, there are two types of Counterparty.</p><ul><li><p>Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests</p></li><li><p>Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.</p></li></ul><p>Explicit Counterparties are created for the account / view<br />They are how the user of the view (e.g. account owner) refers to the other side of the transaction</p><p>name : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>description : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>bank_routing_scheme : eg: bankId or bankCode or any other strings</p><p>bank_routing_address : eg: <code>gh.29.uk</code>, must be valid sandbox bankIds</p><p>account_routing_scheme : eg: AccountId or AccountNumber or any other strings</p><p>account_routing_address : eg: <code>1d65db7c-a7b2-4839-af41-95</code>, must be valid accountIds</p><p>other_account_secondary_routing_scheme : eg: IBan or any other strings</p><p>other_account_secondary_routing_address : if it is an IBAN, it should be unique for each counterparty.</p><p>other_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.</p><p>other_branch_routing_address : eg: <code>branch-id-123</code> or you can leave it empty, not useful in sandbox mode.</p><p>is_beneficiary : must be set to <code>true</code> in order to send payments to this counterparty</p><p>bespoke: It supports a list of key-value, you can add it to the counterparty.</p><p>bespoke.key : any info-key you want to add to this counterparty</p><p>bespoke.value : any info-value you want to add to this counterparty</p><p>The view specified by VIEW_ID must have the canAddCounterparty permission</p><p>A minimal example for TransactionRequestType == COUNTERPARTY<br />{<br />&quot;name&quot;: &quot;Tesobe1&quot;,<br />&quot;description&quot;: &quot;Good Company&quot;,<br />&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;is_beneficiary&quot;: true,<br />&quot;other_account_secondary_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_account_secondary_routing_address&quot;: &quot;&quot;,<br />&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />&quot;bespoke&quot;: []<br />}</p><p>A minimal example for TransactionRequestType == SEPA</p><p>{<br />&quot;name&quot;: &quot;Tesobe2&quot;,<br />&quot;description&quot;: &quot;Good Company&quot;,<br />&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;other_account_secondary_routing_scheme&quot;: &quot;IBAN&quot;,<br />&quot;other_account_secondary_routing_address&quot;: &quot;DE89 3704 0044 0532 0130 00&quot;,<br />&quot;is_beneficiary&quot;: true,<br />&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />&quot;bespoke&quot;: []<br />}</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.2.0-createCounterparty",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostCounterpartyJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "other_account_routing_address",
                "other_account_routing_scheme",
                "name",
                "other_account_secondary_routing_address",
                "is_beneficiary",
                "description",
                "other_branch_routing_address",
                "bespoke",
                "other_bank_routing_scheme",
                "other_branch_routing_scheme",
                "other_bank_routing_address",
                "other_account_secondary_routing_scheme"
              ],
              "properties": {
                "other_account_routing_address": {
                  "type": "string",
                  "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
                },
                "other_account_routing_scheme": {
                  "type": "string",
                  "example": "OBP"
                },
                "name": { "type": "string", "example": "CounterpartyName" },
                "other_account_secondary_routing_address": {
                  "type": "string",
                  "example": "DE89370400440532013000"
                },
                "is_beneficiary": { "type": "boolean", "example": "true" },
                "description": { "type": "string", "example": "My landlord" },
                "other_branch_routing_address": {
                  "type": "string",
                  "example": "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
                },
                "bespoke": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~get~responses~200~schema~properties~counterparties~items~properties~bespoke~items"
                },
                "other_bank_routing_scheme": {
                  "type": "string",
                  "example": "OBP"
                },
                "other_branch_routing_scheme": {
                  "type": "string",
                  "example": "OBP"
                },
                "other_bank_routing_address": {
                  "type": "string",
                  "example": "gh.29.uk"
                },
                "other_account_secondary_routing_scheme": {
                  "type": "string",
                  "example": "IBAN"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "other_account_routing_address",
                "other_account_routing_scheme",
                "created_by_user_id",
                "name",
                "other_account_secondary_routing_address",
                "is_beneficiary",
                "description",
                "other_branch_routing_address",
                "bespoke",
                "other_bank_routing_scheme",
                "other_branch_routing_scheme",
                "this_account_id",
                "this_view_id",
                "metadata",
                "other_bank_routing_address",
                "this_bank_id",
                "counterparty_id",
                "other_account_secondary_routing_scheme"
              ],
              "properties": {
                "other_account_routing_address": {
                  "type": "string",
                  "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
                },
                "other_account_routing_scheme": {
                  "type": "string",
                  "example": "OBP"
                },
                "created_by_user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "name": { "type": "string", "example": "CounterpartyName" },
                "other_account_secondary_routing_address": {
                  "type": "string",
                  "example": "DE89370400440532013000"
                },
                "is_beneficiary": { "type": "boolean", "example": "true" },
                "description": { "type": "string", "example": "My landlord" },
                "other_branch_routing_address": {
                  "type": "string",
                  "example": "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
                },
                "bespoke": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~get~responses~200~schema~properties~counterparties~items~properties~bespoke~items"
                },
                "other_bank_routing_scheme": {
                  "type": "string",
                  "example": "OBP"
                },
                "other_branch_routing_scheme": {
                  "type": "string",
                  "example": "OBP"
                },
                "this_account_id": {
                  "type": "string",
                  "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                },
                "this_view_id": { "type": "string", "example": "owner" },
                "metadata": {
                  "required": [
                    "public_alias",
                    "physical_location",
                    "image_url",
                    "private_alias",
                    "url",
                    "more_info",
                    "corporate_location",
                    "open_corporates_url"
                  ],
                  "properties": {
                    "public_alias": { "type": "string", "example": "String" },
                    "physical_location": {
                      "required": ["latitude", "longitude", "date", "user"],
                      "properties": {
                        "latitude": {
                          "type": "number",
                          "format": "double",
                          "example": "11.45"
                        },
                        "longitude": {
                          "type": "number",
                          "format": "double",
                          "example": "11.45"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "example": "2017-09-19T00:00:00Z"
                        },
                        "user": {
                          "required": ["id", "provider", "username"],
                          "properties": {
                            "id": { "type": "string", "example": "123" },
                            "provider": {
                              "type": "string",
                              "example": "http://127.0.0.1:8080"
                            },
                            "username": {
                              "type": "string",
                              "example": "felixsmith"
                            }
                          }
                        }
                      }
                    },
                    "image_url": { "type": "string", "example": "String" },
                    "private_alias": { "type": "string", "example": "String" },
                    "url": { "type": "string", "example": "String" },
                    "more_info": { "type": "string", "example": "String" },
                    "corporate_location": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~post~responses~201~schema~properties~metadata~properties~physical_location",
                    "open_corporates_url": {
                      "type": "string",
                      "example": "String"
                    }
                  }
                },
                "other_bank_routing_address": {
                  "type": "string",
                  "example": "gh.29.uk"
                },
                "this_bank_id": { "type": "string", "example": "gh.29.uk" },
                "counterparty_id": {
                  "type": "string",
                  "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "other_account_secondary_routing_scheme": {
                  "type": "string",
                  "example": "IBAN"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/{COUNTERPARTY_ID}": {
      "get": {
        "tags": [
          "Counterparty",
          "Payment Initiation Service (PIS)",
          "Counterparty-Metadata",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Counterparty by Counterparty Id (Explicit)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Information returned about the Counterparty specified by COUNTERPARTY_ID:</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.2.0-getExplictCounterpartyById",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "COUNTERPARTY_ID",
            "description": "the counterparty id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/credit_cards/orders": {
      "get": {
        "tags": ["Card", "New-Style"],
        "summary": "Get status of Credit Card order ",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<pre><code>  Get status of Credit Card orders</code></pre><p>Get all orders</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getStatusOfCreditCardOrder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["cards"],
              "properties": {
                "cards": {
                  "type": "array",
                  "items": {
                    "required": ["card_type", "card_description", "use_type"],
                    "properties": {
                      "card_type": { "type": "string", "example": "5" },
                      "card_description": {
                        "type": "string",
                        "example": "good"
                      },
                      "use_type": { "type": "string", "example": "3" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/funds-available": {
      "get": {
        "tags": [
          "Account",
          "Confirmation of Funds Service (PIIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Check Available Funds",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Check Available Funds<br />Mandatory URL parameters:</p><ul><li>amount=NUMBER</li><li>currency=STRING</li></ul><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-checkFundsAvailable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["answer", "date", "available_funds_request_id"],
              "properties": {
                "answer": { "type": "string", "example": "yes" },
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-08-03T06:25:38Z"
                },
                "available_funds_request_id": {
                  "type": "string",
                  "example": "c4ykz59svsr9b7fmdxk8ezs7"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts": {
      "get": {
        "tags": ["Counterparty", "Account", "New-Style"],
        "summary": "Get Other Accounts of one Account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns data about all the other accounts that have shared at least one transaction with the ACCOUNT_ID at BANK_ID.<br />Authentication is Optional</p><p>Authentication is required if the view VIEW_ID is not public.</p>",
        "operationId": "OBPv3.0.0-getOtherAccountsForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["other_accounts"],
              "properties": {
                "other_accounts": {
                  "type": "array",
                  "items": {
                    "required": [
                      "account_routings",
                      "holder",
                      "id",
                      "metadata",
                      "bank_routing"
                    ],
                    "properties": {
                      "account_routings": {
                        "type": "array",
                        "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                      },
                      "holder": {
                        "required": ["name", "is_alias"],
                        "properties": {
                          "name": { "type": "string", "example": "OBP" },
                          "is_alias": { "type": "boolean", "example": "true" }
                        }
                      },
                      "id": {
                        "type": "string",
                        "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                      },
                      "metadata": {
                        "required": [
                          "public_alias",
                          "image_URL",
                          "physical_location",
                          "private_alias",
                          "URL",
                          "more_info",
                          "corporate_location",
                          "open_corporates_URL"
                        ],
                        "properties": {
                          "public_alias": {
                            "type": "string",
                            "example": "NONE"
                          },
                          "image_URL": {
                            "type": "string",
                            "example": "www.openbankproject.com"
                          },
                          "physical_location": {
                            "required": [
                              "latitude",
                              "longitude",
                              "date",
                              "user"
                            ],
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "format": "double",
                                "example": "1.231"
                              },
                              "longitude": {
                                "type": "number",
                                "format": "double",
                                "example": "1.231"
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "example": "2017-09-19T00:00:00Z"
                              },
                              "user": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~owners~items"
                            }
                          },
                          "private_alias": {
                            "type": "string",
                            "example": "NONE"
                          },
                          "URL": {
                            "type": "string",
                            "example": "www.openbankproject.com"
                          },
                          "more_info": {
                            "type": "string",
                            "example": "www.openbankproject.com"
                          },
                          "corporate_location": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~metadata~properties~physical_location",
                          "open_corporates_URL": {
                            "type": "string",
                            "example": "www.openbankproject.com"
                          }
                        }
                      },
                      "bank_routing": "~paths~/obp/v3.1.0/banks~get~responses~200~schema~properties~banks~items~properties~bank_routing"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. "
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}": {
      "get": {
        "tags": ["Counterparty", "Account", "New-Style"],
        "summary": "Get Other Account by Id",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID at BANK_ID.<br />Authentication is Optional</p><p>Authentication is required if the view is not public.</p>",
        "operationId": "OBPv3.0.0-getOtherAccountByIdForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata": {
      "get": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Get Other Account Metadata",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get metadata of one other account.<br />Returns only the metadata about one other bank account (OTHER_ACCOUNT_ID) that had shared at least one transaction with ACCOUNT_ID at BANK_ID.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-getOtherAccountMetadata",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~metadata"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location": {
      "delete": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Delete Counterparty Corporate Location",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete corporate location of other bank account. Delete the geolocation of the counterparty's registered address</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteCounterpartyCorporateLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty-Metadata", "Counterparty"],
        "summary": "Add Corporate Location to Counterparty",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add the geolocation of the counterparty's registered address</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-addCounterpartyCorporateLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CorporateLocationJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["corporate_location"],
              "properties": {
                "corporate_location": {
                  "required": ["latitude", "longitude"],
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double",
                      "example": "1.532"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double",
                      "example": "1.535"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Counterparty-Metadata", "Counterparty"],
        "summary": "Update Counterparty Corporate Location",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the geolocation of the counterparty's registered address</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-updateCounterpartyCorporateLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CorporateLocationJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url": {
      "delete": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Delete Counterparty Image URL",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete image url of other bank account</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-deleteCounterpartyImageUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Add image url to other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add a url that points to the logo of the counterparty</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-addCounterpartyImageUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ImageUrlJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["image_URL"],
              "properties": {
                "image_URL": { "type": "string", "example": "String" }
              }
            }
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Update Counterparty Image Url",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the url that points to the logo of the counterparty</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-updateCounterpartyImageUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ImageUrlJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info": {
      "delete": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Delete more info of other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteCounterpartyMoreInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Add Counterparty More Info",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add a description of the counter party from the perpestive of the account e.g. My dentist</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-addCounterpartyMoreInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "MoreInfoJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["more_info"],
              "properties": {
                "more_info": { "type": "string", "example": "String" }
              }
            }
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Update Counterparty More Info",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the more info description of the counter party from the perpestive of the account e.g. My dentist</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-updateCounterpartyMoreInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "MoreInfoJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url": {
      "delete": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Delete Counterparty Open Corporates URL",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete open corporate url of other bank account</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteCounterpartyOpenCorporatesUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Add Open Corporates URL to Counterparty",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add open corporates url to other bank account</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-addCounterpartyOpenCorporatesUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "OpenCorporateUrlJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["open_corporates_URL"],
              "properties": {
                "open_corporates_URL": { "type": "string", "example": "String" }
              }
            }
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Update Open Corporates Url of Counterparty",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update open corporate url of other bank account</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-updateCounterpartyOpenCorporatesUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "OpenCorporateUrlJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location": {
      "delete": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Delete Counterparty Physical Location",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete physical location of other bank account</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteCounterpartyPhysicalLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty-Metadata", "Counterparty"],
        "summary": "Add physical location to other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add geocoordinates of the counterparty's main location</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-addCounterpartyPhysicalLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PhysicalLocationJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["physical_location"],
              "properties": {
                "physical_location": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location~post~parameters~0~schema~properties~corporate_location"
              }
            }
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Counterparty-Metadata", "Counterparty"],
        "summary": "Update Counterparty Physical Location",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update geocoordinates of the counterparty's main location</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-updateCounterpartyPhysicalLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PhysicalLocationJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url": {
      "delete": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Delete url of other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteCounterpartyUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Add url to other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>A url which represents the counterparty (home page url etc.)</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-addCounterpartyUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "UrlJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["URL"],
              "properties": { "URL": { "type": "string", "example": "String" } }
            }
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Update url of other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>A url which represents the counterparty (home page url etc.)</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-updateCounterpartyUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "UrlJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias": {
      "delete": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Delete Counterparty Private Alias",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Deletes the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
        "operationId": "OBPv1.2.1-deleteCounterpartyPrivateAlias",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Get Other Account Private Alias",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
        "operationId": "OBPv1.2.1-getOtherAccountPrivateAlias",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["alias"],
              "properties": {
                "alias": { "type": "string", "example": "String" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Create Other Account Private Alias",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Creates a private alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
        "operationId": "OBPv1.2.1-addOtherAccountPrivateAlias",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AliasJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias~get~responses~200~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Update Counterparty Private Alias",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Updates the private alias of the counterparty (AKA other account) OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
        "operationId": "OBPv1.2.1-updateCounterpartyPrivateAlias",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AliasJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias~get~responses~200~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias": {
      "delete": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Delete Counterparty Public Alias",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Deletes the public alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
        "operationId": "OBPv1.2.1-deleteCounterpartyPublicAlias",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Get public alias of other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the public alias of the other account OTHER_ACCOUNT_ID.<br />Authentication is Optional<br />Authentication is Mandatory if the view is not public.</p>",
        "operationId": "OBPv1.2.1-getCounterpartyPublicAlias",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Add public alias to other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Creates the public alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p><p>Note: Public aliases are automatically generated for new 'other accounts / counterparties', so this call should only be used if<br />the public alias was deleted.</p><p>The VIEW_ID parameter should be a view the caller is permitted to access to and that has permission to create public aliases.</p>",
        "operationId": "OBPv1.2.1-addCounterpartyPublicAlias",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AliasJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias~get~responses~200~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
        "summary": "Update public alias of other bank account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Updates the public alias of the other account / counterparty OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
        "operationId": "OBPv1.2.1-updateCounterpartyPublicAlias",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AliasJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias~get~responses~200~schema"
          },
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types": {
      "get": {
        "tags": [
          "Transaction-Request",
          "Payment Initiation Service (PIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Transaction Request Types for Account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the Transaction Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are the ways this API Server can create a Transaction via a Transaction Request<br />(as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p><p>A Transaction Request Type internally determines:</p><ul><li>the required Transaction Request 'body' i.e. fields that define the 'what' and 'to' of a Transaction Request,</li><li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li><li>the threshold of that challenge.</li></ul><p>For instance in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p><p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.4.0-getTransactionRequestTypes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["transaction_request_types"],
              "properties": {
                "transaction_request_types": {
                  "type": "array",
                  "items": {
                    "required": ["value", "charge"],
                    "properties": {
                      "value": { "type": "string", "example": "10" },
                      "charge": {
                        "required": ["summary", "value"],
                        "properties": {
                          "summary": {
                            "type": "string",
                            "example": "The bank fixed charge"
                          },
                          "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests": {
      "post": {
        "tags": [
          "Transaction-Request",
          "Payment Initiation Service (PIS)",
          "PSD2"
        ],
        "summary": "Create Transaction Request (COUNTERPARTY)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Special instructions for COUNTERPARTY:</p><p>When using a COUNTERPARTY to create a Transaction Request, specificy the counterparty_id in the body of the request.<br />The routing details of the counterparty will be forwarded for the transfer.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&quot;XAF&quot;:{<br />&quot;HKD&quot;:0.0135503,<br />&quot;AUD&quot;:0.00228226,<br />&quot;KRW&quot;:1.87975,<br />&quot;JOD&quot;:0.00127784,<br />&quot;GBP&quot;:0.00131092,<br />&quot;MXN&quot;:0.0396,<br />&quot;AED&quot;:0.00601555,<br />&quot;INR&quot;:0.110241,<br />&quot;JPY&quot;:0.185328,<br />&quot;USD&quot;:0.00163773,<br />&quot;ILS&quot;:0.00641333,<br />&quot;EUR&quot;:0.00152449<br />},<br />&quot;HKD&quot;:{<br />&quot;XAF&quot;:73.8049,<br />&quot;AUD&quot;:0.178137,<br />&quot;KRW&quot;:143.424,<br />&quot;JOD&quot;:0.0903452,<br />&quot;GBP&quot;:0.0985443,<br />&quot;MXN&quot;:2.8067,<br />&quot;AED&quot;:0.467977,<br />&quot;INR&quot;:9.09325,<br />&quot;JPY&quot;:14.0867,<br />&quot;USD&quot;:0.127427,<br />&quot;ILS&quot;:0.460862,<br />&quot;EUR&quot;:0.112495<br />},<br />&quot;AUD&quot;:{<br />&quot;XAF&quot;:438.162,<br />&quot;HKD&quot;:5.61346,<br />&quot;KRW&quot;:895.304,<br />&quot;JOD&quot;:0.556152,<br />&quot;GBP&quot;:0.609788,<br />&quot;MXN&quot;:16.0826,<br />&quot;AED&quot;:2.88368,<br />&quot;INR&quot;:50.4238,<br />&quot;JPY&quot;:87.0936,<br />&quot;USD&quot;:0.785256,<br />&quot;ILS&quot;:2.83558,<br />&quot;EUR&quot;:0.667969<br />},<br />&quot;KRW&quot;:{<br />&quot;XAF&quot;:0.531986,<br />&quot;HKD&quot;:0.00697233,<br />&quot;AUD&quot;:0.00111694,<br />&quot;JOD&quot;:6.30634E-4,<br />&quot;GBP&quot;:6.97389E-4,<br />&quot;MXN&quot;:0.0183,<br />&quot;AED&quot;:0.00320019,<br />&quot;INR&quot;:0.0586469,<br />&quot;JPY&quot;:0.0985917,<br />&quot;USD&quot;:8.7125E-4,<br />&quot;ILS&quot;:0.00316552,<br />&quot;EUR&quot;:8.11008E-4<br />},<br />&quot;JOD&quot;:{<br />&quot;XAF&quot;:782.572,<br />&quot;HKD&quot;:11.0687,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1585.68,<br />&quot;GBP&quot;:1.06757,<br />&quot;MXN&quot;:30.8336,<br />&quot;AED&quot;:5.18231,<br />&quot;INR&quot;:90.1236,<br />&quot;JPY&quot;:156.304,<br />&quot;USD&quot;:1.41112,<br />&quot;ILS&quot;:5.02018,<br />&quot;EUR&quot;:0.237707<br />},<br />&quot;GBP&quot;:{<br />&quot;XAF&quot;:762.826,<br />&quot;HKD&quot;:10.1468,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1433.92,<br />&quot;JOD&quot;:0.936707,<br />&quot;MXN&quot;:29.242,<br />&quot;AED&quot;:4.58882,<br />&quot;INR&quot;:84.095,<br />&quot;JPY&quot;:141.373,<br />&quot;USD&quot;:1.2493,<br />&quot;ILS&quot;:4.7002,<br />&quot;EUR&quot;:1.16278<br />},<br />&quot;MXN&quot;:{<br />&quot;XAF&quot;:25.189,<br />&quot;HKD&quot;:0.3562,<br />&quot;AUD&quot;:0.0621,<br />&quot;KRW&quot;:54.4512,<br />&quot;JOD&quot;:0.0324,<br />&quot;GBP&quot;:0.0341,<br />&quot;AED&quot;:0.1688,<br />&quot;INR&quot;:3.3513,<br />&quot;JPY&quot;:4.8687,<br />&quot;USD&quot;:0.0459,<br />&quot;ILS&quot;:0.1541,<br />&quot;EUR&quot;:0.0384<br />},<br />&quot;AED&quot;:{<br />&quot;XAF&quot;:166.236,<br />&quot;HKD&quot;:2.13685,<br />&quot;AUD&quot;:0.346779,<br />&quot;KRW&quot;:312.482,<br />&quot;GBP&quot;:0.217921,<br />&quot;MXN&quot;:5.9217,<br />&quot;AED&quot;:0.192964,<br />&quot;INR&quot;:18.3255,<br />&quot;JPY&quot;:30.8081,<br />&quot;USD&quot;:0.27225,<br />&quot;ILS&quot;:0.968033,<br />&quot;EUR&quot;:0.253425<br />},<br />&quot;INR&quot;:{<br />&quot;XAF&quot;:9.07101,<br />&quot;HKD&quot;:0.109972,<br />&quot;AUD&quot;:0.0198319,<br />&quot;KRW&quot;:17.0512,<br />&quot;JOD&quot;:0.0110959,<br />&quot;GBP&quot;:0.0118913,<br />&quot;MXN&quot;:0.2983,<br />&quot;AED&quot;:0.0545671,<br />&quot;JPY&quot;:1.68111,<br />&quot;USD&quot;:0.0148559,<br />&quot;ILS&quot;:0.0556764,<br />&quot;EUR&quot;:0.0138287<br />},<br />&quot;JPY&quot;:{<br />&quot;XAF&quot;:5.39585,<br />&quot;HKD&quot;:0.0709891,<br />&quot;AUD&quot;:0.0114819,<br />&quot;KRW&quot;:10.1428,<br />&quot;JOD&quot;:0.00639777,<br />&quot;GBP&quot;:0.0070735,<br />&quot;MXN&quot;:0.2053,<br />&quot;AED&quot;:0.032459,<br />&quot;INR&quot;:0.594846,<br />&quot;USD&quot;:0.00883695,<br />&quot;ILS&quot;:0.0320926,<br />&quot;EUR&quot;:0.00822592<br />},<br />&quot;USD&quot;:{<br />&quot;XAF&quot;:610.601,<br />&quot;HKD&quot;:7.84766,<br />&quot;AUD&quot;:1.27347,<br />&quot;KRW&quot;:1147.78,<br />&quot;JOD&quot;:0.708659,<br />&quot;GBP&quot;:0.800446,<br />&quot;MXN&quot;:21.748,<br />&quot;AED&quot;:3.6731,<br />&quot;INR&quot;:67.3135,<br />&quot;JPY&quot;:113.161,<br />&quot;ILS&quot;:3.55495,<br />&quot;EUR&quot;:0.930886<br />},<br />&quot;ILS&quot;:{<br />&quot;XAF&quot;:155.925,<br />&quot;HKD&quot;:2.16985,<br />&quot;AUD&quot;:0.352661,<br />&quot;KRW&quot;:315.903,<br />&quot;JOD&quot;:0.199196,<br />&quot;GBP&quot;:0.212763,<br />&quot;MXN&quot;:6.4871,<br />&quot;AED&quot;:1.03302,<br />&quot;INR&quot;:17.9609,<br />&quot;JPY&quot;:31.1599,<br />&quot;USD&quot;:0.281298,<br />&quot;EUR&quot;:1.19318<br />},<br />&quot;EUR&quot;:{<br />&quot;XAF&quot;:655.957,<br />&quot;HKD&quot;:8.88926,<br />&quot;AUD&quot;:1.49707,<br />&quot;KRW&quot;:1233.03,<br />&quot;JOD&quot;:0.838098,<br />&quot;GBP&quot;:0.860011,<br />&quot;MXN&quot;:26.0359,<br />&quot;AED&quot;:3.94594,<br />&quot;INR&quot;:72.3136,<br />&quot;JPY&quot;:121.567,<br />&quot;USD&quot;:1.07428,<br />&quot;ILS&quot;:4.20494<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-createTransactionRequestCounterparty",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionRequestBodyCounterpartyJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["description", "to", "charge_policy", "value"],
              "properties": {
                "description": {
                  "type": "string",
                  "example": "A description for the transaction to the counterparty"
                },
                "future_date": { "type": "string", "example": "20881230" },
                "to": {
                  "required": ["counterparty_id"],
                  "properties": {
                    "counterparty_id": {
                      "type": "string",
                      "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                    }
                  }
                },
                "charge_policy": { "type": "string", "example": "SHARED" },
                "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit"
              }
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "challenge",
                "start_date",
                "id",
                "end_date",
                "status",
                "from",
                "details",
                "charge",
                "type",
                "transaction_ids"
              ],
              "properties": {
                "challenge": {
                  "required": ["id", "allowed_attempts", "challenge_type"],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "be1a183d-b301-4b83-b855-5eeffdd3526f"
                    },
                    "allowed_attempts": {
                      "type": "integer",
                      "format": "int32",
                      "example": "3"
                    },
                    "challenge_type": {
                      "type": "string",
                      "example": "SANDBOX_TAN"
                    }
                  }
                },
                "start_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "id": {
                  "type": "string",
                  "example": "4050046c-63b3-4868-8a22-14b4181d33a6"
                },
                "end_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "status": { "type": "string", "example": "COMPLETED" },
                "from": {
                  "required": ["bank_id", "account_id"],
                  "properties": {
                    "bank_id": { "type": "string", "example": "gh.29.uk" },
                    "account_id": {
                      "type": "string",
                      "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                    }
                  }
                },
                "details": {
                  "required": ["description", "value"],
                  "properties": {
                    "to_transfer_to_phone": {
                      "required": [
                        "description",
                        "to",
                        "from",
                        "message",
                        "value"
                      ],
                      "properties": {
                        "description": {
                          "type": "string",
                          "example": "String"
                        },
                        "to": {
                          "required": ["mobile_phone_number"],
                          "properties": {
                            "mobile_phone_number": {
                              "type": "string",
                              "example": "+44 07972 444 876"
                            }
                          }
                        },
                        "from": {
                          "required": ["mobile_phone_number", "nickname"],
                          "properties": {
                            "mobile_phone_number": {
                              "type": "string",
                              "example": "+44 07972 444 876"
                            },
                            "nickname": {
                              "type": "string",
                              "example": "String"
                            }
                          }
                        },
                        "message": { "type": "string", "example": "String" },
                        "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit"
                      }
                    },
                    "description": { "type": "string", "example": "String" },
                    "to_transfer_to_atm": {
                      "required": [
                        "description",
                        "to",
                        "from",
                        "message",
                        "value"
                      ],
                      "properties": {
                        "description": {
                          "type": "string",
                          "example": "String"
                        },
                        "to": {
                          "required": [
                            "legal_name",
                            "date_of_birth",
                            "mobile_phone_number",
                            "kyc_document"
                          ],
                          "properties": {
                            "legal_name": {
                              "type": "string",
                              "example": "Eveline Tripman"
                            },
                            "date_of_birth": {
                              "type": "string",
                              "example": "20181230"
                            },
                            "mobile_phone_number": {
                              "type": "string",
                              "example": "+44 07972 444 876"
                            },
                            "kyc_document": {
                              "required": ["type", "number"],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "String"
                                },
                                "number": {
                                  "type": "string",
                                  "example": "String"
                                }
                              }
                            }
                          }
                        },
                        "from": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_phone~properties~from",
                        "message": { "type": "string", "example": "String" },
                        "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit"
                      }
                    },
                    "to_counterparty": {
                      "required": ["counterparty_id"],
                      "properties": {
                        "counterparty_id": {
                          "type": "string",
                          "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                        }
                      }
                    },
                    "to_sepa_credit_transfers": {
                      "required": [
                        "debtorAccount",
                        "instructedAmount",
                        "creditorAccount",
                        "creditorName"
                      ],
                      "properties": {
                        "debtorAccount": {
                          "required": ["iban"],
                          "properties": {
                            "iban": {
                              "type": "string",
                              "example": "GB33BUKB20201555555555"
                            }
                          }
                        },
                        "instructedAmount": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                        "creditorAccount": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_sepa_credit_transfers~properties~debtorAccount",
                        "creditorName": {
                          "type": "string",
                          "example": "John Miles"
                        }
                      }
                    },
                    "to_sepa": {
                      "required": ["iban"],
                      "properties": {
                        "iban": { "type": "string", "example": "String" }
                      }
                    },
                    "to_transfer_to_account": {
                      "required": [
                        "description",
                        "future_date",
                        "to",
                        "transfer_type",
                        "value"
                      ],
                      "properties": {
                        "description": {
                          "type": "string",
                          "example": "String"
                        },
                        "future_date": {
                          "type": "string",
                          "example": "20181230"
                        },
                        "to": {
                          "required": [
                            "name",
                            "bank_code",
                            "branch_number",
                            "account"
                          ],
                          "properties": {
                            "name": { "type": "string", "example": "String" },
                            "bank_code": {
                              "type": "string",
                              "example": "String"
                            },
                            "branch_number": {
                              "type": "string",
                              "example": "String"
                            },
                            "account": {
                              "required": ["number", "iban"],
                              "properties": {
                                "number": {
                                  "type": "string",
                                  "example": "String"
                                },
                                "iban": {
                                  "type": "string",
                                  "example": "String"
                                }
                              }
                            }
                          }
                        },
                        "transfer_type": {
                          "type": "string",
                          "example": "String"
                        },
                        "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit"
                      }
                    },
                    "value": {
                      "required": ["currency", "amount"],
                      "properties": {
                        "currency": { "type": "string", "example": "EUR" },
                        "amount": { "type": "string", "example": "100" }
                      }
                    },
                    "to_sandbox_tan": {
                      "required": ["bank_id", "account_id"],
                      "properties": {
                        "bank_id": { "type": "string", "example": "String" },
                        "account_id": { "type": "string", "example": "String" }
                      }
                    }
                  }
                },
                "charge": {
                  "required": ["summary", "value"],
                  "properties": {
                    "summary": { "type": "string", "example": "Rent the flat" },
                    "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit"
                  }
                },
                "type": { "type": "string", "example": "SANDBOX_TAN" },
                "transaction_ids": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/FREE_FORM/transaction-requests": {
      "post": {
        "tags": ["Transaction-Request", "Payment Initiation Service (PIS)"],
        "summary": "Create Transaction Request (FREE_FORM).",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&quot;XAF&quot;:{<br />&quot;HKD&quot;:0.0135503,<br />&quot;AUD&quot;:0.00228226,<br />&quot;KRW&quot;:1.87975,<br />&quot;JOD&quot;:0.00127784,<br />&quot;GBP&quot;:0.00131092,<br />&quot;MXN&quot;:0.0396,<br />&quot;AED&quot;:0.00601555,<br />&quot;INR&quot;:0.110241,<br />&quot;JPY&quot;:0.185328,<br />&quot;USD&quot;:0.00163773,<br />&quot;ILS&quot;:0.00641333,<br />&quot;EUR&quot;:0.00152449<br />},<br />&quot;HKD&quot;:{<br />&quot;XAF&quot;:73.8049,<br />&quot;AUD&quot;:0.178137,<br />&quot;KRW&quot;:143.424,<br />&quot;JOD&quot;:0.0903452,<br />&quot;GBP&quot;:0.0985443,<br />&quot;MXN&quot;:2.8067,<br />&quot;AED&quot;:0.467977,<br />&quot;INR&quot;:9.09325,<br />&quot;JPY&quot;:14.0867,<br />&quot;USD&quot;:0.127427,<br />&quot;ILS&quot;:0.460862,<br />&quot;EUR&quot;:0.112495<br />},<br />&quot;AUD&quot;:{<br />&quot;XAF&quot;:438.162,<br />&quot;HKD&quot;:5.61346,<br />&quot;KRW&quot;:895.304,<br />&quot;JOD&quot;:0.556152,<br />&quot;GBP&quot;:0.609788,<br />&quot;MXN&quot;:16.0826,<br />&quot;AED&quot;:2.88368,<br />&quot;INR&quot;:50.4238,<br />&quot;JPY&quot;:87.0936,<br />&quot;USD&quot;:0.785256,<br />&quot;ILS&quot;:2.83558,<br />&quot;EUR&quot;:0.667969<br />},<br />&quot;KRW&quot;:{<br />&quot;XAF&quot;:0.531986,<br />&quot;HKD&quot;:0.00697233,<br />&quot;AUD&quot;:0.00111694,<br />&quot;JOD&quot;:6.30634E-4,<br />&quot;GBP&quot;:6.97389E-4,<br />&quot;MXN&quot;:0.0183,<br />&quot;AED&quot;:0.00320019,<br />&quot;INR&quot;:0.0586469,<br />&quot;JPY&quot;:0.0985917,<br />&quot;USD&quot;:8.7125E-4,<br />&quot;ILS&quot;:0.00316552,<br />&quot;EUR&quot;:8.11008E-4<br />},<br />&quot;JOD&quot;:{<br />&quot;XAF&quot;:782.572,<br />&quot;HKD&quot;:11.0687,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1585.68,<br />&quot;GBP&quot;:1.06757,<br />&quot;MXN&quot;:30.8336,<br />&quot;AED&quot;:5.18231,<br />&quot;INR&quot;:90.1236,<br />&quot;JPY&quot;:156.304,<br />&quot;USD&quot;:1.41112,<br />&quot;ILS&quot;:5.02018,<br />&quot;EUR&quot;:0.237707<br />},<br />&quot;GBP&quot;:{<br />&quot;XAF&quot;:762.826,<br />&quot;HKD&quot;:10.1468,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1433.92,<br />&quot;JOD&quot;:0.936707,<br />&quot;MXN&quot;:29.242,<br />&quot;AED&quot;:4.58882,<br />&quot;INR&quot;:84.095,<br />&quot;JPY&quot;:141.373,<br />&quot;USD&quot;:1.2493,<br />&quot;ILS&quot;:4.7002,<br />&quot;EUR&quot;:1.16278<br />},<br />&quot;MXN&quot;:{<br />&quot;XAF&quot;:25.189,<br />&quot;HKD&quot;:0.3562,<br />&quot;AUD&quot;:0.0621,<br />&quot;KRW&quot;:54.4512,<br />&quot;JOD&quot;:0.0324,<br />&quot;GBP&quot;:0.0341,<br />&quot;AED&quot;:0.1688,<br />&quot;INR&quot;:3.3513,<br />&quot;JPY&quot;:4.8687,<br />&quot;USD&quot;:0.0459,<br />&quot;ILS&quot;:0.1541,<br />&quot;EUR&quot;:0.0384<br />},<br />&quot;AED&quot;:{<br />&quot;XAF&quot;:166.236,<br />&quot;HKD&quot;:2.13685,<br />&quot;AUD&quot;:0.346779,<br />&quot;KRW&quot;:312.482,<br />&quot;GBP&quot;:0.217921,<br />&quot;MXN&quot;:5.9217,<br />&quot;AED&quot;:0.192964,<br />&quot;INR&quot;:18.3255,<br />&quot;JPY&quot;:30.8081,<br />&quot;USD&quot;:0.27225,<br />&quot;ILS&quot;:0.968033,<br />&quot;EUR&quot;:0.253425<br />},<br />&quot;INR&quot;:{<br />&quot;XAF&quot;:9.07101,<br />&quot;HKD&quot;:0.109972,<br />&quot;AUD&quot;:0.0198319,<br />&quot;KRW&quot;:17.0512,<br />&quot;JOD&quot;:0.0110959,<br />&quot;GBP&quot;:0.0118913,<br />&quot;MXN&quot;:0.2983,<br />&quot;AED&quot;:0.0545671,<br />&quot;JPY&quot;:1.68111,<br />&quot;USD&quot;:0.0148559,<br />&quot;ILS&quot;:0.0556764,<br />&quot;EUR&quot;:0.0138287<br />},<br />&quot;JPY&quot;:{<br />&quot;XAF&quot;:5.39585,<br />&quot;HKD&quot;:0.0709891,<br />&quot;AUD&quot;:0.0114819,<br />&quot;KRW&quot;:10.1428,<br />&quot;JOD&quot;:0.00639777,<br />&quot;GBP&quot;:0.0070735,<br />&quot;MXN&quot;:0.2053,<br />&quot;AED&quot;:0.032459,<br />&quot;INR&quot;:0.594846,<br />&quot;USD&quot;:0.00883695,<br />&quot;ILS&quot;:0.0320926,<br />&quot;EUR&quot;:0.00822592<br />},<br />&quot;USD&quot;:{<br />&quot;XAF&quot;:610.601,<br />&quot;HKD&quot;:7.84766,<br />&quot;AUD&quot;:1.27347,<br />&quot;KRW&quot;:1147.78,<br />&quot;JOD&quot;:0.708659,<br />&quot;GBP&quot;:0.800446,<br />&quot;MXN&quot;:21.748,<br />&quot;AED&quot;:3.6731,<br />&quot;INR&quot;:67.3135,<br />&quot;JPY&quot;:113.161,<br />&quot;ILS&quot;:3.55495,<br />&quot;EUR&quot;:0.930886<br />},<br />&quot;ILS&quot;:{<br />&quot;XAF&quot;:155.925,<br />&quot;HKD&quot;:2.16985,<br />&quot;AUD&quot;:0.352661,<br />&quot;KRW&quot;:315.903,<br />&quot;JOD&quot;:0.199196,<br />&quot;GBP&quot;:0.212763,<br />&quot;MXN&quot;:6.4871,<br />&quot;AED&quot;:1.03302,<br />&quot;INR&quot;:17.9609,<br />&quot;JPY&quot;:31.1599,<br />&quot;USD&quot;:0.281298,<br />&quot;EUR&quot;:1.19318<br />},<br />&quot;EUR&quot;:{<br />&quot;XAF&quot;:655.957,<br />&quot;HKD&quot;:8.88926,<br />&quot;AUD&quot;:1.49707,<br />&quot;KRW&quot;:1233.03,<br />&quot;JOD&quot;:0.838098,<br />&quot;GBP&quot;:0.860011,<br />&quot;MXN&quot;:26.0359,<br />&quot;AED&quot;:3.94594,<br />&quot;INR&quot;:72.3136,<br />&quot;JPY&quot;:121.567,<br />&quot;USD&quot;:1.07428,<br />&quot;ILS&quot;:4.20494<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-createTransactionRequestFreeForm",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionRequestBodyFreeFormJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["value", "description"],
              "properties": {
                "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "description": {
                  "type": "string",
                  "example": "This is a FREE_FORM Transaction Request"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SANDBOX_TAN/transaction-requests": {
      "post": {
        "tags": [
          "Transaction-Request",
          "Payment Initiation Service (PIS)",
          "PSD2"
        ],
        "summary": "Create Transaction Request (SANDBOX_TAN)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>When using SANDBOX_TAN, the payee is set in the request body.</p><p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&quot;XAF&quot;:{<br />&quot;HKD&quot;:0.0135503,<br />&quot;AUD&quot;:0.00228226,<br />&quot;KRW&quot;:1.87975,<br />&quot;JOD&quot;:0.00127784,<br />&quot;GBP&quot;:0.00131092,<br />&quot;MXN&quot;:0.0396,<br />&quot;AED&quot;:0.00601555,<br />&quot;INR&quot;:0.110241,<br />&quot;JPY&quot;:0.185328,<br />&quot;USD&quot;:0.00163773,<br />&quot;ILS&quot;:0.00641333,<br />&quot;EUR&quot;:0.00152449<br />},<br />&quot;HKD&quot;:{<br />&quot;XAF&quot;:73.8049,<br />&quot;AUD&quot;:0.178137,<br />&quot;KRW&quot;:143.424,<br />&quot;JOD&quot;:0.0903452,<br />&quot;GBP&quot;:0.0985443,<br />&quot;MXN&quot;:2.8067,<br />&quot;AED&quot;:0.467977,<br />&quot;INR&quot;:9.09325,<br />&quot;JPY&quot;:14.0867,<br />&quot;USD&quot;:0.127427,<br />&quot;ILS&quot;:0.460862,<br />&quot;EUR&quot;:0.112495<br />},<br />&quot;AUD&quot;:{<br />&quot;XAF&quot;:438.162,<br />&quot;HKD&quot;:5.61346,<br />&quot;KRW&quot;:895.304,<br />&quot;JOD&quot;:0.556152,<br />&quot;GBP&quot;:0.609788,<br />&quot;MXN&quot;:16.0826,<br />&quot;AED&quot;:2.88368,<br />&quot;INR&quot;:50.4238,<br />&quot;JPY&quot;:87.0936,<br />&quot;USD&quot;:0.785256,<br />&quot;ILS&quot;:2.83558,<br />&quot;EUR&quot;:0.667969<br />},<br />&quot;KRW&quot;:{<br />&quot;XAF&quot;:0.531986,<br />&quot;HKD&quot;:0.00697233,<br />&quot;AUD&quot;:0.00111694,<br />&quot;JOD&quot;:6.30634E-4,<br />&quot;GBP&quot;:6.97389E-4,<br />&quot;MXN&quot;:0.0183,<br />&quot;AED&quot;:0.00320019,<br />&quot;INR&quot;:0.0586469,<br />&quot;JPY&quot;:0.0985917,<br />&quot;USD&quot;:8.7125E-4,<br />&quot;ILS&quot;:0.00316552,<br />&quot;EUR&quot;:8.11008E-4<br />},<br />&quot;JOD&quot;:{<br />&quot;XAF&quot;:782.572,<br />&quot;HKD&quot;:11.0687,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1585.68,<br />&quot;GBP&quot;:1.06757,<br />&quot;MXN&quot;:30.8336,<br />&quot;AED&quot;:5.18231,<br />&quot;INR&quot;:90.1236,<br />&quot;JPY&quot;:156.304,<br />&quot;USD&quot;:1.41112,<br />&quot;ILS&quot;:5.02018,<br />&quot;EUR&quot;:0.237707<br />},<br />&quot;GBP&quot;:{<br />&quot;XAF&quot;:762.826,<br />&quot;HKD&quot;:10.1468,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1433.92,<br />&quot;JOD&quot;:0.936707,<br />&quot;MXN&quot;:29.242,<br />&quot;AED&quot;:4.58882,<br />&quot;INR&quot;:84.095,<br />&quot;JPY&quot;:141.373,<br />&quot;USD&quot;:1.2493,<br />&quot;ILS&quot;:4.7002,<br />&quot;EUR&quot;:1.16278<br />},<br />&quot;MXN&quot;:{<br />&quot;XAF&quot;:25.189,<br />&quot;HKD&quot;:0.3562,<br />&quot;AUD&quot;:0.0621,<br />&quot;KRW&quot;:54.4512,<br />&quot;JOD&quot;:0.0324,<br />&quot;GBP&quot;:0.0341,<br />&quot;AED&quot;:0.1688,<br />&quot;INR&quot;:3.3513,<br />&quot;JPY&quot;:4.8687,<br />&quot;USD&quot;:0.0459,<br />&quot;ILS&quot;:0.1541,<br />&quot;EUR&quot;:0.0384<br />},<br />&quot;AED&quot;:{<br />&quot;XAF&quot;:166.236,<br />&quot;HKD&quot;:2.13685,<br />&quot;AUD&quot;:0.346779,<br />&quot;KRW&quot;:312.482,<br />&quot;GBP&quot;:0.217921,<br />&quot;MXN&quot;:5.9217,<br />&quot;AED&quot;:0.192964,<br />&quot;INR&quot;:18.3255,<br />&quot;JPY&quot;:30.8081,<br />&quot;USD&quot;:0.27225,<br />&quot;ILS&quot;:0.968033,<br />&quot;EUR&quot;:0.253425<br />},<br />&quot;INR&quot;:{<br />&quot;XAF&quot;:9.07101,<br />&quot;HKD&quot;:0.109972,<br />&quot;AUD&quot;:0.0198319,<br />&quot;KRW&quot;:17.0512,<br />&quot;JOD&quot;:0.0110959,<br />&quot;GBP&quot;:0.0118913,<br />&quot;MXN&quot;:0.2983,<br />&quot;AED&quot;:0.0545671,<br />&quot;JPY&quot;:1.68111,<br />&quot;USD&quot;:0.0148559,<br />&quot;ILS&quot;:0.0556764,<br />&quot;EUR&quot;:0.0138287<br />},<br />&quot;JPY&quot;:{<br />&quot;XAF&quot;:5.39585,<br />&quot;HKD&quot;:0.0709891,<br />&quot;AUD&quot;:0.0114819,<br />&quot;KRW&quot;:10.1428,<br />&quot;JOD&quot;:0.00639777,<br />&quot;GBP&quot;:0.0070735,<br />&quot;MXN&quot;:0.2053,<br />&quot;AED&quot;:0.032459,<br />&quot;INR&quot;:0.594846,<br />&quot;USD&quot;:0.00883695,<br />&quot;ILS&quot;:0.0320926,<br />&quot;EUR&quot;:0.00822592<br />},<br />&quot;USD&quot;:{<br />&quot;XAF&quot;:610.601,<br />&quot;HKD&quot;:7.84766,<br />&quot;AUD&quot;:1.27347,<br />&quot;KRW&quot;:1147.78,<br />&quot;JOD&quot;:0.708659,<br />&quot;GBP&quot;:0.800446,<br />&quot;MXN&quot;:21.748,<br />&quot;AED&quot;:3.6731,<br />&quot;INR&quot;:67.3135,<br />&quot;JPY&quot;:113.161,<br />&quot;ILS&quot;:3.55495,<br />&quot;EUR&quot;:0.930886<br />},<br />&quot;ILS&quot;:{<br />&quot;XAF&quot;:155.925,<br />&quot;HKD&quot;:2.16985,<br />&quot;AUD&quot;:0.352661,<br />&quot;KRW&quot;:315.903,<br />&quot;JOD&quot;:0.199196,<br />&quot;GBP&quot;:0.212763,<br />&quot;MXN&quot;:6.4871,<br />&quot;AED&quot;:1.03302,<br />&quot;INR&quot;:17.9609,<br />&quot;JPY&quot;:31.1599,<br />&quot;USD&quot;:0.281298,<br />&quot;EUR&quot;:1.19318<br />},<br />&quot;EUR&quot;:{<br />&quot;XAF&quot;:655.957,<br />&quot;HKD&quot;:8.88926,<br />&quot;AUD&quot;:1.49707,<br />&quot;KRW&quot;:1233.03,<br />&quot;JOD&quot;:0.838098,<br />&quot;GBP&quot;:0.860011,<br />&quot;MXN&quot;:26.0359,<br />&quot;AED&quot;:3.94594,<br />&quot;INR&quot;:72.3136,<br />&quot;JPY&quot;:121.567,<br />&quot;USD&quot;:1.07428,<br />&quot;ILS&quot;:4.20494<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-createTransactionRequestSandboxTan",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionRequestBodyJsonV200 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["to", "value", "description"],
              "properties": {
                "to": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~from",
                "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "description": {
                  "type": "string",
                  "example": "this is for work"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SEPA/transaction-requests": {
      "post": {
        "tags": [
          "Transaction-Request",
          "Payment Initiation Service (PIS)",
          "PSD2"
        ],
        "summary": "Create Transaction Request (SEPA)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Special instructions for SEPA:</p><p>When using a SEPA Transaction Request, you specify the IBAN of a Counterparty in the body of the request.<br />The routing details (IBAN) of the counterparty will be forwarded to the core banking system for the transfer.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&quot;XAF&quot;:{<br />&quot;HKD&quot;:0.0135503,<br />&quot;AUD&quot;:0.00228226,<br />&quot;KRW&quot;:1.87975,<br />&quot;JOD&quot;:0.00127784,<br />&quot;GBP&quot;:0.00131092,<br />&quot;MXN&quot;:0.0396,<br />&quot;AED&quot;:0.00601555,<br />&quot;INR&quot;:0.110241,<br />&quot;JPY&quot;:0.185328,<br />&quot;USD&quot;:0.00163773,<br />&quot;ILS&quot;:0.00641333,<br />&quot;EUR&quot;:0.00152449<br />},<br />&quot;HKD&quot;:{<br />&quot;XAF&quot;:73.8049,<br />&quot;AUD&quot;:0.178137,<br />&quot;KRW&quot;:143.424,<br />&quot;JOD&quot;:0.0903452,<br />&quot;GBP&quot;:0.0985443,<br />&quot;MXN&quot;:2.8067,<br />&quot;AED&quot;:0.467977,<br />&quot;INR&quot;:9.09325,<br />&quot;JPY&quot;:14.0867,<br />&quot;USD&quot;:0.127427,<br />&quot;ILS&quot;:0.460862,<br />&quot;EUR&quot;:0.112495<br />},<br />&quot;AUD&quot;:{<br />&quot;XAF&quot;:438.162,<br />&quot;HKD&quot;:5.61346,<br />&quot;KRW&quot;:895.304,<br />&quot;JOD&quot;:0.556152,<br />&quot;GBP&quot;:0.609788,<br />&quot;MXN&quot;:16.0826,<br />&quot;AED&quot;:2.88368,<br />&quot;INR&quot;:50.4238,<br />&quot;JPY&quot;:87.0936,<br />&quot;USD&quot;:0.785256,<br />&quot;ILS&quot;:2.83558,<br />&quot;EUR&quot;:0.667969<br />},<br />&quot;KRW&quot;:{<br />&quot;XAF&quot;:0.531986,<br />&quot;HKD&quot;:0.00697233,<br />&quot;AUD&quot;:0.00111694,<br />&quot;JOD&quot;:6.30634E-4,<br />&quot;GBP&quot;:6.97389E-4,<br />&quot;MXN&quot;:0.0183,<br />&quot;AED&quot;:0.00320019,<br />&quot;INR&quot;:0.0586469,<br />&quot;JPY&quot;:0.0985917,<br />&quot;USD&quot;:8.7125E-4,<br />&quot;ILS&quot;:0.00316552,<br />&quot;EUR&quot;:8.11008E-4<br />},<br />&quot;JOD&quot;:{<br />&quot;XAF&quot;:782.572,<br />&quot;HKD&quot;:11.0687,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1585.68,<br />&quot;GBP&quot;:1.06757,<br />&quot;MXN&quot;:30.8336,<br />&quot;AED&quot;:5.18231,<br />&quot;INR&quot;:90.1236,<br />&quot;JPY&quot;:156.304,<br />&quot;USD&quot;:1.41112,<br />&quot;ILS&quot;:5.02018,<br />&quot;EUR&quot;:0.237707<br />},<br />&quot;GBP&quot;:{<br />&quot;XAF&quot;:762.826,<br />&quot;HKD&quot;:10.1468,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1433.92,<br />&quot;JOD&quot;:0.936707,<br />&quot;MXN&quot;:29.242,<br />&quot;AED&quot;:4.58882,<br />&quot;INR&quot;:84.095,<br />&quot;JPY&quot;:141.373,<br />&quot;USD&quot;:1.2493,<br />&quot;ILS&quot;:4.7002,<br />&quot;EUR&quot;:1.16278<br />},<br />&quot;MXN&quot;:{<br />&quot;XAF&quot;:25.189,<br />&quot;HKD&quot;:0.3562,<br />&quot;AUD&quot;:0.0621,<br />&quot;KRW&quot;:54.4512,<br />&quot;JOD&quot;:0.0324,<br />&quot;GBP&quot;:0.0341,<br />&quot;AED&quot;:0.1688,<br />&quot;INR&quot;:3.3513,<br />&quot;JPY&quot;:4.8687,<br />&quot;USD&quot;:0.0459,<br />&quot;ILS&quot;:0.1541,<br />&quot;EUR&quot;:0.0384<br />},<br />&quot;AED&quot;:{<br />&quot;XAF&quot;:166.236,<br />&quot;HKD&quot;:2.13685,<br />&quot;AUD&quot;:0.346779,<br />&quot;KRW&quot;:312.482,<br />&quot;GBP&quot;:0.217921,<br />&quot;MXN&quot;:5.9217,<br />&quot;AED&quot;:0.192964,<br />&quot;INR&quot;:18.3255,<br />&quot;JPY&quot;:30.8081,<br />&quot;USD&quot;:0.27225,<br />&quot;ILS&quot;:0.968033,<br />&quot;EUR&quot;:0.253425<br />},<br />&quot;INR&quot;:{<br />&quot;XAF&quot;:9.07101,<br />&quot;HKD&quot;:0.109972,<br />&quot;AUD&quot;:0.0198319,<br />&quot;KRW&quot;:17.0512,<br />&quot;JOD&quot;:0.0110959,<br />&quot;GBP&quot;:0.0118913,<br />&quot;MXN&quot;:0.2983,<br />&quot;AED&quot;:0.0545671,<br />&quot;JPY&quot;:1.68111,<br />&quot;USD&quot;:0.0148559,<br />&quot;ILS&quot;:0.0556764,<br />&quot;EUR&quot;:0.0138287<br />},<br />&quot;JPY&quot;:{<br />&quot;XAF&quot;:5.39585,<br />&quot;HKD&quot;:0.0709891,<br />&quot;AUD&quot;:0.0114819,<br />&quot;KRW&quot;:10.1428,<br />&quot;JOD&quot;:0.00639777,<br />&quot;GBP&quot;:0.0070735,<br />&quot;MXN&quot;:0.2053,<br />&quot;AED&quot;:0.032459,<br />&quot;INR&quot;:0.594846,<br />&quot;USD&quot;:0.00883695,<br />&quot;ILS&quot;:0.0320926,<br />&quot;EUR&quot;:0.00822592<br />},<br />&quot;USD&quot;:{<br />&quot;XAF&quot;:610.601,<br />&quot;HKD&quot;:7.84766,<br />&quot;AUD&quot;:1.27347,<br />&quot;KRW&quot;:1147.78,<br />&quot;JOD&quot;:0.708659,<br />&quot;GBP&quot;:0.800446,<br />&quot;MXN&quot;:21.748,<br />&quot;AED&quot;:3.6731,<br />&quot;INR&quot;:67.3135,<br />&quot;JPY&quot;:113.161,<br />&quot;ILS&quot;:3.55495,<br />&quot;EUR&quot;:0.930886<br />},<br />&quot;ILS&quot;:{<br />&quot;XAF&quot;:155.925,<br />&quot;HKD&quot;:2.16985,<br />&quot;AUD&quot;:0.352661,<br />&quot;KRW&quot;:315.903,<br />&quot;JOD&quot;:0.199196,<br />&quot;GBP&quot;:0.212763,<br />&quot;MXN&quot;:6.4871,<br />&quot;AED&quot;:1.03302,<br />&quot;INR&quot;:17.9609,<br />&quot;JPY&quot;:31.1599,<br />&quot;USD&quot;:0.281298,<br />&quot;EUR&quot;:1.19318<br />},<br />&quot;EUR&quot;:{<br />&quot;XAF&quot;:655.957,<br />&quot;HKD&quot;:8.88926,<br />&quot;AUD&quot;:1.49707,<br />&quot;KRW&quot;:1233.03,<br />&quot;JOD&quot;:0.838098,<br />&quot;GBP&quot;:0.860011,<br />&quot;MXN&quot;:26.0359,<br />&quot;AED&quot;:3.94594,<br />&quot;INR&quot;:72.3136,<br />&quot;JPY&quot;:121.567,<br />&quot;USD&quot;:1.07428,<br />&quot;ILS&quot;:4.20494<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-createTransactionRequestSepa",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionRequestBodySEPAJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["description", "to", "charge_policy", "value"],
              "properties": {
                "description": {
                  "type": "string",
                  "example": "This is a SEPA Transaction Request"
                },
                "future_date": { "type": "string", "example": "20881230" },
                "to": {
                  "required": ["iban"],
                  "properties": {
                    "iban": { "type": "string", "example": "123" }
                  }
                },
                "charge_policy": { "type": "string", "example": "SHARED" },
                "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit"
              }
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge": {
      "post": {
        "tags": [
          "Transaction-Request",
          "Payment Initiation Service (PIS)",
          "PSD2"
        ],
        "summary": "Answer Transaction Request Challenge",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.</p><p>This endpoint totally depends on createTransactionRequest, it need get the following data from createTransactionRequest response body.</p><p>1)<code>TRANSACTION_REQUEST_TYPE</code> : is the same as createTransactionRequest request URL .</p><p>2)<code>TRANSACTION_REQUEST_ID</code> : is the <code>id</code> field in createTransactionRequest response body.</p><p>3) <code>id</code> :  is <code>challenge.id</code> field in createTransactionRequest response body.</p><p>4) <code>answer</code> : must be <code>123</code>. if it is in sandbox mode. If it kafka mode, the answer can be got by phone message or other security ways.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-answerTransactionRequestChallenge",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ChallengeAnswerJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["id", "answer"],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "This is challenge.id, you can get it from `Create Transaction Request.` response, only is useful if status ==`INITIATED` there."
                },
                "answer": { "type": "string", "example": "123" }
              }
            }
          },
          {
            "in": "path",
            "name": "TRANSACTION_REQUEST_ID",
            "description": "The transaction request id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "TRANSACTION_REQUEST_TYPE",
            "description": "The transaction request type",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "challenge",
                "start_date",
                "id",
                "end_date",
                "status",
                "from",
                "details",
                "charge",
                "type",
                "transaction_ids"
              ],
              "properties": {
                "challenge": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~challenge",
                "start_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "id": {
                  "type": "string",
                  "example": "82f92531-9c63-4246-abfc-96c20ec46188"
                },
                "end_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "status": { "type": "string", "example": "COMPLETED" },
                "from": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~from",
                "details": {
                  "required": ["to", "value", "description"],
                  "properties": {
                    "to": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_sandbox_tan",
                    "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~value",
                    "description": { "type": "string", "example": "String" }
                  }
                },
                "charge": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~charge",
                "type": { "type": "string", "example": "SANDBOX_TAN" },
                "transaction_ids": {
                  "type": "string",
                  "example": "666666-9c63-4246-abfc-96c20ec46188"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests": {
      "get": {
        "tags": [
          "Transaction-Request",
          "Payment Initiation Service (PIS)",
          "New-Style"
        ],
        "summary": "Get Transaction Requests.",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p><p>The VIEW_ID specified must be 'owner' and the user must have access to this view.</p><p>Version 2.0.0 now returns charge information.</p><p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p><ul><li>Transaction Request Id</li><li>Type</li><li>Status (INITIATED, COMPLETED)</li><li>Challenge (in order to confirm the request)</li><li>From Bank / Account</li><li>Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)</li><li>Related Transactions</li></ul><p>PSD2 Context: PSD2 requires transparency of charges to the customer.<br />This endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.<br />The customer can proceed with the Transaction by answering the security challenge.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getTransactionRequests",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["transaction_requests_with_charges"],
              "properties": {
                "transaction_requests_with_charges": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions": {
      "get": {
        "tags": ["Transaction", "Account", "New-Style"],
        "summary": "Get Transactions for Account (Full)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns transactions list of the account specified by ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p><p>Authentication is Optional</p><p>Authentication is required if the view is not public.</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 2020-08-03T06:25:43.087Z. NOTE! The default value is one year ago (2020-08-03T06:25:43.087Z).</li><li>to_date=DATE =&gt; example value: 2021-08-03T06:25:43.087Z. NOTE! The default value is now (2021-08-03T06:25:43.087Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(2017-09-19T02:31:05.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z</p>",
        "operationId": "OBPv3.0.0-getTransactionsForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["transactions"],
              "properties": {
                "transactions": {
                  "type": "array",
                  "items": {
                    "required": [
                      "this_account",
                      "id",
                      "details",
                      "metadata",
                      "other_account",
                      "transaction_attributes"
                    ],
                    "properties": {
                      "this_account": {
                        "required": [
                          "id",
                          "bank_routing",
                          "account_routings",
                          "holders"
                        ],
                        "properties": {
                          "id": { "type": "string", "example": "String" },
                          "bank_routing": "~paths~/obp/v3.1.0/banks~get~responses~200~schema~properties~banks~items~properties~bank_routing",
                          "account_routings": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                          },
                          "holders": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~holder"
                          }
                        }
                      },
                      "id": { "type": "string", "example": "String" },
                      "details": {
                        "required": [
                          "new_balance",
                          "description",
                          "completed",
                          "type",
                          "value",
                          "posted"
                        ],
                        "properties": {
                          "new_balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                          "description": {
                            "type": "string",
                            "example": "this is for family"
                          },
                          "completed": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-09-19T00:00:00Z"
                          },
                          "type": { "type": "string", "example": "AC" },
                          "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                          "posted": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-09-19T00:00:00Z"
                          }
                        }
                      },
                      "metadata": {
                        "required": [
                          "narrative",
                          "tags",
                          "where",
                          "images",
                          "comments"
                        ],
                        "properties": {
                          "narrative": { "type": "string", "example": "NONE" },
                          "tags": {
                            "type": "array",
                            "items": {
                              "required": ["id", "value", "date", "user"],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                                },
                                "value": { "type": "string", "example": "OBP" },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "example": "2017-09-19T00:00:00Z"
                                },
                                "user": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~owners~items"
                              }
                            }
                          },
                          "where": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~metadata~properties~physical_location",
                          "images": {
                            "type": "array",
                            "items": {
                              "required": [
                                "URL",
                                "label",
                                "id",
                                "date",
                                "user"
                              ],
                              "properties": {
                                "URL": {
                                  "type": "string",
                                  "example": "www.openbankproject.com"
                                },
                                "label": {
                                  "type": "string",
                                  "example": "NONE"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "example": "2017-09-19T00:00:00Z"
                                },
                                "user": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~owners~items"
                              }
                            }
                          },
                          "comments": {
                            "type": "array",
                            "items": {
                              "required": ["id", "value", "date", "user"],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                                },
                                "value": { "type": "string", "example": "OBP" },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "example": "2017-09-19T00:00:00Z"
                                },
                                "user": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~owners~items"
                              }
                            }
                          }
                        }
                      },
                      "other_account": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items",
                      "transaction_attributes": {
                        "type": "array",
                        "items": {
                          "required": [
                            "transaction_attribute_id",
                            "name",
                            "type",
                            "value"
                          ],
                          "properties": {
                            "transaction_attribute_id": {
                              "type": "string",
                              "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                            },
                            "name": {
                              "type": "string",
                              "example": "HOUSE_RENT"
                            },
                            "type": {
                              "type": "string",
                              "example": "DATE_WITH_DAY"
                            },
                            "value": {
                              "type": "string",
                              "example": "123456789"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!"
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments": {
      "get": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Get comments",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the transaction TRANSACTION_ID comments made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-getCommentsForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["comments"],
              "properties": {
                "comments": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~comments~items"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Add comment",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Posts a comment about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>${authenticationRequiredMessage(false)}</p><p>Authentication is required since the comment is linked with the user.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-addCommentForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostTransactionCommentJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["value"],
              "properties": {
                "value": { "type": "string", "example": "String" }
              }
            }
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~comments~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments/{COMMENT_ID}": {
      "delete": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Delete comment",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete the comment COMMENT_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the comment.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteCommentForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "COMMENT_ID",
            "description": "The comment id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images": {
      "get": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Get images",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the transaction TRANSACTION_ID images made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-getImagesForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["images"],
              "properties": {
                "images": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~images~items"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Add an image",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Posts an image about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>The image is linked with the user.</p>",
        "operationId": "OBPv1.2.1-addImageForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostTransactionImageJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["label", "URL"],
              "properties": {
                "label": { "type": "string", "example": "String" },
                "URL": { "type": "string", "example": "String" }
              }
            }
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~images~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images/{IMAGE_ID}": {
      "delete": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Delete an image",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Deletes the image IMAGE_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the image.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteImageForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "IMAGE_ID",
            "description": "The image id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative": {
      "delete": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Delete narrative",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Deletes the description of the transaction TRANSACTION_ID.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteTransactionNarrative",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Get narrative",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the account owner description of the transaction <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-getTransactionNarrative",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["narrative"],
              "properties": {
                "narrative": { "type": "string", "example": "narative" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Add narrative",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Creates a description of the transaction TRANSACTION_ID.</p><p>Note: Unlike other items of metadata, there is only one &quot;narrative&quot; per transaction accross all views.<br />If you set narrative via a view e.g. view-x it will be seen via view-y (as long as view-y has permission to see the narrative).</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
        "operationId": "OBPv1.2.1-addTransactionNarrative",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionNarrativeJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative~get~responses~200~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Update narrative",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Updates the description of the transaction TRANSACTION_ID.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-updateTransactionNarrative",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionNarrativeJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative~get~responses~200~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags": {
      "get": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Get tags",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the transaction TRANSACTION_ID tags made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-getTagsForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~tags~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Add a tag",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Posts a tag about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>Authentication is required as the tag is linked with the user.</p>",
        "operationId": "OBPv1.2.1-addTagForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostTransactionTagJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["value"],
              "properties": {
                "value": { "type": "string", "example": "String" }
              }
            }
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~tags~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags/{TAG_ID}": {
      "delete": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Delete a tag",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Deletes the tag TAG_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.<br />Authentication via OAuth is required. The user must either have owner privileges for this account,<br />or must be the user that posted the tag.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-deleteTagForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TAG_ID",
            "description": "The tag id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-30022: The current view does not have the permission: "
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where": {
      "delete": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Delete where tag",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Deletes the where tag of the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The user must either have owner privileges for this account, or must be the user that posted the geo tag.</p>",
        "operationId": "OBPv1.2.1-deleteWhereTagForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Get where tag",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the &quot;where&quot; Geo tag added to the transaction TRANSACTION_ID made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />It represents the location where the transaction has been initiated.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-getWhereTagForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["where"],
              "properties": {
                "where": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~metadata~properties~physical_location"
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Add where tag",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Creates a &quot;where&quot; Geo tag on a transaction TRANSACTION_ID in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The geo tag is linked with the user.</p>",
        "operationId": "OBPv1.2.1-addWhereTagForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostTransactionWhereJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["where"],
              "properties": {
                "where": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location~post~parameters~0~schema~properties~corporate_location"
              }
            }
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
        "summary": "Update where tag",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Updates the &quot;where&quot; Geo tag on a transaction TRANSACTION_ID in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The geo tag is linked with the user.</p>",
        "operationId": "OBPv1.2.1-updateWhereTagForViewOnTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostTransactionWhereJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/other_account": {
      "get": {
        "tags": ["Transaction", "Counterparty"],
        "summary": "Get Other Account of Transaction",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get other account of a transaction.<br />Returns details of the other party involved in the transaction, moderated by the <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-getOtherAccountForTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "number",
                "IBAN",
                "swift_bic",
                "holder",
                "bank",
                "id",
                "metadata",
                "kind"
              ],
              "properties": {
                "number": { "type": "string", "example": "123" },
                "IBAN": { "type": "string", "example": "UK234DB" },
                "swift_bic": { "type": "string", "example": "UK12321DB" },
                "holder": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~holder",
                "bank": {
                  "required": ["national_identifier", "name"],
                  "properties": {
                    "national_identifier": {
                      "type": "string",
                      "example": "OBP"
                    },
                    "name": { "type": "string", "example": "OBP" }
                  }
                },
                "id": {
                  "type": "string",
                  "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                },
                "metadata": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~metadata",
                "kind": { "type": "string", "example": "3456" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/transaction": {
      "get": {
        "tags": ["Transaction", "New-Style"],
        "summary": "Get Transaction by Id",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>",
        "operationId": "OBPv3.1.0-getTransactionByIdForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions": {
      "get": {
        "tags": ["View-Custom", "Account", "User", "Entitlement", "New-Style"],
        "summary": "Get access",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the list of the permissions at BANK_ID for account ACCOUNT_ID, with each time a pair composed of the user and the views that he has access to.</p><p>Authentication is Mandatory<br />and the user needs to have access to the owner view.</p>",
        "operationId": "OBPv2.0.0-getPermissionsForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["permissions"],
              "properties": {
                "permissions": {
                  "type": "array",
                  "items": {
                    "required": ["user", "views"],
                    "properties": {
                      "user": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~owners~items",
                      "views": {
                        "type": "array",
                        "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~views_available~items"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}": {
      "get": {
        "tags": ["View-Custom", "Account", "User", "New-Style"],
        "summary": "Get Account access for User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the list of the views at BANK_ID for account ACCOUNT_ID that a user identified by PROVIDER_ID at their provider PROVIDER has access to.<br />All url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">%-encoded</a>, which is often especially relevant for USER_ID and PROVIDER.</p><p>Authentication is Mandatory</p><p>The user needs to have access to the owner view.</p>",
        "operationId": "OBPv3.0.0-getPermissionForUserForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PROVIDER",
            "description": "the user PROVIDER",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PROVIDER_ID",
            "description": "The provider id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["views"],
              "properties": {
                "views": {
                  "type": "array",
                  "items": {
                    "required": [
                      "can_see_transaction_start_date",
                      "can_add_url",
                      "can_add_where_tag",
                      "can_see_transaction_this_bank_account",
                      "can_see_bank_account_owners",
                      "can_see_bank_routing_address",
                      "can_see_private_alias",
                      "can_edit_owner_comment",
                      "is_system",
                      "can_see_other_account_national_identifier",
                      "can_see_bank_routing_scheme",
                      "can_see_public_alias",
                      "can_see_physical_location",
                      "can_see_owner_comment",
                      "can_see_bank_account_iban",
                      "can_see_corporate_location",
                      "can_see_bank_account_number",
                      "can_see_other_account_bank_name",
                      "description",
                      "can_see_bank_account_routing_scheme",
                      "can_see_transaction_other_bank_account",
                      "can_delete_corporate_location",
                      "can_see_comments",
                      "can_see_bank_account_bank_name",
                      "can_add_more_info",
                      "can_create_direct_debit",
                      "can_see_other_account_number",
                      "can_see_other_account_swift_bic",
                      "can_add_open_corporates_url",
                      "can_see_other_account_kind",
                      "can_add_transaction_request_to_own_account",
                      "can_delete_physical_location",
                      "can_see_bank_account_label",
                      "can_see_transaction_currency",
                      "is_public",
                      "can_see_transaction_finish_date",
                      "can_see_bank_account_routing_address",
                      "can_add_tag",
                      "can_see_images",
                      "can_query_available_funds",
                      "can_see_bank_account_credit_limit",
                      "can_see_bank_account_currency",
                      "hide_metadata_if_alias_used",
                      "can_delete_where_tag",
                      "alias",
                      "can_add_image_url",
                      "can_add_comment",
                      "can_see_image_url",
                      "id",
                      "can_create_standing_order",
                      "can_see_bank_account_national_identifier",
                      "can_add_counterparty",
                      "can_add_transaction_request_to_any_account",
                      "can_see_tags",
                      "can_see_open_corporates_url",
                      "short_name",
                      "can_delete_tag",
                      "can_see_other_account_routing_scheme",
                      "can_see_more_info",
                      "can_see_transaction_metadata",
                      "can_delete_comment",
                      "can_see_where_tag",
                      "can_add_private_alias",
                      "can_add_public_alias",
                      "can_see_bank_account_swift_bic",
                      "can_add_image",
                      "can_see_transaction_type",
                      "can_see_other_account_routing_address",
                      "can_see_other_account_iban",
                      "can_add_physical_location",
                      "can_add_corporate_location",
                      "can_delete_image",
                      "can_see_url",
                      "can_see_bank_account_balance",
                      "can_see_other_bank_routing_address",
                      "can_see_transaction_balance",
                      "metadata_view",
                      "can_see_transaction_amount",
                      "can_see_other_account_metadata",
                      "can_see_bank_account_type",
                      "can_see_other_bank_routing_scheme",
                      "can_see_transaction_description"
                    ],
                    "properties": {
                      "can_see_transaction_start_date": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_url": { "type": "boolean", "example": "true" },
                      "can_add_where_tag": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_this_bank_account": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_owners": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_routing_address": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_private_alias": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_edit_owner_comment": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "is_system": { "type": "boolean", "example": "true" },
                      "can_see_other_account_national_identifier": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_routing_scheme": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_public_alias": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_physical_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_owner_comment": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_iban": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_corporate_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_number": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_bank_name": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "description": {
                        "type": "string",
                        "example": "description"
                      },
                      "can_see_bank_account_routing_scheme": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_other_bank_account": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_corporate_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_comments": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_bank_name": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_more_info": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_create_direct_debit": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_number": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_swift_bic": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_open_corporates_url": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_kind": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_transaction_request_to_own_account": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_physical_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_label": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_currency": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "is_public": { "type": "boolean", "example": "true" },
                      "can_see_transaction_finish_date": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_routing_address": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_tag": { "type": "boolean", "example": "true" },
                      "can_see_images": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_query_available_funds": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_credit_limit": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_currency": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "hide_metadata_if_alias_used": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_where_tag": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "alias": { "type": "string", "example": "No" },
                      "can_add_image_url": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_comment": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_image_url": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "id": { "type": "string", "example": "1234" },
                      "can_create_standing_order": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_national_identifier": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_counterparty": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_transaction_request_to_any_account": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_tags": { "type": "boolean", "example": "true" },
                      "can_see_open_corporates_url": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "short_name": {
                        "type": "string",
                        "example": "short_name"
                      },
                      "can_delete_tag": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_routing_scheme": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_more_info": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_metadata": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_comment": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_where_tag": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_private_alias": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "is_firehose": { "type": "boolean", "example": "" },
                      "can_add_public_alias": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_swift_bic": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_image": { "type": "boolean", "example": "true" },
                      "can_see_transaction_type": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_routing_address": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_iban": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_physical_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_add_corporate_location": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_delete_image": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_url": { "type": "boolean", "example": "true" },
                      "can_see_bank_account_balance": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_bank_routing_address": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_balance": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "metadata_view": { "type": "string", "example": "owner" },
                      "can_see_transaction_amount": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_account_metadata": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_bank_account_type": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_other_bank_routing_scheme": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "can_see_transaction_description": {
                        "type": "boolean",
                        "example": "true"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}/views": {
      "delete": {
        "tags": ["View-Custom", "Account", "User", "OwnerViewRequired"],
        "summary": "Revoke access to all Views on Account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>&quot;Revokes access to all Views on an Account for a certain User.</p><p>The User is identified by PROVIDER_ID at their PROVIDER.</p><p>The Account is specified by BANK_ID and ACCOUNT_ID.</p><p>The View is specified by VIEW_ID.</p><p>PROVIDER (may be a URL so) must be URL Encoded.</p><p>PROVIDER_ID is normally equivalent to USERNAME. However, see Get User by ID or GET Current User for Provider information.</p><p>Attempting to revoke access to a public view will return an error message.</p><p>An Account Owner cannot revoke access to an Owner View unless at least one other User has Owner View access.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p>",
        "operationId": "OBPv1.2.1-removePermissionForUserForBankAccountForAllViews",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PROVIDER",
            "description": "the user PROVIDER",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PROVIDER_ID",
            "description": "The provider id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["View-Custom", "Account", "User", "OwnerViewRequired"],
        "summary": "Grant User access to a list of views",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Grants the user identified by PROVIDER_ID at their provider PROVIDER access to a list of views at BANK_ID for account ACCOUNT_ID.</p><p>All url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">%-encoded</a>, which is often especially relevant for PROVIDER_ID and PROVIDER.</p><p>Authentication is Mandatory</p><p>The User needs to have access to the owner view.</p>",
        "operationId": "OBPv1.2.1-addPermissionForUserForBankAccountForMultipleViews",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ViewIdsJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["views"],
              "properties": {
                "views": { "type": "array", "items": { "type": "string" } }
              }
            }
          },
          {
            "in": "path",
            "name": "PROVIDER",
            "description": "the user PROVIDER",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PROVIDER_ID",
            "description": "The provider id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": ["views"],
              "properties": {
                "views": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~views_available~items"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}/views/{VIEW_ID}": {
      "delete": {
        "tags": [
          "View-Custom",
          "Account",
          "User",
          "Entitlement",
          "OwnerViewRequired"
        ],
        "summary": "Revoke access to one View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Revokes access to a View on an Account for a certain User.</p><p>The User is identified by PROVIDER_ID at their PROVIDER.</p><p>The Account is specified by BANK_ID and ACCOUNT_ID.</p><p>The View is specified by VIEW_ID.</p><p>PROVIDER (may be a URL so) must be URL Encoded.</p><p>PROVIDER_ID is normally equivalent to USERNAME. However, see Get User by ID or GET Current User for Provider information.</p><p>Attempting to revoke access to a public view will return an error message.</p><p>An Account Owner cannot revoke access to an Owner View unless at least one other User has Owner View access.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p>",
        "operationId": "OBPv1.2.1-removePermissionForUserForBankAccountForOneView",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PROVIDER",
            "description": "the user PROVIDER",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PROVIDER_ID",
            "description": "The provider id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": [
          "View-Custom",
          "Account",
          "User",
          "OwnerViewRequired",
          "New-Style"
        ],
        "summary": "Grant User access to View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Grants the User identified by PROVIDER_ID at PROVIDER access to the view VIEW_ID at BANK_ID for account ACCOUNT_ID.</p><p>All url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">%-encoded</a>, which is often especially relevant for PROVIDER and PROVIDER_ID.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p><p>Granting access to a public view will return an error message, as the user already has access.</p>",
        "operationId": "OBPv1.2.1-addPermissionForUserForBankAccountForOneView",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PROVIDER",
            "description": "the user PROVIDER",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PROVIDER_ID",
            "description": "The provider id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~views_available~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/{PRODUCT_CODE}/attribute": {
      "post": {
        "tags": ["Account", "New-Style"],
        "summary": "Create Account Attribute",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Account Attribute</p><p>Account Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Account Attribute is linked to its Account by ACCOUNT_ID</p><p>Typical account attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createAccountAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AccountAttributeJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["name", "type", "value"],
              "properties": {
                "name": { "type": "string", "example": "OVERDRAFT_START_DATE" },
                "type": { "type": "string", "example": "DATE_WITH_DAY" },
                "value": { "type": "string", "example": "2012-04-23" }
              }
            }
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~responses~200~schema~properties~account_attributes~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/{PRODUCT_CODE}/attributes/{ACCOUNT_ATTRIBUTE_ID}": {
      "put": {
        "tags": ["Account", "New-Style"],
        "summary": "Update Account Attribute",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update Account Attribute</p><p>Account Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Account Attribute is linked to its Account by ACCOUNT_ID</p><p>Typical account attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateAccountAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AccountAttributeJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/{PRODUCT_CODE}/attribute~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ATTRIBUTE_ID",
            "description": "the account attribute id ",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~responses~200~schema~properties~account_attributes~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views": {
      "get": {
        "tags": ["View-Custom", "Account", "New-Style"],
        "summary": "Get Views for Account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<h1><a href=\"#views\" id=\"views\">Views</a></h1><p>Views in Open Bank Project provide a mechanism for fine grained access control and delegation to Accounts and Transactions. Account holders use the 'owner' view by default. Delegated access is made through other views for example 'accountants', 'share-holders' or 'tagging-application'. Views can be created via the API and each view has a list of entitlements.</p><p>Views on accounts and transactions filter the underlying data to redact certain fields for certain users. For instance the balance on an account may be hidden from the public. The way to know what is possible on a view is determined in the following JSON.</p><p><strong>Data:</strong> When a view moderates a set of data, some fields my contain the value <code>null</code> rather than the original value. This indicates either that the user is not allowed to see the original data or the field is empty.</p><p>There is currently one exception to this rule; the 'holder' field in the JSON contains always a value which is either an alias or the real name - indicated by the 'is_alias' field.</p><p><strong>Action:</strong> When a user performs an action like trying to post a comment (with POST API call), if he is not allowed, the body response will contain an error message.</p><p><strong>Metadata:</strong><br />Transaction metadata (like images, tags, comments, etc.) will appears <em>ONLY</em> on the view where they have been created e.g. comments posted to the public view only appear on the public view.</p><p>The other account metadata fields (like image_URL, more_info, etc.) are unique through all the views. Example, if a user edits the 'more_info' field in the 'team' view, then the view 'authorities' will show the new value (if it is allowed to do it).</p><h1><a href=\"#all\" id=\"all\">All</a></h1><p><em>Optional</em></p><p>Returns the list of the views created for account ACCOUNT_ID at BANK_ID.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p>",
        "operationId": "OBPv3.0.0-getViewsForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["View-Custom", "Account", "New-Style"],
        "summary": "Create View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create a view on bank account</p><p>Authentication is Mandatory and the user needs to have access to the owner view.<br />The 'alias' field in the JSON can take one of three values:</p><ul><li><em>public</em>: to use the public alias if there is one specified for the other account.</li><li><em>private</em>: to use the public alias if there is one specified for the other account.</li><li><p><em>''(empty string)</em>: to use no alias; the view shows the real name of the other account.</p></li></ul><p>The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to <code>true</code> and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.</p><p>The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to <code>true</code> on the view creation, the rest will be set to <code>false</code>.</p><p>You MUST use a leading _ (underscore) in the view name because other view names are reserved for OBP <a href=\"/index#group-View-System\">system views</a>.</p>",
        "operationId": "OBPv3.0.0-createViewForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateViewJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "name",
                "description",
                "is_public",
                "hide_metadata_if_alias_used",
                "which_alias_to_use",
                "metadata_view",
                "allowed_actions"
              ],
              "properties": {
                "name": { "type": "string", "example": "test" },
                "description": {
                  "type": "string",
                  "example": "This view is for family"
                },
                "is_public": { "type": "boolean", "example": "false" },
                "hide_metadata_if_alias_used": {
                  "type": "boolean",
                  "example": "false"
                },
                "which_alias_to_use": { "type": "string", "example": "family" },
                "metadata_view": { "type": "string", "example": "test" },
                "allowed_actions": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}~get~responses~200~schema~properties~views~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}": {
      "delete": {
        "tags": ["View-Custom", "Account", "New-Style"],
        "summary": "Delete View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Deletes the view specified by VIEW_ID on the bank account specified by ACCOUNT_ID at bank BANK_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.2.1-deleteViewForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["View-Custom", "Account", "New-Style"],
        "summary": "Update View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update an existing view on a bank account</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p><p>The json sent is the same as during view creation (above), with one difference: the 'name' field<br />of a view is not editable (it is only set when a view is created)</p>",
        "operationId": "OBPv3.0.0-updateViewForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "UpdateViewJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "description",
                "is_public",
                "hide_metadata_if_alias_used",
                "which_alias_to_use",
                "metadata_view",
                "allowed_actions"
              ],
              "properties": {
                "description": {
                  "type": "string",
                  "example": "this is for family"
                },
                "is_public": { "type": "boolean", "example": "true" },
                "hide_metadata_if_alias_used": {
                  "type": "boolean",
                  "example": "true"
                },
                "which_alias_to_use": { "type": "string", "example": "family" },
                "is_firehose": { "type": "boolean", "example": "" },
                "metadata_view": { "type": "string", "example": "owner" },
                "allowed_actions": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}~get~responses~200~schema~properties~views~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/account_ids/private": {
      "get": {
        "tags": [
          "Account",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Accounts at Bank (IDs only)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns only the list of accounts ids at BANK_ID that the user has access to.</p><p>Each account must have at least one private View.</p><p>For each account the API returns its account ID.</p><p>If you want to see more information on the Views, use the Account Detail call.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/banks/BANK_ID/accounts/account_ids/private?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getPrivateAccountIdsbyBankId",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["accounts"],
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "required": ["id"],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/private": {
      "get": {
        "tags": [
          "Account",
          "Account Information Service (AIS)",
          "New-Style",
          "PSD2"
        ],
        "summary": "Get Accounts at Bank (Minimal)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the minimal list of private accounts at BANK_ID that the user has access to.<br />For each account, the API returns the ID, routing addresses and the views available to the current user.</p><p>If you want to see more information on the Views, use the Account Detail call.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/banks/BANK_ID/accounts/private?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-privateAccountsAtOneBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["accounts"],
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "required": [
                      "account_routings",
                      "label",
                      "account_type",
                      "bank_id",
                      "id",
                      "views"
                    ],
                    "properties": {
                      "account_routings": {
                        "type": "array",
                        "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                      },
                      "label": { "type": "string", "example": "String" },
                      "account_type": { "type": "string", "example": "330" },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "id": {
                        "type": "string",
                        "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                      },
                      "views": {
                        "type": "array",
                        "items": {
                          "required": [
                            "id",
                            "short_name",
                            "description",
                            "is_public"
                          ],
                          "properties": {
                            "id": { "type": "string", "example": "owner" },
                            "short_name": {
                              "type": "string",
                              "example": "Owner"
                            },
                            "description": {
                              "type": "string",
                              "example": "This view is for the owner for the account."
                            },
                            "is_public": {
                              "type": "boolean",
                              "example": "false"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/accounts/public": {
      "get": {
        "tags": ["Account-Public", "Account", "PublicData", "New-Style"],
        "summary": "Get Public Accounts at Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns a list of the public accounts (Anonymous access) at BANK_ID. For each account the API returns the ID and the available views.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv2.0.0-publicAccountsAtOneBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/adapter": {
      "get": {
        "tags": ["API", "New-Style"],
        "summary": "Get Adapter Info for a bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get basic information about the Adapter listening on behalf of this bank.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getAdapterInfoForBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/atms": {
      "get": {
        "tags": ["ATM", "New-Style"],
        "summary": "Get Bank ATMS",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about ATMs for a single bank specified by BANK_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li></ul><p>Pagination:</p><p>By default, 100 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getAtms",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "sunday",
                "name",
                "location",
                "tuesday",
                "wednesday",
                "monday",
                "has_deposit_capability",
                "more_info",
                "bank_id",
                "id",
                "meta",
                "address",
                "friday",
                "is_accessible",
                "thursday",
                "saturday",
                "located_at"
              ],
              "properties": {
                "sunday": {
                  "required": ["opening_time", "closing_time"],
                  "properties": {
                    "opening_time": { "type": "string", "example": "10:00" },
                    "closing_time": { "type": "string", "example": "18:00" }
                  }
                },
                "name": { "type": "string", "example": "Atm by the Lake" },
                "location": {
                  "required": ["latitude", "longitude"],
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double",
                      "example": "11.45"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double",
                      "example": "11.45"
                    }
                  }
                },
                "tuesday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                "wednesday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                "monday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                "has_deposit_capability": {
                  "type": "string",
                  "example": "true"
                },
                "more_info": {
                  "type": "string",
                  "example": "short walk to the lake from here"
                },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "id": { "type": "string", "example": "atm-id-123" },
                "meta": {
                  "required": ["license"],
                  "properties": {
                    "license": {
                      "required": ["id", "name"],
                      "properties": {
                        "id": { "type": "string", "example": "5" },
                        "name": { "type": "string", "example": "TESOBE" }
                      }
                    }
                  }
                },
                "address": {
                  "required": [
                    "city",
                    "line_2",
                    "state",
                    "postcode",
                    "county",
                    "country_code",
                    "line_3",
                    "line_1"
                  ],
                  "properties": {
                    "city": { "type": "string", "example": "Berlin" },
                    "line_2": { "type": "string", "example": "The Place" },
                    "state": { "type": "string", "example": "Brandenburg" },
                    "postcode": { "type": "string", "example": "13359" },
                    "county": { "type": "string", "example": "" },
                    "country_code": { "type": "string", "example": "DE" },
                    "line_3": { "type": "string", "example": "The Hill" },
                    "line_1": { "type": "string", "example": "No 1 the Road" }
                  }
                },
                "friday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                "is_accessible": { "type": "string", "example": "true" },
                "thursday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                "saturday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                "located_at": {
                  "type": "string",
                  "example": "Full service store"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["ATM"],
        "summary": "Create ATM",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create ATM for the Bank.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-createAtm",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AtmJsonV300 object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/atms/{ATM_ID}": {
      "get": {
        "tags": ["ATM", "New-Style"],
        "summary": "Get Bank ATM",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about ATM for a single bank specified by BANK_ID and ATM_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li></ul><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getAtm",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ATM_ID",
            "description": "the atm id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/balances": {
      "get": {
        "tags": [
          "Account",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Accounts Balances",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the Balances for the Accounts of the current User at one bank.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getBankAccountsBalances",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "accounts",
                "overall_balance",
                "overall_balance_date"
              ],
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "required": [
                      "account_routings",
                      "label",
                      "balance",
                      "bank_id",
                      "id"
                    ],
                    "properties": {
                      "account_routings": {
                        "type": "array",
                        "items": {
                          "required": ["scheme", "address"],
                          "properties": {
                            "scheme": {
                              "type": "string",
                              "example": "accountNumber"
                            },
                            "address": { "type": "string", "example": "123456" }
                          }
                        }
                      },
                      "label": { "type": "string", "example": "My Account" },
                      "balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~value",
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "id": {
                        "type": "string",
                        "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                      }
                    }
                  }
                },
                "overall_balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~value",
                "overall_balance_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/branches": {
      "get": {
        "tags": ["Branch", "Bank", "New-Style"],
        "summary": "Get Branches for a Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about branches for a single bank specified by BANK_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li><li>Structured opening hours</li><li>Accessible flag</li><li>Branch Type</li><li>More Info</li></ul><p>Pagination:</p><p>By default, 50 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination<br />You can also use the follow url query parameters:</p><ul><li><p>city - string, find Branches those in this city, optional</p></li><li><p>withinMetersOf - number, find Branches within given meters distance, optional</p></li><li>nearLatitude - number, a position of latitude value, cooperate with withMetersOf do query filter, optional</li><li>nearLongitude - number, a position of longitude value, cooperate with withMetersOf do query filter, optional</li></ul><p>note: withinMetersOf, nearLatitude and nearLongitude either all empty or all have value.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getBranches",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["branches"],
              "properties": {
                "branches": {
                  "type": "array",
                  "items": {
                    "required": [
                      "name",
                      "phone_number",
                      "location",
                      "branch_type",
                      "branch_routing",
                      "drive_up",
                      "more_info",
                      "bank_id",
                      "id",
                      "meta",
                      "lobby",
                      "accessibleFeatures",
                      "address",
                      "is_accessible"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Branch by the Lake"
                      },
                      "phone_number": {
                        "type": "string",
                        "example": "+381631954907"
                      },
                      "location": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~location",
                      "branch_type": {
                        "type": "string",
                        "example": "Full service store"
                      },
                      "branch_routing": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders~get~responses~200~schema~properties~account~properties~branch_routings~items",
                      "drive_up": {
                        "required": [
                          "sunday",
                          "tuesday",
                          "wednesday",
                          "monday",
                          "friday",
                          "thursday",
                          "saturday"
                        ],
                        "properties": {
                          "sunday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                          "tuesday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                          "wednesday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                          "monday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                          "friday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                          "thursday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
                          "saturday": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday"
                        }
                      },
                      "more_info": {
                        "type": "string",
                        "example": "short walk to the lake from here"
                      },
                      "bank_id": { "type": "string", "example": "bank-id-123" },
                      "id": { "type": "string", "example": "branch-id-123" },
                      "meta": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~meta",
                      "lobby": {
                        "required": [
                          "sunday",
                          "tuesday",
                          "wednesday",
                          "monday",
                          "friday",
                          "thursday",
                          "saturday"
                        ],
                        "properties": {
                          "sunday": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday"
                          },
                          "tuesday": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday"
                          },
                          "wednesday": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday"
                          },
                          "monday": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday"
                          },
                          "friday": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday"
                          },
                          "thursday": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday"
                          },
                          "saturday": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday"
                          }
                        }
                      },
                      "accessibleFeatures": {
                        "type": "string",
                        "example": "wheelchair, atm usuable by the visually impaired"
                      },
                      "address": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~address",
                      "is_accessible": { "type": "string", "example": "true" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Branch"],
        "summary": "Create Branch",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Branch for the Bank.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-createBranch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BranchJsonV300 object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches~get~responses~200~schema~properties~branches~items"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches~get~responses~200~schema~properties~branches~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}": {
      "delete": {
        "tags": ["Branch", "New-Style"],
        "summary": "Delete Branch",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete Branch from given Bank.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteBranch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BRANCH_ID",
            "description": "The branch id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["Branch", "Bank", "New-Style"],
        "summary": "Get Branch",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about a single Branch specified by BANK_ID and BRANCH_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under.</li></ul><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getBranch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BRANCH_ID",
            "description": "The branch id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches~get~responses~200~schema~properties~branches~items"
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-300010: Branch not found. Please specify a valid value for BRANCH_ID. Or License may not be set. meta.license.id and meta.license.name can not be empty"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Branch"],
        "summary": "Update Branch",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update an existing branch for a bank account (Authenticated access).<br />Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-updateBranch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BranchJsonPutV210 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "name",
                "location",
                "drive_up",
                "bank_id",
                "meta",
                "lobby",
                "address"
              ],
              "properties": {
                "name": { "type": "string", "example": "OBP" },
                "location": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~location",
                "drive_up": {
                  "required": ["hours"],
                  "properties": {
                    "hours": { "type": "string", "example": "5" }
                  }
                },
                "bank_id": { "type": "string", "example": "gh.29.fi" },
                "meta": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~meta",
                "lobby": {
                  "required": ["hours"],
                  "properties": {
                    "hours": { "type": "string", "example": "5" }
                  }
                },
                "address": {
                  "required": [
                    "city",
                    "line_2",
                    "state",
                    "postcode",
                    "country",
                    "line_3",
                    "line_1"
                  ],
                  "properties": {
                    "city": { "type": "string", "example": "Berlin" },
                    "line_2": { "type": "string", "example": "Wedding" },
                    "state": {
                      "type": "string",
                      "example": "Berlin Brandenburg"
                    },
                    "postcode": { "type": "string", "example": "13359" },
                    "country": { "type": "string", "example": "DE" },
                    "line_3": { "type": "string", "example": "" },
                    "line_1": {
                      "type": "string",
                      "example": "Osloer Straße 16/17"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "BRANCH_ID",
            "description": "The branch id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "name",
                "location",
                "branch_routing",
                "drive_up",
                "id",
                "meta",
                "lobby",
                "address"
              ],
              "properties": {
                "name": { "type": "string", "example": "String" },
                "location": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~location",
                "branch_routing": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders~get~responses~200~schema~properties~account~properties~branch_routings~items",
                "drive_up": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~put~parameters~0~schema~properties~drive_up",
                "id": {
                  "type": "string",
                  "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                },
                "meta": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~meta",
                "lobby": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~put~parameters~0~schema~properties~lobby",
                "address": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~put~parameters~0~schema~properties~address"
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}/challenge": {
      "post": {
        "tags": [
          "Consent",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Answer Consent Challenge",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p><p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p><p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p><p>Example of POST JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"m&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#101;&#118;&#101;&#x6c;&#105;&#x6e;&#101;&#x40;&#x65;&#x78;&#x61;&#x6d;&#112;&#108;&#101;&#46;&#99;&#111;&#109;\">e&#x76;&#101;l&#105;&#x6e;&#101;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;.&#99;om</a>&quot;,<br />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;: 3600<br />}<br />Please note that only optional fields are: consumer_id, valid_from and time_to_live.<br />In case you omit they the default values are used:<br />consumer_id = consumer of current user<br />valid_from = current time<br />time_to_live = consents.max_time_to_live</p><p>This endpoint is used to confirm a Consent previously created.</p><p>The User must supply a code that was sent out of band (OOB) for example via an SMS.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-answerConsentChallenge",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostConsentChallengeJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["answer"],
              "properties": {
                "answer": { "type": "string", "example": "12345678" }
              }
            }
          },
          {
            "in": "path",
            "name": "CONSENT_ID",
            "description": "the consent id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": ["consent_id", "jwt", "status"],
              "properties": {
                "consent_id": {
                  "type": "string",
                  "example": "9d429899-24f5-42c8-8565-943ffa6a7945"
                },
                "jwt": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
                },
                "status": { "type": "string", "example": "INITIATED" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/crm-events": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get CRM Events",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.4.0-getCrmEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["crm_events"],
              "properties": {
                "crm_events": {
                  "type": "array",
                  "items": {
                    "required": [
                      "channel",
                      "customer_name",
                      "result",
                      "customer_number",
                      "bank_id",
                      "id",
                      "scheduled_date",
                      "category",
                      "detail",
                      "actual_date"
                    ],
                    "properties": {
                      "channel": { "type": "string", "example": "String" },
                      "customer_name": {
                        "type": "string",
                        "example": "String"
                      },
                      "result": { "type": "string", "example": "String" },
                      "customer_number": {
                        "type": "string",
                        "example": "5987953"
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "id": {
                        "type": "string",
                        "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                      },
                      "scheduled_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "category": { "type": "string", "example": "String" },
                      "detail": { "type": "string", "example": "String" },
                      "actual_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customer/{CUSTOMER_ID}/messages": {
      "post": {
        "tags": ["Customer-Message", "Customer", "Person"],
        "summary": "Create Customer Message",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create a message for the customer specified by CUSTOMER_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.4.0-createCustomerMessage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "AddCustomerMessageJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["message", "from_department", "from_person"],
              "properties": {
                "message": { "type": "string", "example": "String" },
                "from_department": { "type": "string", "example": "String" },
                "from_person": { "type": "string", "example": "String" }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customer/messages": {
      "get": {
        "tags": ["Customer-Message", "Customer"],
        "summary": "Get Customer Messages (current)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get messages for the logged in customer<br />Messages sent to the currently authenticated user.</p><p>Authentication via OAuth is required.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.4.0-getCustomerMessages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["messages"],
              "properties": {
                "messages": {
                  "type": "array",
                  "items": {
                    "required": [
                      "from_person",
                      "id",
                      "date",
                      "from_department",
                      "message"
                    ],
                    "properties": {
                      "from_person": { "type": "string", "example": "String" },
                      "id": {
                        "type": "string",
                        "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "from_department": {
                        "type": "string",
                        "example": "String"
                      },
                      "message": { "type": "string", "example": "String" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers": {
      "get": {
        "tags": ["Customer", "New-Style"],
        "summary": "Get Customers for current User at Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns a list of Customers at the Bank that are linked to the currently authenticated User.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-getCustomersForCurrentUserAtBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["customers"],
              "properties": {
                "customers": {
                  "type": "array",
                  "items": {
                    "required": [
                      "customer_id",
                      "email",
                      "mobile_phone_number",
                      "customer_number",
                      "highest_education_attained",
                      "dob_of_dependants",
                      "bank_id",
                      "date_of_birth",
                      "last_ok_date",
                      "employment_status",
                      "legal_name",
                      "face_image",
                      "dependants",
                      "relationship_status",
                      "kyc_status"
                    ],
                    "properties": {
                      "customer_id": {
                        "type": "string",
                        "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                      },
                      "email": {
                        "type": "string",
                        "example": "felixsmith@example.com"
                      },
                      "mobile_phone_number": {
                        "type": "string",
                        "example": "+44 07972 444 876"
                      },
                      "customer_number": {
                        "type": "string",
                        "example": "5987953"
                      },
                      "highest_education_attained": {
                        "type": "string",
                        "example": "Master"
                      },
                      "dob_of_dependants": {
                        "type": "array",
                        "items": { "type": "string", "format": "date" }
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "credit_rating": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_rating",
                      "last_ok_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "employment_status": {
                        "type": "string",
                        "example": "worker"
                      },
                      "legal_name": {
                        "type": "string",
                        "example": "Eveline Tripman"
                      },
                      "credit_limit": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                      "face_image": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~face_image",
                      "dependants": {
                        "type": "integer",
                        "format": "int32",
                        "example": "1"
                      },
                      "relationship_status": {
                        "type": "string",
                        "example": "single"
                      },
                      "kyc_status": { "type": "boolean", "example": "true" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Customer", "Person", "New-Style"],
        "summary": "Create Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>The Customer resource stores the customer number (which is set by the backend), legal name, email, phone number, their date of birth, relationship status, education attained, a url for a profile image, KYC status etc.<br />Dates need to be in the format 2013-01-21T23:08:00Z</p><p>Note: If you need to set a specific customer number, use the Update Customer Number endpoint after this call.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createCustomer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostCustomerJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "name_suffix",
                "email",
                "branch_id",
                "mobile_phone_number",
                "highest_education_attained",
                "dob_of_dependants",
                "date_of_birth",
                "credit_rating",
                "last_ok_date",
                "employment_status",
                "legal_name",
                "credit_limit",
                "title",
                "face_image",
                "dependants",
                "relationship_status",
                "kyc_status"
              ],
              "properties": {
                "name_suffix": { "type": "string", "example": "Sr" },
                "email": {
                  "type": "string",
                  "example": "felixsmith@example.com"
                },
                "branch_id": { "type": "string", "example": "DERBY6" },
                "mobile_phone_number": {
                  "type": "string",
                  "example": "+44 07972 444 876"
                },
                "highest_education_attained": {
                  "type": "string",
                  "example": "Master"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": { "type": "string", "format": "date" }
                },
                "date_of_birth": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "credit_rating": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_rating",
                "last_ok_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "employment_status": { "type": "string", "example": "worker" },
                "legal_name": {
                  "type": "string",
                  "example": "Eveline Tripman"
                },
                "credit_limit": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "title": { "type": "string", "example": "Dr." },
                "face_image": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~face_image",
                "dependants": {
                  "type": "integer",
                  "format": "int32",
                  "example": "1"
                },
                "relationship_status": {
                  "type": "string",
                  "example": "single"
                },
                "kyc_status": { "type": "boolean", "example": "true" }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}": {
      "get": {
        "tags": ["Customer", "New-Style"],
        "summary": "Get Customer by CUSTOMER_ID",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Gets the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getCustomerByCustomerId",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "customer_id",
                "name_suffix",
                "email",
                "branch_id",
                "mobile_phone_number",
                "customer_number",
                "customer_attributes",
                "highest_education_attained",
                "dob_of_dependants",
                "bank_id",
                "date_of_birth",
                "last_ok_date",
                "employment_status",
                "legal_name",
                "title",
                "face_image",
                "dependants",
                "relationship_status",
                "kyc_status"
              ],
              "properties": {
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "name_suffix": { "type": "string", "example": "Sr" },
                "email": {
                  "type": "string",
                  "example": "felixsmith@example.com"
                },
                "branch_id": { "type": "string", "example": "DERBY6" },
                "mobile_phone_number": {
                  "type": "string",
                  "example": "+44 07972 444 876"
                },
                "customer_number": { "type": "string", "example": "5987953" },
                "customer_attributes": {
                  "type": "array",
                  "items": {
                    "required": [
                      "customer_attribute_id",
                      "name",
                      "type",
                      "value"
                    ],
                    "properties": {
                      "customer_attribute_id": {
                        "type": "string",
                        "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                      },
                      "name": {
                        "type": "string",
                        "example": "SPECIAL_TAX_NUMBER"
                      },
                      "type": { "type": "string", "example": "STRING" },
                      "value": { "type": "string", "example": "123456789" }
                    }
                  }
                },
                "highest_education_attained": {
                  "type": "string",
                  "example": "Master"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": { "type": "string", "format": "date" }
                },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "date_of_birth": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "credit_rating": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_rating",
                "last_ok_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "employment_status": { "type": "string", "example": "worker" },
                "legal_name": {
                  "type": "string",
                  "example": "Eveline Tripman"
                },
                "credit_limit": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "title": { "type": "string", "example": "Dr." },
                "face_image": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~face_image",
                "dependants": {
                  "type": "integer",
                  "format": "int32",
                  "example": "1"
                },
                "relationship_status": {
                  "type": "string",
                  "example": "single"
                },
                "kyc_status": { "type": "boolean", "example": "true" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address": {
      "post": {
        "tags": ["Customer", "New-Style"],
        "summary": "Create Address",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create an Address for a Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createCustomerAddress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostCustomerAddressJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "city",
                "line_2",
                "state",
                "tags",
                "postcode",
                "county",
                "country_code",
                "status",
                "line_3",
                "line_1"
              ],
              "properties": {
                "city": { "type": "string", "example": "Berlin" },
                "line_2": { "type": "string", "example": "The Place" },
                "state": { "type": "string", "example": "Brandenburg" },
                "tags": { "type": "array", "items": { "type": "string" } },
                "postcode": { "type": "string", "example": "13359" },
                "county": { "type": "string", "example": "" },
                "country_code": { "type": "string", "example": "DE" },
                "status": { "type": "string", "example": "OK" },
                "line_3": { "type": "string", "example": "The Hill" },
                "line_1": { "type": "string", "example": "No 1 the Road" }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "city",
                "line_2",
                "customer_id",
                "state",
                "insert_date",
                "tags",
                "customer_address_id",
                "postcode",
                "county",
                "country_code",
                "status",
                "line_3",
                "line_1"
              ],
              "properties": {
                "city": { "type": "string", "example": "Berlin" },
                "line_2": { "type": "string", "example": "The Place" },
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "state": { "type": "string", "example": "Brandenburg" },
                "insert_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "tags": { "type": "array", "items": { "type": "string" } },
                "customer_address_id": {
                  "type": "string",
                  "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                },
                "postcode": { "type": "string", "example": "13359" },
                "county": { "type": "string", "example": "" },
                "country_code": { "type": "string", "example": "DE" },
                "status": { "type": "string", "example": "OK" },
                "line_3": { "type": "string", "example": "The Hill" },
                "line_1": { "type": "string", "example": "No 1 the Road" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses": {
      "get": {
        "tags": ["Customer", "KYC", "New-Style"],
        "summary": "Get Customer Addresses",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the Addresses of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getCustomerAddresses",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["addresses"],
              "properties": {
                "addresses": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address~post~responses~201~schema"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses/{CUSTOMER_ADDRESS_ID}": {
      "delete": {
        "tags": ["Customer", "KYC", "New-Style"],
        "summary": "Delete Customer Address",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteCustomerAddress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ADDRESS_ID",
            "description": "the customer address id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the Address of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerAddress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostCustomerAddressJsonV310 object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ADDRESS_ID",
            "description": "the customer address id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/branch": {
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the Branch of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the Branch of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerBranch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutUpdateCustomerBranchJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["branch_id"],
              "properties": {
                "branch_id": { "type": "string", "example": "123" }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit-limit": {
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the credit limit of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the credit limit of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerCreditLimit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutUpdateCustomerCreditLimitJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["credit_limit"],
              "properties": {
                "credit_limit": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~value"
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit-rating-and-source": {
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the credit rating and source of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the credit rating and source of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerCreditRatingAndSource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutUpdateCustomerCreditRatingAndSourceJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["credit_rating", "credit_source"],
              "properties": {
                "credit_rating": { "type": "string", "example": "Good" },
                "credit_source": { "type": "string", "example": "Bank" }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit_limit/requests": {
      "get": {
        "tags": ["Customer", "New-Style"],
        "summary": "Get Credit Limit Order Requests ",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p><p>Get Credit Limit Order Requests</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getCreditLimitRequests",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "rank_amount_1",
                "nominal_interest_1",
                "rank_amount_2",
                "nominal_interest_2"
              ],
              "properties": {
                "rank_amount_1": { "type": "string", "example": "String" },
                "nominal_interest_1": { "type": "string", "example": "String" },
                "rank_amount_2": { "type": "string", "example": "String" },
                "nominal_interest_2": { "type": "string", "example": "String" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Customer", "New-Style"],
        "summary": "Create Credit Limit Order Request",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p><p>Create credit limit order request</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-createCreditLimitRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreditLimitRequestJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "requested_current_rate_amount1",
                "temporary_credit_documentation",
                "requested_current_valid_end_date",
                "temporary_requested_current_amount",
                "requested_current_rate_amount2",
                "requested_temporary_valid_end_date",
                "current_credit_documentation"
              ],
              "properties": {
                "requested_current_rate_amount1": {
                  "type": "string",
                  "example": "String"
                },
                "temporary_credit_documentation": {
                  "type": "string",
                  "example": "String"
                },
                "requested_current_valid_end_date": {
                  "type": "string",
                  "example": "String"
                },
                "temporary_requested_current_amount": {
                  "type": "string",
                  "example": "String"
                },
                "requested_current_rate_amount2": {
                  "type": "string",
                  "example": "String"
                },
                "requested_temporary_valid_end_date": {
                  "type": "string",
                  "example": "String"
                },
                "current_credit_documentation": {
                  "type": "string",
                  "example": "String"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "execution_time",
                "execution_date",
                "token",
                "short_reference"
              ],
              "properties": {
                "execution_time": { "type": "string", "example": "String" },
                "execution_date": { "type": "string", "example": "String" },
                "token": { "type": "string", "example": "String" },
                "short_reference": { "type": "string", "example": "String" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit_limit/requests/{REQUEST_ID}": {
      "get": {
        "tags": ["Customer", "New-Style"],
        "summary": "Get Credit Limit Order Request By Request Id",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p><pre><code>    Get Credit Limit Order Request By Request Id</code></pre><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getCreditLimitRequestByRequestId",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "REQUEST_ID",
            "description": "the request id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit_limit/requests~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/data": {
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the other data of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the other data of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerData",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutUpdateCustomerDataJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "highest_education_attained",
                "employment_status",
                "face_image",
                "dependants",
                "relationship_status"
              ],
              "properties": {
                "highest_education_attained": {
                  "type": "string",
                  "example": "Master"
                },
                "employment_status": { "type": "string", "example": "worker" },
                "face_image": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~face_image",
                "dependants": {
                  "type": "integer",
                  "format": "int32",
                  "example": "1"
                },
                "relationship_status": { "type": "string", "example": "single" }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/email": {
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the email of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update an email of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutUpdateCustomerEmailJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["email"],
              "properties": {
                "email": { "type": "string", "example": "marko@tesobe.com" }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/identity": {
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the identity data of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the identity data of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerIdentity",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutUpdateCustomerIdentityJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "legal_name",
                "date_of_birth",
                "title",
                "name_suffix"
              ],
              "properties": {
                "legal_name": {
                  "type": "string",
                  "example": "Eveline Tripman"
                },
                "date_of_birth": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "title": { "type": "string", "example": "Dr." },
                "name_suffix": { "type": "string", "example": "Sr" }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_check/{KYC_CHECK_ID}": {
      "put": {
        "tags": ["KYC", "Customer", "New-Style"],
        "summary": "Add KYC Check",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add a KYC check for the customer specified by CUSTOMER_ID. KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-addKycCheck",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostKycCheckJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "customer_number",
                "how",
                "date",
                "satisfied",
                "staff_user_id",
                "staff_name",
                "comments"
              ],
              "properties": {
                "customer_number": { "type": "string", "example": "5987953" },
                "how": { "type": "string", "example": "online_meeting" },
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "satisfied": { "type": "boolean", "example": "true" },
                "staff_user_id": { "type": "string", "example": "67876" },
                "staff_name": { "type": "string", "example": "Simon" },
                "comments": { "type": "string", "example": "String" }
              }
            }
          },
          {
            "in": "path",
            "name": "KYC_CHECK_ID",
            "description": "The kyc check id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "customer_id",
                "customer_number",
                "bank_id",
                "id",
                "how",
                "date",
                "satisfied",
                "staff_user_id",
                "staff_name",
                "comments"
              ],
              "properties": {
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "customer_number": { "type": "string", "example": "5987953" },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "id": { "type": "string", "example": "PlaceholderString" },
                "how": { "type": "string", "example": "PlaceholderString" },
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "satisfied": { "type": "boolean", "example": "true" },
                "staff_user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "staff_name": {
                  "type": "string",
                  "example": "PlaceholderString"
                },
                "comments": { "type": "string", "example": "PlaceholderString" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_documents/{KYC_DOCUMENT_ID}": {
      "put": {
        "tags": ["KYC", "Customer", "New-Style"],
        "summary": "Add KYC Document",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add a KYC document for the customer specified by CUSTOMER_ID. KYC Documents contain the document type (e.g. passport), place of issue, expiry etc.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-addKycDocument",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostKycDocumentJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "number",
                "customer_number",
                "issue_date",
                "type",
                "issue_place",
                "expiry_date"
              ],
              "properties": {
                "number": { "type": "string", "example": "12345" },
                "customer_number": { "type": "string", "example": "5987953" },
                "issue_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "type": { "type": "string", "example": "passport" },
                "issue_place": { "type": "string", "example": "Berlin" },
                "expiry_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "KYC_DOCUMENT_ID",
            "description": "The kyc document id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "number",
                "customer_id",
                "customer_number",
                "issue_date",
                "bank_id",
                "id",
                "type",
                "issue_place",
                "expiry_date"
              ],
              "properties": {
                "number": { "type": "string", "example": "PlaceholderString" },
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "customer_number": { "type": "string", "example": "5987953" },
                "issue_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "id": { "type": "string", "example": "PlaceholderString" },
                "type": { "type": "string", "example": "PlaceholderString" },
                "issue_place": {
                  "type": "string",
                  "example": "PlaceholderString"
                },
                "expiry_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_media/{KYC_MEDIA_ID}": {
      "put": {
        "tags": ["KYC", "Customer", "New-Style"],
        "summary": "Add KYC Media",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add some KYC media for the customer specified by CUSTOMER_ID. KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-addKycMedia",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostKycMediaJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "url",
                "customer_number",
                "date",
                "relates_to_kyc_document_id",
                "relates_to_kyc_check_id",
                "type"
              ],
              "properties": {
                "url": {
                  "type": "string",
                  "example": "http://www.example.com/id-docs/123/image.png"
                },
                "customer_number": { "type": "string", "example": "5987953" },
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "relates_to_kyc_document_id": {
                  "type": "string",
                  "example": "123"
                },
                "relates_to_kyc_check_id": {
                  "type": "string",
                  "example": "123"
                },
                "type": { "type": "string", "example": "image" }
              }
            }
          },
          {
            "in": "path",
            "name": "KYC_MEDIA_ID",
            "description": "The kyc media id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "customer_id",
                "url",
                "customer_number",
                "bank_id",
                "id",
                "date",
                "relates_to_kyc_document_id",
                "relates_to_kyc_check_id",
                "type"
              ],
              "properties": {
                "customer_id": {
                  "type": "string",
                  "example": "PlaceholderString"
                },
                "url": { "type": "string", "example": "PlaceholderString" },
                "customer_number": { "type": "string", "example": "5987953" },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "id": { "type": "string", "example": "PlaceholderString" },
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "relates_to_kyc_document_id": {
                  "type": "string",
                  "example": "PlaceholderString"
                },
                "relates_to_kyc_check_id": {
                  "type": "string",
                  "example": "PlaceholderString"
                },
                "type": { "type": "string", "example": "PlaceholderString" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_statuses": {
      "put": {
        "tags": ["KYC", "Customer", "New-Style"],
        "summary": "Add KYC Status",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add a kyc_status for the customer specified by CUSTOMER_ID. KYC Status is a timeline of the KYC status of the customer</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-addKycStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostKycStatusJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["customer_number", "ok", "date"],
              "properties": {
                "customer_number": { "type": "string", "example": "5987953" },
                "ok": { "type": "boolean", "example": "true" },
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["customer_id", "customer_number", "ok", "date"],
              "properties": {
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "customer_number": { "type": "string", "example": "5987953" },
                "ok": { "type": "boolean", "example": "true" },
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/mobile-number": {
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the mobile number of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the mobile number of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerMobileNumber",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutUpdateCustomerMobilePhoneNumberJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["mobile_phone_number"],
              "properties": {
                "mobile_phone_number": {
                  "type": "string",
                  "example": "+381631954907"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/number": {
      "put": {
        "tags": ["Customer", "New-Style"],
        "summary": "Update the number of a Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the number of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCustomerNumber",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutUpdateCustomerNumberJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["customer_number"],
              "properties": {
                "customer_number": { "type": "string", "example": "5987953" }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get Customer Social Media Handles",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get social media handles for a customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-getSocialMediaHandles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["checks"],
              "properties": {
                "checks": {
                  "type": "array",
                  "items": {
                    "required": [
                      "date_activated",
                      "customer_number",
                      "date_added",
                      "type",
                      "handle"
                    ],
                    "properties": {
                      "date_activated": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "customer_number": {
                        "type": "string",
                        "example": "5987953"
                      },
                      "date_added": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "type": {
                        "type": "string",
                        "example": "PlaceholderString"
                      },
                      "handle": {
                        "type": "string",
                        "example": "PlaceholderString"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Customer"],
        "summary": "Add Social Media Handle",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Add a social media handle for the customer specified by CUSTOMER_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-addSocialMediaHandle",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "SocialMediaJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles~get~responses~200~schema~properties~checks~items"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residence": {
      "post": {
        "tags": ["Customer", "KYC", "New-Style"],
        "summary": "Create Tax Residence",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create a Tax Residence for a Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createTaxResidence",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostTaxResidenceJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["domain", "tax_number"],
              "properties": {
                "domain": { "type": "string", "example": "Enter some domain" },
                "tax_number": {
                  "type": "string",
                  "example": "Enter some number"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": ["domain", "tax_number", "tax_residence_id"],
              "properties": {
                "domain": { "type": "string", "example": "Enter some domain" },
                "tax_number": {
                  "type": "string",
                  "example": "Enter some number"
                },
                "tax_residence_id": {
                  "type": "string",
                  "example": "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residences": {
      "get": {
        "tags": ["Customer", "KYC", "New-Style"],
        "summary": "Get Tax Residences of Customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the Tax Residences of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getTaxResidence",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["tax_residence"],
              "properties": {
                "tax_residence": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residence~post~responses~201~schema"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax_residencies/{TAX_RESIDENCE_ID}": {
      "delete": {
        "tags": ["Customer", "KYC", "New-Style"],
        "summary": "Delete Tax Residence",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete a Tax Residence of the Customer specified by TAX_RESIDENCE_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteTaxResidence",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TAX_RESIDENCE_ID",
            "description": "the tax residence id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/customers/customer-number": {
      "post": {
        "tags": ["Customer", "KYC", "New-Style"],
        "summary": "Get Customer by CUSTOMER_NUMBER",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Gets the Customer specified by CUSTOMER_NUMBER.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getCustomerByCustomerNumber",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostCustomerNumberJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["customer_number"],
              "properties": {
                "customer_number": { "type": "string", "example": "5987953" }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/firehose/accounts/{ACCOUNT_ID}/views/{VIEW_ID}/transactions": {
      "get": {
        "tags": [
          "Transaction",
          "Account-Firehose",
          "Transaction-Firehose",
          "FirehoseData",
          "New-Style"
        ],
        "summary": "Get Firehose Transactions for Account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Transactions for an Account that has a firehose View.</p><p>Allows bulk access to an account's transactions.<br />User must have the CanUseFirehoseAtAnyBank Role</p><p>To find ACCOUNT_IDs, use the getFirehoseAccountsAtOneBank call.</p><p>For VIEW_ID try 'owner'</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 2020-08-03T06:25:43.086Z. NOTE! The default value is one year ago (2020-08-03T06:25:43.086Z).</li><li>to_date=DATE =&gt; example value: 2021-08-03T06:25:43.086Z. NOTE! The default value is now (2021-08-03T06:25:43.086Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(2017-09-19T02:31:05.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getFirehoseTransactionsForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/firehose/accounts/views/{VIEW_ID}": {
      "get": {
        "tags": ["Account", "Account-Firehose", "FirehoseData", "New-Style"],
        "summary": "Get Firehose Accounts at Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Accounts which have a firehose view assigned to them.</p><p>This endpoint allows bulk access to accounts.</p><p>Requires the CanUseFirehoseAtAnyBank Role</p><p>To be shown on the list, each Account must have a firehose View linked to it.</p><p>A firehose view has is_firehose = true</p><p>For VIEW_ID try 'owner'</p><p>optional request parameters for filter with attributes<br />URL params example:<br />/banks/some-bank-id/firehose/accounts/views/owner?manager=John&amp;count=8</p><p>to invalid Browser cache, add timestamp query parameter as follow, the parameter name must be <code>_timestamp_</code><br />URL params example:<br /><code>/banks/some-bank-id/firehose/accounts/views/owner?manager=John&amp;count=8&amp;_timestamp_=1596762180358</code></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getFirehoseAccountsAtOneBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["accounts"],
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "required": [
                      "number",
                      "account_routings",
                      "label",
                      "owners",
                      "balance",
                      "bank_id",
                      "id",
                      "type",
                      "account_rules"
                    ],
                    "properties": {
                      "number": { "type": "string", "example": "String" },
                      "account_attributes": {
                        "type": "array",
                        "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~responses~200~schema~properties~account_attributes~items"
                      },
                      "account_routings": {
                        "type": "array",
                        "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                      },
                      "label": { "type": "string", "example": "String" },
                      "owners": {
                        "type": "array",
                        "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~owners~items"
                      },
                      "balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                      "bank_id": { "type": "string", "example": "String" },
                      "id": {
                        "type": "string",
                        "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                      },
                      "type": { "type": "string", "example": "String" },
                      "account_rules": {
                        "type": "array",
                        "items": {
                          "required": ["scheme", "value"],
                          "properties": {
                            "scheme": {
                              "type": "string",
                              "example": "OVERDRAFT"
                            },
                            "value": { "type": "string", "example": "10" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/firehose/customers": {
      "get": {
        "tags": ["Customer", "FirehoseData", "New-Style"],
        "summary": "Get Firehose Customers",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Customers that has a firehose View.</p><p>Allows bulk access to customers.<br />User must have the CanUseFirehoseAtAnyBank Role</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 2020-08-03T06:25:43.110Z. NOTE! The default value is one year ago (2020-08-03T06:25:43.110Z).</li><li>to_date=DATE =&gt; example value: 2021-08-03T06:25:43.110Z. NOTE! The default value is now (2021-08-03T06:25:43.110Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(2017-09-19T02:31:05.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getFirehoseCustomers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/fx": {
      "put": {
        "tags": ["FX"],
        "summary": "Create Fx",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create or Update Fx for the Bank.</p><p>Example:</p><p>“from_currency_code”:“EUR”,<br />“to_currency_code”:“USD”,<br />“conversion_value”: 1.136305,<br />“inverse_conversion_value”: 1 / 1.136305 = 0.8800454103431737,</p><p>Thus 1 Euro = 1.136305 US Dollar<br />and<br />1 US Dollar = 0.8800 Euro</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.2.0-createFx",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "FXRateJsonV220 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "inverse_conversion_value",
                "to_currency_code",
                "effective_date",
                "conversion_value",
                "bank_id",
                "from_currency_code"
              ],
              "properties": {
                "inverse_conversion_value": {
                  "type": "number",
                  "format": "double",
                  "example": "0.998"
                },
                "to_currency_code": { "type": "string", "example": "GBP" },
                "effective_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "conversion_value": {
                  "type": "number",
                  "format": "double",
                  "example": "1.001"
                },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "from_currency_code": { "type": "string", "example": "EUR" }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/fx~put~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/fx/{FROM_CURRENCY_CODE}/{TO_CURRENCY_CODE}": {
      "get": {
        "tags": ["FX", "New-Style"],
        "summary": "Get Current FxRate",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the latest FX rate specified by BANK_ID, FROM_CURRENCY_CODE and TO_CURRENCY_CODE</p><p>OBP may try different sources of FX rate information depending on the Connector in operation.</p><p>For example we want to convert EUR =&gt; USD:</p><p>OBP will:<br />1st try - Connector (database, core banking system or external FX service)<br />2nd try part 1 - fallbackexchangerates/eur.json<br />2nd try part 2 - fallbackexchangerates/usd.json (the inverse rate is used)<br />3rd try - Hardcoded map of FX rates.</p><p><img src=\"https://user-images.githubusercontent.com/485218/60005085-1eded600-966e-11e9-96fb-798b102d9ad0.png\" alt=\"FX Flow\" /></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.2.0-getCurrentFxRate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "TO_CURRENCY_CODE",
            "description": "The to currency code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "FROM_CURRENCY_CODE",
            "description": "The from currency code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/fx~put~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. "
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/meetings": {
      "get": {
        "tags": ["Customer-Meeting", "Customer", "Experimental", "New-Style"],
        "summary": "Get Meetings",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getMeetings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["meetings"],
              "properties": {
                "meetings": {
                  "type": "array",
                  "items": {
                    "required": [
                      "present",
                      "provider_id",
                      "creator",
                      "invitees",
                      "bank_id",
                      "purpose_id",
                      "when",
                      "meeting_id",
                      "keys"
                    ],
                    "properties": {
                      "present": {
                        "required": ["staff_user_id", "customer_user_id"],
                        "properties": {
                          "staff_user_id": {
                            "type": "string",
                            "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                          },
                          "customer_user_id": {
                            "type": "string",
                            "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                          }
                        }
                      },
                      "provider_id": { "type": "string", "example": "Chris" },
                      "creator": {
                        "required": ["name", "mobile_phone", "email_address"],
                        "properties": {
                          "name": { "type": "string", "example": "Simon " },
                          "mobile_phone": {
                            "type": "string",
                            "example": "+44 07972 444 876"
                          },
                          "email_address": {
                            "type": "string",
                            "example": "felixsmith@example.com"
                          }
                        }
                      },
                      "invitees": {
                        "type": "array",
                        "items": {
                          "required": ["contact_details", "status"],
                          "properties": {
                            "contact_details": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items~properties~creator",
                            "status": {
                              "type": "string",
                              "example": "String, eg: Good"
                            }
                          }
                        }
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "purpose_id": {
                        "type": "string",
                        "example": "String, eg: onboarding"
                      },
                      "when": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "meeting_id": {
                        "type": "string",
                        "example": "UUID-String"
                      },
                      "keys": {
                        "required": [
                          "session_id",
                          "staff_token",
                          "customer_token"
                        ],
                        "properties": {
                          "session_id": {
                            "type": "string",
                            "example": "String"
                          },
                          "staff_token": {
                            "type": "string",
                            "example": "String"
                          },
                          "customer_token": {
                            "type": "string",
                            "example": "String"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Customer-Meeting", "Customer", "Experimental", "New-Style"],
        "summary": "Create Meeting (video conference/call)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The Meetings resource contains meta data about video/other conference sessions</p><p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p><p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login is required.</p><p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createMeeting",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateMeetingJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "provider_id",
                "creator",
                "invitees",
                "date",
                "purpose_id"
              ],
              "properties": {
                "provider_id": { "type": "string", "example": "Chris" },
                "creator": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items~properties~creator",
                "invitees": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items~properties~invitees~items"
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "purpose_id": {
                  "type": "string",
                  "example": "String, eg: onboarding"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/meetings/{MEETING_ID}": {
      "get": {
        "tags": ["Customer-Meeting", "Customer", "Experimental", "New-Style"],
        "summary": "Get Meeting",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Meeting specified by BANK_ID / MEETING_ID<br />Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getMeeting",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "MEETING_ID",
            "description": "the meeting id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/my/consents": {
      "get": {
        "tags": [
          "Consent",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Consents",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>This endpoint gets the Consents that the current User created.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getConsents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["consents"],
              "properties": {
                "consents": {
                  "type": "array",
                  "items": {
                    "required": ["consent_id", "jwt", "status"],
                    "properties": {
                      "consent_id": {
                        "type": "string",
                        "example": "9d429899-24f5-42c8-8565-943ffa6a7945"
                      },
                      "jwt": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
                      },
                      "status": { "type": "string", "example": "INITIATED" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/my/consents/{CONSENT_ID}/revoke": {
      "get": {
        "tags": [
          "Consent",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Revoke Consent",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Revoke Consent for current user specified by CONSENT_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-revokeConsent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CONSENT_ID",
            "description": "the consent id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents~get~responses~200~schema~properties~consents~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/my/consents/EMAIL": {
      "post": {
        "tags": [
          "Consent",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Create Consent (EMAIL)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>This endpoint starts the process of creating a Consent.</p><p>The Consent is created in an INITIATED state.</p><p>A One Time Password (OTP) (AKA security challenge) is sent Out of band (OOB) to the User via the transport defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot; or &quot;EMAIL&quot;. &quot;EMAIL&quot; is used for testing purposes.</p><p>When the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.</p><p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p><p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p><p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p><p>Example of POST JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;e&#118;&#101;&#x6c;&#x69;&#110;e&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#x65;.&#99;&#111;&#109;\">&#101;&#118;e&#108;&#x69;&#110;&#101;&#x40;&#x65;x&#97;&#x6d;&#112;&#x6c;&#101;.c&#x6f;&#109;</a>&quot;,<br />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;: 3600<br />}<br />Please note that only optional fields are: consumer_id, valid_from and time_to_live.<br />In case you omit they the default values are used:<br />consumer_id = consumer of current user<br />valid_from = current time<br />time_to_live = consents.max_time_to_live</p><p>Authentication is Mandatory</p><p>Example 1:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#58;e&#x76;&#x65;&#108;&#x69;&#x6e;e&#64;&#x65;&#x78;&#97;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#x6f;&#x6d;\">&#x65;&#118;&#101;&#108;&#105;&#110;&#101;&#64;exam&#112;l&#101;&#x2e;c&#111;&#x6d;</a>&quot;<br />}</p><p>Please note that consumer_id is optional field<br />Example 2:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;email&quot;: &quot;<a href=\"m&#97;i&#108;&#116;&#111;&#58;&#101;&#118;&#x65;l&#105;&#x6e;e&#x40;&#101;&#x78;&#97;&#x6d;&#x70;l&#x65;&#46;&#99;&#x6f;&#109;\">&#x65;&#118;el&#105;&#110;&#101;@&#x65;&#120;&#97;&#x6d;&#112;&#108;&#101;&#46;&#x63;&#x6f;&#109;</a>&quot;<br />}</p><p>Please note if everything=false you need to explicitly specify views and entitlements<br />Example 3:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#x6d;ai&#108;&#x74;&#111;&#x3a;&#101;&#x76;&#101;&#108;&#105;&#x6e;e&#64;&#101;x&#97;&#x6d;&#112;&#x6c;&#101;.&#99;&#111;&#x6d;\">e&#118;&#x65;&#x6c;&#105;&#110;&#101;@&#101;&#120;&#x61;&#109;pl&#101;&#x2e;&#99;&#x6f;&#x6d;</a>&quot;<br />}</p>",
        "operationId": "OBPv3.1.0-createConsentEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostConsentEmailJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["email", "everything", "views", "entitlements"],
              "properties": {
                "time_to_live": {
                  "type": "integer",
                  "format": "int64",
                  "example": "3600"
                },
                "email": {
                  "type": "string",
                  "example": "felixsmith@example.com"
                },
                "everything": { "type": "boolean", "example": "false" },
                "consumer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "valid_from": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-08-03T06:25:38Z"
                },
                "views": {
                  "type": "array",
                  "items": {
                    "required": ["bank_id", "account_id", "view_id"],
                    "properties": {
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "account_id": {
                        "type": "string",
                        "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                      },
                      "view_id": { "type": "string", "example": "owner" }
                    }
                  }
                },
                "entitlements": {
                  "type": "array",
                  "items": {
                    "required": ["bank_id", "role_name"],
                    "properties": {
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "role_name": {
                        "type": "string",
                        "example": "CanGetCustomer"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents~get~responses~200~schema~properties~consents~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/my/consents/SMS": {
      "post": {
        "tags": [
          "Consent",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Create Consent (SMS)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>This endpoint starts the process of creating a Consent.</p><p>The Consent is created in an INITIATED state.</p><p>A One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot; or &quot;EMAIL&quot;. &quot;EMAIL&quot; is used for testing purposes.</p><p>When the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.</p><p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p><p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p><p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p><p>Example of POST JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;ev&#x65;&#108;i&#x6e;&#x65;&#x40;&#x65;x&#x61;m&#112;&#x6c;&#x65;&#46;&#99;&#x6f;&#109;\">&#101;v&#101;&#x6c;&#x69;&#x6e;&#x65;&#64;&#101;&#120;&#x61;&#x6d;&#112;&#108;&#101;&#x2e;c&#x6f;&#109;</a>&quot;,<br />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;: 3600<br />}<br />Please note that only optional fields are: consumer_id, valid_from and time_to_live.<br />In case you omit they the default values are used:<br />consumer_id = consumer of current user<br />valid_from = current time<br />time_to_live = consents.max_time_to_live</p><p>Authentication is Mandatory</p><p>Example 1:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#109;a&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x65;v&#101;l&#x69;&#110;&#101;@&#101;&#x78;&#x61;&#109;&#112;l&#x65;&#x2e;c&#x6f;m\">&#101;ve&#108;i&#110;&#101;&#x40;ex&#97;&#x6d;&#112;&#108;&#x65;.&#99;&#111;&#x6d;</a>&quot;<br />}</p><p>Please note that consumer_id is optional field<br />Example 2:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;email&quot;: &quot;<a href=\"&#109;&#97;&#105;&#108;&#116;o&#58;e&#118;&#x65;&#108;i&#110;e&#64;&#101;xa&#109;&#112;l&#101;&#46;&#x63;&#111;&#109;\">&#x65;v&#101;&#108;&#105;n&#x65;&#x40;&#x65;&#120;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;&#x6f;&#x6d;</a>&quot;<br />}</p><p>Please note if everything=false you need to explicitly specify views and entitlements<br />Example 3:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#x6d;&#x61;&#105;&#x6c;&#x74;o&#58;&#x65;&#118;&#x65;&#108;&#105;&#110;e&#64;&#101;&#x78;&#97;m&#x70;&#108;&#101;&#x2e;&#99;&#x6f;m\">&#x65;&#118;&#101;l&#105;&#x6e;e&#64;&#x65;&#x78;&#97;&#109;&#x70;&#108;&#101;&#x2e;&#x63;o&#109;</a>&quot;<br />}</p>",
        "operationId": "OBPv3.1.0-createConsentSms",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostConsentPhoneJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "phone_number",
                "everything",
                "views",
                "entitlements"
              ],
              "properties": {
                "phone_number": {
                  "type": "string",
                  "example": "+44 07972 444 876"
                },
                "time_to_live": {
                  "type": "integer",
                  "format": "int64",
                  "example": "3600"
                },
                "everything": { "type": "boolean", "example": "false" },
                "consumer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "valid_from": {
                  "type": "string",
                  "format": "date",
                  "example": "2021-08-03T06:25:38Z"
                },
                "views": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents/EMAIL~post~parameters~0~schema~properties~views~items"
                },
                "entitlements": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents/EMAIL~post~parameters~0~schema~properties~entitlements~items"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents~get~responses~200~schema~properties~consents~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}": {
      "get": {
        "tags": ["Product-Collection", "Product", "New-Style"],
        "summary": "Get Product Collection",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about the financial Product Collection specified by BANK_ID and COLLECTION_CODE:</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getProductCollection",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "COLLECTION_CODE",
            "description": "the collection code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["collection_code", "products"],
              "properties": {
                "collection_code": { "type": "string", "example": "A" },
                "products": {
                  "type": "array",
                  "items": {
                    "required": [
                      "name",
                      "description",
                      "more_info_url",
                      "super_family",
                      "code",
                      "bank_id",
                      "meta",
                      "details",
                      "category",
                      "family",
                      "parent_product_code"
                    ],
                    "properties": {
                      "name": { "type": "string", "example": "product name" },
                      "description": {
                        "type": "string",
                        "example": "Description"
                      },
                      "more_info_url": {
                        "type": "string",
                        "example": "www.example.com/prod1/more-info.html"
                      },
                      "super_family": {
                        "type": "string",
                        "example": "super family"
                      },
                      "code": { "type": "string", "example": "product_code" },
                      "product_attributes": {
                        "type": "array",
                        "items": {
                          "required": [
                            "name",
                            "product_attribute_id",
                            "product_code",
                            "type",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "OVERDRAFT_START_DATE"
                            },
                            "product_attribute_id": {
                              "type": "string",
                              "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
                            },
                            "product_code": {
                              "type": "string",
                              "example": "saving1"
                            },
                            "type": {
                              "type": "string",
                              "example": "DATE_WITH_DAY"
                            },
                            "value": {
                              "type": "string",
                              "example": "2012-04-23"
                            }
                          }
                        }
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "meta": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~meta",
                      "details": { "type": "string", "example": "Details" },
                      "category": { "type": "string", "example": "category" },
                      "family": { "type": "string", "example": "family" },
                      "parent_product_code": {
                        "type": "string",
                        "example": "parent"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Product-Collection", "Product", "New-Style"],
        "summary": "Create Product Collection",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create or Update a Product Collection at the Bank.</p><p>Use Product Collections to create Product &quot;Baskets&quot;, &quot;Portfolios&quot;, &quot;Indices&quot;, &quot;Collections&quot;, &quot;Underlyings-lists&quot;, &quot;Buckets&quot; etc. etc.</p><p>There is a many to many relationship between Products and Product Collections:</p><ul><li><p>A Product can exist in many Collections</p></li><li><p>A Collection can contain many Products.</p></li></ul><p>A collection has collection code, one parent Product and one or more child Products.</p><p>Product hiearchy vs Product Collections:</p><ul><li><p>You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.</p></li><li><p>You can define a collection (also known as baskets or buckets) of products using Product Collections.</p></li></ul><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createProductCollection",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutProductCollectionsV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["parent_product_code", "children_product_codes"],
              "properties": {
                "parent_product_code": { "type": "string", "example": "A" },
                "children_product_codes": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "COLLECTION_CODE",
            "description": "the collection code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["product_collection"],
              "properties": {
                "product_collection": {
                  "type": "array",
                  "items": {
                    "required": ["collection_code", "product_code", "items"],
                    "properties": {
                      "collection_code": { "type": "string", "example": "C" },
                      "product_code": { "type": "string", "example": "D" },
                      "items": {
                        "type": "array",
                        "items": {
                          "required": ["member_product_code"],
                          "properties": {
                            "member_product_code": {
                              "type": "string",
                              "example": "A"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/product-tree/{PRODUCT_CODE}": {
      "get": {
        "tags": ["Product", "New-Style"],
        "summary": "Get Product Tree",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about a particular financial product specified by BANK_ID and PRODUCT_CODE<br />and it's parent product(s) recursively as specified by parent_product_code.</p><p>Each product includes the following information.</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>Category</li><li>Family</li><li>Super Family</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>License: The licence under which this product data is released. Licence can be an Open Data licence such as Open Data Commons Public Domain Dedication and License (PDDL) or Copyright etc.</li></ul><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getProductTree",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "name",
                "description",
                "more_info_url",
                "super_family",
                "code",
                "bank_id",
                "meta",
                "details",
                "category",
                "family"
              ],
              "properties": {
                "name": { "type": "string", "example": "product name" },
                "description": { "type": "string", "example": "Description" },
                "parent_product": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-tree/{PRODUCT_CODE}~get~responses~200~schema",
                "more_info_url": {
                  "type": "string",
                  "example": "www.example.com/prod1/more-info.html"
                },
                "super_family": { "type": "string", "example": "super family" },
                "code": { "type": "string", "example": "PARENT_CODE" },
                "bank_id": { "type": "string", "example": "testBank2" },
                "meta": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~meta",
                "details": { "type": "string", "example": "Details" },
                "category": { "type": "string", "example": "category" },
                "family": { "type": "string", "example": "family" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE."
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/products": {
      "get": {
        "tags": ["Product", "New-Style"],
        "summary": "Get Products",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about the financial products offered by a bank specified by BANK_ID including:</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>Category</li><li>Family</li><li>Super Family</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>License the data under this endpoint is released under</li></ul><p>Can filter with attributes name and values.<br />URL params example: /banks/some-bank-id/products?manager=John&amp;count=8</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getProducts",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["products"],
              "properties": {
                "products": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema~properties~products~items"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}": {
      "get": {
        "tags": ["Product", "New-Style"],
        "summary": "Get Bank Product",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about a financial Product offered by the bank specified by BANK_ID and PRODUCT_CODE including:</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>Category</li><li>Family</li><li>Super Family</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>License the data under this endpoint is released under</li></ul><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getProduct",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema~properties~products~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-tree/{PRODUCT_CODE}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Product", "New-Style"],
        "summary": "Create Product",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create or Update Product for the Bank.</p><p>Typical Super Family values / Asset classes are:</p><p>Debt<br />Equity<br />FX<br />Commodity<br />Derivative</p><p>Product hiearchy vs Product Collections:</p><ul><li><p>You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.</p></li><li><p>You can define a collection (also known as baskets or buckets) of products using Product Collections.</p></li></ul><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createProduct",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostPutProductJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "name",
                "description",
                "more_info_url",
                "super_family",
                "meta",
                "details",
                "category",
                "family",
                "parent_product_code"
              ],
              "properties": {
                "name": { "type": "string", "example": "product name" },
                "description": { "type": "string", "example": "Description" },
                "more_info_url": {
                  "type": "string",
                  "example": "www.example.com/prod1/more-info.html"
                },
                "super_family": { "type": "string", "example": "super family" },
                "meta": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~meta",
                "details": { "type": "string", "example": "Details" },
                "category": { "type": "string", "example": "category" },
                "family": { "type": "string", "example": "family" },
                "parent_product_code": {
                  "type": "string",
                  "example": "parent product name"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema~properties~products~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attribute": {
      "post": {
        "tags": ["Product", "New-Style"],
        "summary": "Create Product Attribute",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Typical product attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createProductAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ProductAttributeJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["name", "type", "value"],
              "properties": {
                "name": { "type": "string", "example": "OVERDRAFT_START_DATE" },
                "type": { "type": "string", "example": "DATE_WITH_DAY" },
                "value": { "type": "string", "example": "2012-04-23" }
              }
            }
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema~properties~products~items~properties~product_attributes~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attributes/{PRODUCT_ATTRIBUTE_ID}": {
      "delete": {
        "tags": ["Product", "New-Style"],
        "summary": "Delete Product Attribute",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Delete a Product Attribute by its id.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteProductAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PRODUCT_ATTRIBUTE_ID",
            "description": "the product attribute id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["Product", "New-Style"],
        "summary": "Get Product Attribute",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Get one product attribute by its id.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getProductAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PRODUCT_ATTRIBUTE_ID",
            "description": "the product attribute id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema~properties~products~items~properties~product_attributes~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Product", "New-Style"],
        "summary": "Update Product Attribute",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update Product Attribute.</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Update one Product Attribute by its id.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateProductAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ProductAttributeJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attribute~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "PRODUCT_ATTRIBUTE_ID",
            "description": "the product attribute id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "PRODUCT_CODE",
            "description": "the product code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema~properties~products~items~properties~product_attributes~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/public/accounts/{ACCOUNT_ID}/{VIEW_ID}/account": {
      "get": {
        "tags": ["Account-Public", "Account", "New-Style"],
        "summary": "Get Public Account by Id",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about an account that has a public view.</p><p>The account is specified by ACCOUNT_ID. The information is moderated by the view specified by VIEW_ID.</p><ul><li>Number</li><li>Owners</li><li>Type</li><li>Balance</li><li>Routing</li></ul><p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications.<br />This call provides balance and other account information via delegated authentication using OAuth.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getPublicAccountById",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/firehose/accounts/views/{VIEW_ID}~get~responses~200~schema~properties~accounts~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/transaction-request-types": {
      "get": {
        "tags": ["Transaction-Request", "Bank", "New-Style"],
        "summary": "Get Transaction Request Types at Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the list of the Transaction Request Types supported by the bank.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv2.1.0-getTransactionRequestTypesSupportedByBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["transaction_request_types"],
              "properties": {
                "transaction_request_types": {
                  "type": "array",
                  "items": {
                    "required": ["transaction_request_type"],
                    "properties": {
                      "transaction_request_type": {
                        "type": "string",
                        "example": "SandboxTan"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/transaction-types": {
      "get": {
        "tags": [
          "Bank",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Transaction Types at Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Transaction Types for the bank specified by BANK_ID:</p><p>Lists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).</p><ul><li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li><li>bank_id : The bank that supports this TransactionType</li><li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li><li>summary : A succinct summary</li><li>description : A longer description</li><li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Optional</p>",
        "operationId": "OBPv2.0.0-getTransactionTypes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["transaction_types"],
              "properties": {
                "transaction_types": {
                  "type": "array",
                  "items": {
                    "required": [
                      "description",
                      "short_code",
                      "bank_id",
                      "id",
                      "charge",
                      "summary"
                    ],
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "PlaceholderString"
                      },
                      "short_code": {
                        "type": "string",
                        "example": "PlaceholderString"
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "id": {
                        "required": ["value"],
                        "properties": {
                          "value": { "type": "string", "example": "123" }
                        }
                      },
                      "charge": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                      "summary": {
                        "type": "string",
                        "example": "PlaceholderString"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Bank"],
        "summary": "Create Transaction Type at bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Transaction Types for the bank specified by BANK_ID:</p><ul><li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li><li>bank_id : The bank that supports this TransactionType</li><li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li><li>summary : A succinct summary</li><li>description : A longer description</li><li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-createTransactionType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionTypeJsonV200 object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-types~get~responses~200~schema~properties~transaction_types~items"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "shortCode",
                "description",
                "id",
                "charge",
                "bankId",
                "summary"
              ],
              "properties": {
                "shortCode": { "type": "string", "example": "80080" },
                "description": {
                  "type": "string",
                  "example": "This is the sandbox mode, charging litter money."
                },
                "id": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-types~get~responses~200~schema~properties~transaction_types~items~properties~id",
                "charge": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~value",
                "bankId": {
                  "required": ["value"],
                  "properties": {
                    "value": { "type": "string", "example": "gh.uk.9j" }
                  }
                },
                "summary": { "type": "string", "example": "SANDBOX_TAN" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/user_customer_links": {
      "post": {
        "tags": ["Customer", "User"],
        "summary": "Create User Customer Link",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Link a User to a Customer</p><p>Authentication is Mandatory</p><p>CanCreateUserCustomerLink OR CanCreateUserCustomerLinkAtAnyBank entitlements are required.</p>",
        "operationId": "OBPv2.0.0-createUserCustomerLinks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateUserCustomerLinkJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["user_id", "customer_id"],
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "is_active",
                "customer_id",
                "user_id",
                "date_inserted",
                "user_customer_link_id"
              ],
              "properties": {
                "is_active": { "type": "boolean", "example": "true" },
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "date_inserted": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "user_customer_link_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements": {
      "get": {
        "tags": ["Role", "Entitlement", "User", "New-Style"],
        "summary": "Get Entitlements for User at Bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Entitlements specified by BANK_ID and USER_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-getEntitlementsByBankAndUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["list"],
              "properties": {
                "list": {
                  "type": "array",
                  "items": {
                    "required": ["entitlement_id", "role_name", "bank_id"],
                    "properties": {
                      "entitlement_id": {
                        "type": "string",
                        "example": "6fb17583-1e49-4435-bb74-a14fe0996723"
                      },
                      "role_name": {
                        "type": "string",
                        "example": "CanQueryOtherUser"
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{AUTH_CONTEXT_UPDATE_ID}/challenge": {
      "post": {
        "tags": ["User", "New-Style"],
        "summary": "Answer Auth Context Update Challenge",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Answer Auth Context Update Challenge.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-answerUserAuthContextUpdateChallenge",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostUserAuthContextUpdateJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["answer"],
              "properties": {
                "answer": { "type": "string", "example": "12345678" }
              }
            }
          },
          {
            "in": "path",
            "name": "AUTH_CONTEXT_UPDATE_ID",
            "description": "the auth context update id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "user_auth_context_update_id",
                "user_id",
                "key",
                "status",
                "value"
              ],
              "properties": {
                "user_auth_context_update_id": {
                  "type": "string",
                  "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
                },
                "user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "key": { "type": "string", "example": "CUSTOMER_NUMBER" },
                "status": { "type": "string", "example": "INITIATED" },
                "value": { "type": "string", "example": "78987432" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{SCA_METHOD}": {
      "post": {
        "tags": ["User", "New-Style"],
        "summary": "Create User Auth Context Update Request",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create User Auth Context Update Request.<br />Authentication is Mandatory</p><p>A One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot; or &quot;EMAIL&quot;. &quot;EMAIL&quot; is used for testing purposes.</p>",
        "operationId": "OBPv3.1.0-createUserAuthContextUpdateRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostUserAuthContextJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["key", "value"],
              "properties": {
                "key": { "type": "string", "example": "CUSTOMER_NUMBER" },
                "value": { "type": "string", "example": "78987432" }
              }
            }
          },
          {
            "in": "path",
            "name": "SCA_METHOD",
            "description": "the sca method",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{AUTH_CONTEXT_UPDATE_ID}/challenge~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/cards": {
      "get": {
        "tags": ["Card"],
        "summary": "Get cards for the current user",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv1.3.0-getCards",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["cards"],
              "properties": {
                "cards": {
                  "type": "array",
                  "items": {
                    "required": [
                      "allows",
                      "expires_date",
                      "networks",
                      "issue_number",
                      "replacement",
                      "enabled",
                      "collected",
                      "technology",
                      "cancelled",
                      "bank_id",
                      "pin_reset",
                      "serial_number",
                      "account",
                      "valid_from_date",
                      "bank_card_number",
                      "name_on_card",
                      "posted",
                      "on_hot_list"
                    ],
                    "properties": {
                      "allows": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "expires_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "networks": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "issue_number": { "type": "string", "example": "1" },
                      "replacement": {
                        "required": ["requested_date", "reason_requested"],
                        "properties": {
                          "requested_date": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-09-19T00:00:00Z"
                          },
                          "reason_requested": {
                            "type": "string",
                            "example": "RENEW"
                          }
                        }
                      },
                      "enabled": { "type": "boolean", "example": "true" },
                      "collected": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "technology": { "type": "string", "example": "String" },
                      "cancelled": { "type": "boolean", "example": "true" },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "pin_reset": {
                        "type": "array",
                        "items": {
                          "required": ["requested_date", "reason_requested"],
                          "properties": {
                            "requested_date": {
                              "type": "string",
                              "format": "date",
                              "example": "2021-08-03T06:25:38Z"
                            },
                            "reason_requested": {
                              "type": "string",
                              "example": "GOOD_SECURITY_PRACTICE"
                            }
                          }
                        }
                      },
                      "serial_number": {
                        "type": "string",
                        "example": "1324234"
                      },
                      "account": {
                        "required": [
                          "id",
                          "label",
                          "views_available",
                          "bank_id"
                        ],
                        "properties": {
                          "id": { "type": "string", "example": "123" },
                          "label": { "type": "string", "example": "OBP" },
                          "views_available": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~views_available~items"
                          },
                          "bank_id": { "type": "string", "example": "gh.29.uk" }
                        }
                      },
                      "valid_from_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "bank_card_number": {
                        "type": "string",
                        "example": "364435172576215"
                      },
                      "name_on_card": { "type": "string", "example": "String" },
                      "posted": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "on_hot_list": { "type": "boolean", "example": "true" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/certs": {
      "get": {
        "tags": [
          "API",
          "Account Information Service (AIS)",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get JSON Web Key (JWK)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getServerJWK",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["e", "n", "kty", "use", "kid"],
              "properties": {
                "e": { "type": "string", "example": "AQAB" },
                "n": {
                  "type": "string",
                  "example": "hrB0OWqg6AeNU3WCnhheG18R5EbQtdNYGOaSeylTjkj2lZr0_vkhNVYvase-CroxO4HOT06InxTYwLnmJiyv2cZxReuoVjTlk--olGu-9MZooiFiqWez0JzndyKxQ27OiAjFsMh0P04kaUXeHKhXRfiU7K2FqBshR1UlnWe7iHLkq2p9rrGjxQc7ff0w-Uc0f-8PWg36Y2Od7s65493iVQwnI13egqMaSvgB1s8_dgm08noEjhr8C5m1aKmr5oipWEPNi-SBV2VNuiCLR1IEPuXq0tOwwZfv31t34KPO-2H2bbaWmzGJy9mMOGqoNrbXyGiUZoyeHRELaNtm1GilyQ"
                },
                "kty": { "type": "string", "example": "RSA" },
                "use": { "type": "string", "example": "sig" },
                "kid": {
                  "type": "string",
                  "example": "fr6-BxXH5gikFeZ2O6rGk0LUmJpukeswASN_TMW8U_s"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/config": {
      "get": {
        "tags": ["API", "New-Style"],
        "summary": "Get API Configuration",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-config",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["akka", "elastic_search", "cache", "scopes"],
              "properties": {
                "akka": {
                  "required": ["ports", "log_level"],
                  "properties": {
                    "ports": {
                      "type": "array",
                      "items": {
                        "required": ["property", "value"],
                        "properties": {
                          "property": {
                            "type": "string",
                            "example": "default"
                          },
                          "value": { "type": "string", "example": "8080" }
                        }
                      }
                    },
                    "log_level": { "type": "string", "example": "Debug" },
                    "remote_data_secret_matched": {
                      "type": "boolean",
                      "example": "true"
                    }
                  }
                },
                "elastic_search": {
                  "required": ["metrics", "warehouse"],
                  "properties": {
                    "metrics": {
                      "type": "array",
                      "items": {
                        "required": ["property", "value"],
                        "properties": {
                          "property": { "type": "string", "example": "String" },
                          "value": { "type": "string", "example": "Mapper" }
                        }
                      }
                    },
                    "warehouse": {
                      "type": "array",
                      "items": {
                        "required": ["property", "value"],
                        "properties": {
                          "property": { "type": "string", "example": "String" },
                          "value": {
                            "type": "string",
                            "example": "ElasticSearch"
                          }
                        }
                      }
                    }
                  }
                },
                "cache": {
                  "type": "array",
                  "items": {
                    "required": ["function_name", "ttl_in_seconds"],
                    "properties": {
                      "function_name": {
                        "type": "string",
                        "example": "getBanks"
                      },
                      "ttl_in_seconds": {
                        "type": "integer",
                        "format": "int32",
                        "example": "5"
                      }
                    }
                  }
                },
                "scopes": {
                  "required": [
                    "require_scopes_for_all_roles",
                    "require_scopes_for_listed_roles"
                  ],
                  "properties": {
                    "require_scopes_for_all_roles": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "require_scopes_for_listed_roles": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/connector/loopback": {
      "get": {
        "tags": ["API", "New-Style"],
        "summary": "Get Connector Status (Loopback)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>This endpoint makes a call to the Connector to check the backend transport (e.g. Kafka) is reachable.</p><p>Currently this is only implemented for Kafka based connectors.</p><p>For Kafka based connectors, this endpoint writes a message to Kafka and reads it again.</p><p>In the future, this endpoint may also return information about database connections etc.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getObpConnectorLoopback",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["connector_version", "git_commit", "duration_time"],
              "properties": {
                "connector_version": {
                  "type": "string",
                  "example": "kafka_vSept2018"
                },
                "git_commit": {
                  "type": "string",
                  "example": "f0acd4be14cdcb94be3433ec95c1ad65228812a0"
                },
                "duration_time": { "type": "string", "example": "10 ms" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/consumers/{CONSUMER_ID}/scope/{SCOPE_ID}": {
      "delete": {
        "tags": ["Scope", "Consumer", "New-Style"],
        "summary": "Delete Consumer Scope",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-deleteScope",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "SCOPE_ID",
            "description": "the scope id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CONSUMER_ID",
            "description": "new consumer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/consumers/{CONSUMER_ID}/scopes": {
      "get": {
        "tags": ["Scope", "Consumer", "New-Style"],
        "summary": "Get Scopes for Consumer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get all the scopes for an consumer specified by CONSUMER_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getScopes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CONSUMER_ID",
            "description": "new consumer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["list"],
              "properties": {
                "list": {
                  "type": "array",
                  "items": {
                    "required": ["scope_id", "role_name", "bank_id"],
                    "properties": {
                      "scope_id": {
                        "type": "string",
                        "example": "88625da4-a671-435e-9d24-e5b6e5cc404f"
                      },
                      "role_name": {
                        "type": "string",
                        "example": "CanGetEntitlementsForAnyUserAtOneBank"
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Scope", "Consumer", "New-Style"],
        "summary": "Create Scope for a Consumer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Scope. Grant Role to Consumer.</p><p>Scopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-addScope",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateScopeJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["bank_id", "role_name"],
              "properties": {
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "role_name": {
                  "type": "string",
                  "example": "CanGetEntitlementsForAnyUserAtOneBank"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "CONSUMER_ID",
            "description": "new consumer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/consumers/{CONSUMER_ID}/scopes~get~responses~200~schema~properties~list~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_checks": {
      "get": {
        "tags": ["KYC", "Customer", "New-Style"],
        "summary": "Get Customer KYC Checks",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get KYC checks for the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-getKycChecks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["checks"],
              "properties": {
                "checks": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_check/{KYC_CHECK_ID}~put~responses~200~schema"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_documents": {
      "get": {
        "tags": ["KYC", "Customer", "New-Style"],
        "summary": "Get Customer KYC Documents",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID<br />Get a list of documents that affirm the identity of the customer<br />Passport, driving licence etc.<br />Authentication is Optional</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-getKycDocuments",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["documents"],
              "properties": {
                "documents": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_documents/{KYC_DOCUMENT_ID}~put~responses~200~schema"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_media": {
      "get": {
        "tags": ["KYC", "Customer", "New-Style"],
        "summary": "Get KYC Media for a customer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get KYC media (scans, pictures, videos) that affirms the identity of the customer.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-getKycMedia",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["medias"],
              "properties": {
                "medias": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_media/{KYC_MEDIA_ID}~put~responses~200~schema"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_statuses": {
      "get": {
        "tags": ["KYC", "Customer", "New-Style"],
        "summary": "Get Customer KYC statuses",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the KYC statuses for a customer specified by CUSTOMER_ID over time.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-getKycStatuses",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CUSTOMER_ID",
            "description": "The customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["statuses"],
              "properties": {
                "statuses": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_statuses~put~responses~200~schema"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/entitlement-requests": {
      "get": {
        "tags": ["Role", "Entitlement", "User", "New-Style"],
        "summary": "Get all Entitlement Requests",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get all Entitlement Requests</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getAllEntitlementRequests",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["entitlement_requests"],
              "properties": {
                "entitlement_requests": {
                  "type": "array",
                  "items": {
                    "required": [
                      "entitlement_request_id",
                      "role_name",
                      "bank_id",
                      "user",
                      "created"
                    ],
                    "properties": {
                      "entitlement_request_id": {
                        "type": "string",
                        "example": "6fb17583-1e49-4435-bb74-a14fe0996723"
                      },
                      "role_name": {
                        "type": "string",
                        "example": "CanQueryOtherUser"
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "user": {
                        "required": [
                          "provider",
                          "email",
                          "username",
                          "provider_id",
                          "user_id",
                          "entitlements"
                        ],
                        "properties": {
                          "provider": {
                            "type": "string",
                            "example": "http://127.0.0.1:8080"
                          },
                          "email": {
                            "type": "string",
                            "example": "felixsmith@example.com"
                          },
                          "username": {
                            "type": "string",
                            "example": "felixsmith"
                          },
                          "provider_id": {
                            "type": "string",
                            "example": "Chris"
                          },
                          "user_id": {
                            "type": "string",
                            "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                          },
                          "entitlements": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements~get~responses~200~schema"
                        }
                      },
                      "created": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Role", "Entitlement", "User", "New-Style"],
        "summary": "Create Entitlement Request for current User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Entitlement Request.</p><p>Any logged in User can use this endpoint to request an Entitlement</p><p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-addEntitlementRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateEntitlementJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["bank_id", "role_name"],
              "properties": {
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "role_name": { "type": "string", "example": "CanCreateBranch" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema~properties~entitlement_requests~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/entitlement-requests/{ENTITLEMENT_REQUEST_ID}": {
      "delete": {
        "tags": ["Role", "Entitlement", "User", "New-Style"],
        "summary": "Delete Entitlement Request",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete the Entitlement Request specified by ENTITLEMENT_REQUEST_ID for a user specified by USER_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-deleteEntitlementRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ENTITLEMENT_REQUEST_ID",
            "description": "the entitlement request id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/entitlements": {
      "get": {
        "tags": ["Role", "Entitlement", "New-Style"],
        "summary": "Get all Entitlements",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Login is required.</p><p>Possible filter on the role field:</p><p>eg: /entitlements?role=CanGetCustomer</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getAllEntitlements",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/jwks-uris": {
      "get": {
        "tags": ["API", "New-Style"],
        "summary": "Get JSON Web Key (JWK) URIs",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getOAuth2ServerJWKsURIs",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["jwks_uris"],
              "properties": {
                "jwks_uris": {
                  "type": "array",
                  "items": {
                    "required": ["jwks_uri"],
                    "properties": {
                      "jwks_uri": {
                        "type": "string",
                        "example": "https://www.googleapis.com/oauth2/v3/certs"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/aggregate-metrics": {
      "get": {
        "tags": ["Metric", "Aggregate-Metrics", "New-Style"],
        "summary": "Get Aggregate Metrics",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns aggregate metrics on api usage eg. total count, response time (in ms), etc.</p><p>Should be able to filter on the following fields</p><p>eg: /management/aggregate-metrics?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>1 from_date (defaults to the day before the current date): eg:from_date=2017-09-19T02:31:05.000Z</p><p>2 to_date (defaults to the current date) eg:to_date=2017-09-19T02:31:05.000Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 duration (if null ignore) non digit chars will be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getAggregateMetrics",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "count",
                "average_response_time",
                "minimum_response_time",
                "maximum_response_time"
              ],
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "example": "7076"
                },
                "average_response_time": {
                  "type": "number",
                  "format": "double",
                  "example": "65.21"
                },
                "minimum_response_time": {
                  "type": "number",
                  "format": "double",
                  "example": "1.0"
                },
                "maximum_response_time": {
                  "type": "number",
                  "format": "double",
                  "example": "9039.0"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/banks/{BANK_ID}/account-web-hooks": {
      "get": {
        "tags": ["Webhook", "Bank", "New-Style"],
        "summary": "Get Account Webhooks",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Account Webhooks.</p><p>Possible custom URL parameters for pagination:</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>account_id=STRING (if null ignore)</li><li>user_id=STRING (if null ignore)</li></ul><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getAccountWebhooks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["web_hooks"],
              "properties": {
                "web_hooks": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-web-hooks~post~responses~201~schema"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}": {
      "put": {
        "tags": ["Account", "New-Style"],
        "summary": "Update Account",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update the account.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "UpdateAccountRequestJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["label", "type", "branch_id", "account_routings"],
              "properties": {
                "label": { "type": "string", "example": "Label" },
                "type": { "type": "string", "example": "CURRENT" },
                "branch_id": { "type": "string", "example": "1234" },
                "account_routings": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "branch_id",
                "account_routings",
                "label",
                "bank_id",
                "account_id",
                "type"
              ],
              "properties": {
                "branch_id": { "type": "string", "example": "1234" },
                "account_routings": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                },
                "label": { "type": "string", "example": "Label" },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "account_id": {
                  "type": "string",
                  "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                },
                "type": { "type": "string", "example": "CURRENT" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/banks/{BANK_ID}/cards": {
      "get": {
        "tags": ["Card", "New-Style"],
        "summary": "Get Cards for the specified bank",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Should be able to filter on the following fields</p><p>eg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0</p><p>1 customer_id should be valid customer_id, otherwise, it will return an empty card list.</p><p>2 account_id should be valid account_id , otherwise, it will return an empty card list.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getCardsForBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["cards"],
              "properties": {
                "cards": {
                  "type": "array",
                  "items": {
                    "required": [
                      "allows",
                      "expires_date",
                      "networks",
                      "customer_id",
                      "issue_number",
                      "replacement",
                      "enabled",
                      "collected",
                      "card_number",
                      "technology",
                      "cancelled",
                      "bank_id",
                      "card_id",
                      "pin_reset",
                      "serial_number",
                      "account",
                      "valid_from_date",
                      "name_on_card",
                      "posted",
                      "card_type",
                      "on_hot_list"
                    ],
                    "properties": {
                      "allows": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "expires_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "networks": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "customer_id": {
                        "type": "string",
                        "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                      },
                      "issue_number": { "type": "string", "example": "1" },
                      "replacement": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~replacement",
                      "enabled": { "type": "boolean", "example": "true" },
                      "collected": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "card_number": {
                        "type": "string",
                        "example": "364435172576215"
                      },
                      "technology": {
                        "type": "string",
                        "example": "technologyString1"
                      },
                      "cancelled": { "type": "boolean", "example": "true" },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "card_id": {
                        "type": "string",
                        "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
                      },
                      "pin_reset": {
                        "type": "array",
                        "items": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~pin_reset~items"
                      },
                      "serial_number": {
                        "type": "string",
                        "example": "1324234"
                      },
                      "account": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~account",
                      "valid_from_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "name_on_card": {
                        "type": "string",
                        "example": "SusanSmith"
                      },
                      "posted": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "card_type": { "type": "string", "example": "Credit" },
                      "on_hot_list": { "type": "boolean", "example": "true" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Card", "New-Style"],
        "summary": "Create Card",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Card at bank specified by BANK_ID .</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-addCardForBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreatePhysicalCardJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "allows",
                "expires_date",
                "networks",
                "customer_id",
                "issue_number",
                "enabled",
                "card_number",
                "technology",
                "account_id",
                "pin_reset",
                "serial_number",
                "valid_from_date",
                "name_on_card",
                "card_type"
              ],
              "properties": {
                "allows": { "type": "array", "items": { "type": "string" } },
                "expires_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "networks": { "type": "array", "items": { "type": "string" } },
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "issue_number": { "type": "string", "example": "1" },
                "replacement": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~replacement",
                "enabled": { "type": "boolean", "example": "true" },
                "collected": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "card_number": {
                  "type": "string",
                  "example": "364435172576215"
                },
                "technology": { "type": "string", "example": "technology1" },
                "account_id": {
                  "type": "string",
                  "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                },
                "pin_reset": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~pin_reset~items"
                },
                "serial_number": { "type": "string", "example": "1324234" },
                "valid_from_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "name_on_card": { "type": "string", "example": "SusanSmith" },
                "posted": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "card_type": { "type": "string", "example": "Credit" }
              }
            }
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards~get~responses~200~schema~properties~cards~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}": {
      "delete": {
        "tags": ["Card", "New-Style"],
        "summary": "Delete Card",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete a Card at bank specified by CARD_ID .</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteCardForBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CARD_ID",
            "description": "the card id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["Card", "New-Style"],
        "summary": "Get Card By Id",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>This will the datails of the card.<br />It shows the account infomation which linked the the card.<br />Also shows the card attributes of the card.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getCardForBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CARD_ID",
            "description": "the card id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "allows",
                "expires_date",
                "networks",
                "customer_id",
                "issue_number",
                "replacement",
                "enabled",
                "collected",
                "card_number",
                "technology",
                "cancelled",
                "bank_id",
                "card_id",
                "pin_reset",
                "serial_number",
                "account",
                "valid_from_date",
                "card_attributes",
                "name_on_card",
                "posted",
                "card_type",
                "on_hot_list"
              ],
              "properties": {
                "allows": { "type": "array", "items": { "type": "string" } },
                "expires_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "networks": { "type": "array", "items": { "type": "string" } },
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "issue_number": { "type": "string", "example": "1" },
                "replacement": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~replacement",
                "enabled": { "type": "boolean", "example": "true" },
                "collected": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "card_number": {
                  "type": "string",
                  "example": "364435172576215"
                },
                "technology": {
                  "type": "string",
                  "example": "technologyString1"
                },
                "cancelled": { "type": "boolean", "example": "true" },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "card_id": {
                  "type": "string",
                  "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
                },
                "pin_reset": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~pin_reset~items"
                },
                "serial_number": { "type": "string", "example": "1324234" },
                "account": {
                  "required": ["id", "label", "views_available", "bank_id"],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                    },
                    "label": { "type": "string", "example": "My Account" },
                    "views_available": {
                      "type": "array",
                      "items": {
                        "required": ["id", "name", "description"],
                        "properties": {
                          "id": { "type": "string", "example": "owner" },
                          "name": { "type": "string", "example": "Owner" },
                          "description": {
                            "type": "string",
                            "example": "This view is for the owner for the account."
                          }
                        }
                      }
                    },
                    "bank_id": { "type": "string", "example": "gh.29.uk" }
                  }
                },
                "valid_from_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "card_attributes": {
                  "type": "array",
                  "items": {
                    "required": ["name", "attribute_type", "value"],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "OVERDRAFT_START_DATE"
                      },
                      "card_id": {
                        "type": "string",
                        "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
                      },
                      "attribute_type": {
                        "type": "string",
                        "enum": ["STRING", "INTEGER", "DOUBLE", "DATE_WITH_DAY"]
                      },
                      "bank_id": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-types~put~responses~200~schema~properties~bankId",
                      "value": { "type": "string", "example": "2012-04-23" },
                      "card_attribute_id": {
                        "type": "string",
                        "example": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
                      }
                    }
                  }
                },
                "name_on_card": { "type": "string", "example": "SusanSmith" },
                "posted": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "card_type": { "type": "string", "example": "Credit" },
                "on_hot_list": { "type": "boolean", "example": "true" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Card", "New-Style"],
        "summary": "Update Card",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update Card at bank specified by CARD_ID .<br />Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updatedCardForBank",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "UpdatePhysicalCardJsonV310 object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "allows",
                "expires_date",
                "networks",
                "customer_id",
                "issue_number",
                "replacement",
                "enabled",
                "collected",
                "technology",
                "account_id",
                "pin_reset",
                "serial_number",
                "valid_from_date",
                "name_on_card",
                "posted",
                "card_type"
              ],
              "properties": {
                "allows": { "type": "array", "items": { "type": "string" } },
                "expires_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "networks": { "type": "array", "items": { "type": "string" } },
                "customer_id": {
                  "type": "string",
                  "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                },
                "issue_number": { "type": "string", "example": "1" },
                "replacement": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~replacement",
                "enabled": { "type": "boolean", "example": "true" },
                "collected": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "technology": { "type": "string", "example": "technology1" },
                "account_id": {
                  "type": "string",
                  "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                },
                "pin_reset": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~pin_reset~items"
                },
                "serial_number": { "type": "string", "example": "1324234" },
                "valid_from_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "name_on_card": { "type": "string", "example": "SusanSmith" },
                "posted": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "card_type": { "type": "string", "example": "Credit" }
              }
            }
          },
          {
            "in": "path",
            "name": "CARD_ID",
            "description": "the card id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards~get~responses~200~schema~properties~cards~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attribute": {
      "post": {
        "tags": ["Card", "New-Style"],
        "summary": "Create Card Attribute",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createCardAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CardAttributeJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["name", "type", "value"],
              "properties": {
                "name": { "type": "string", "example": "OVERDRAFT_START_DATE" },
                "type": { "type": "string", "example": "DOUBLE" },
                "value": { "type": "string", "example": "2012-04-23" }
              }
            }
          },
          {
            "in": "path",
            "name": "CARD_ID",
            "description": "the card id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}~get~responses~200~schema~properties~card_attributes~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attributes/{CARD_ATTRIBUTE_ID}": {
      "put": {
        "tags": ["Card", "New-Style"],
        "summary": "Update Card Attribute",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-updateCardAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CardAttributeJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attribute~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CARD_ATTRIBUTE_ID",
            "description": "the card attribute id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "CARD_ID",
            "description": "the card id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}~get~responses~200~schema~properties~card_attributes~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/connector/metrics": {
      "get": {
        "tags": ["Metric", "API", "New-Style"],
        "summary": "Get Connector Metrics",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=2017-09-19T02:31:05.000Z</p><p>2 to_date (defaults to current date) eg:to_date=2017-09-19T02:31:05.000Z</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.2.0-getConnectorMetrics",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["metrics"],
              "properties": {
                "metrics": {
                  "type": "array",
                  "items": {
                    "required": [
                      "connector_name",
                      "duration",
                      "function_name",
                      "correlation_id",
                      "date"
                    ],
                    "properties": {
                      "connector_name": {
                        "type": "string",
                        "example": "mapper"
                      },
                      "duration": {
                        "type": "integer",
                        "format": "int64",
                        "example": "1000"
                      },
                      "function_name": {
                        "type": "string",
                        "example": "getBanks"
                      },
                      "correlation_id": {
                        "type": "string",
                        "example": "12345"
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-10005: Invalid Date Format. Could not convert value to a Date."
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/management/consumers": {
      "get": {
        "tags": ["Consumer", "New-Style"],
        "summary": "Get Consumers",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the all Consumers.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getConsumers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["consumers"],
              "properties": {
                "consumers": {
                  "type": "array",
                  "items": {
                    "required": [
                      "app_type",
                      "description",
                      "created_by_user",
                      "enabled",
                      "redirect_url",
                      "developer_email",
                      "consumer_id",
                      "app_name",
                      "created"
                    ],
                    "properties": {
                      "app_type": { "type": "string", "example": "Web" },
                      "description": {
                        "type": "string",
                        "example": "Account Management"
                      },
                      "created_by_user": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~user",
                      "enabled": { "type": "boolean", "example": "true" },
                      "redirect_url": {
                        "type": "string",
                        "example": "www.openbankproject.com"
                      },
                      "developer_email": {
                        "type": "string",
                        "example": "felixsmith@example.com"
                      },
                      "consumer_id": {
                        "type": "string",
                        "example": "8e716299-4668-4efd-976a-67f57a9984ec"
                      },
                      "app_name": { "type": "string", "example": "SOFI" },
                      "created": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/consumers/{CONSUMER_ID}": {
      "get": {
        "tags": ["Consumer", "New-Style"],
        "summary": "Get Consumer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the Consumer specified by CONSUMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getConsumer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CONSUMER_ID",
            "description": "new consumer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "created_by_user_id",
                "app_type",
                "description",
                "created_by_user",
                "enabled",
                "redirect_url",
                "developer_email",
                "consumer_id",
                "app_name",
                "created"
              ],
              "properties": {
                "created_by_user_id": {
                  "type": "string",
                  "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                },
                "app_type": { "type": "string", "example": "Web" },
                "description": {
                  "type": "string",
                  "example": "Account Management"
                },
                "created_by_user": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~user",
                "enabled": { "type": "boolean", "example": "true" },
                "redirect_url": {
                  "type": "string",
                  "example": "www.openbankproject.com"
                },
                "developer_email": {
                  "type": "string",
                  "example": "felixsmith@example.com"
                },
                "consumer_id": {
                  "type": "integer",
                  "format": "int64",
                  "example": "1213"
                },
                "app_name": { "type": "string", "example": "SOFI" },
                "created": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Consumer", "New-Style"],
        "summary": "Enable or Disable Consumers",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Enable/Disable a Consumer specified by CONSUMER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-enableDisableConsumers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PutEnabledJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["enabled"],
              "properties": {
                "enabled": { "type": "boolean", "example": "false" }
              }
            }
          },
          {
            "in": "path",
            "name": "CONSUMER_ID",
            "description": "new consumer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}~put~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits": {
      "get": {
        "tags": ["Consumer", "New-Style"],
        "summary": "Get Call Limits for a Consumer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Calls limits per Consumer.<br />Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getCallsLimit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "CONSUMER_ID",
            "description": "new consumer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "per_month_call_limit",
                "per_week_call_limit",
                "per_hour_call_limit",
                "per_second_call_limit",
                "per_minute_call_limit",
                "per_day_call_limit"
              ],
              "properties": {
                "current_state": {
                  "properties": {
                    "per_week": {
                      "properties": {
                        "calls_made": {
                          "type": "integer",
                          "format": "int64",
                          "example": "-1"
                        },
                        "reset_in_seconds": {
                          "type": "integer",
                          "format": "int64",
                          "example": "-1"
                        }
                      }
                    },
                    "per_second": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~get~responses~200~schema~properties~current_state~properties~per_week",
                    "per_month": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~get~responses~200~schema~properties~current_state~properties~per_week",
                    "per_day": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~get~responses~200~schema~properties~current_state~properties~per_week",
                    "per_minute": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~get~responses~200~schema~properties~current_state~properties~per_week",
                    "per_hour": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~get~responses~200~schema~properties~current_state~properties~per_week"
                  }
                },
                "per_month_call_limit": { "type": "string", "example": "-1" },
                "per_week_call_limit": { "type": "string", "example": "-1" },
                "per_hour_call_limit": { "type": "string", "example": "-1" },
                "per_second_call_limit": { "type": "string", "example": "-1" },
                "per_minute_call_limit": { "type": "string", "example": "-1" },
                "per_day_call_limit": { "type": "string", "example": "-1" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Consumer", "New-Style"],
        "summary": "Set Calls Limit for a Consumer",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Set the API call limits for a Consumer:</p><p>Per Second<br />Per Minute<br />Per Hour<br />Per Week<br />Per Month</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-callsLimit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CallLimitPostJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "per_month_call_limit",
                "per_week_call_limit",
                "per_hour_call_limit",
                "per_second_call_limit",
                "from_date",
                "per_minute_call_limit",
                "per_day_call_limit",
                "to_date"
              ],
              "properties": {
                "per_month_call_limit": { "type": "string", "example": "-1" },
                "per_week_call_limit": { "type": "string", "example": "-1" },
                "per_hour_call_limit": { "type": "string", "example": "-1" },
                "per_second_call_limit": { "type": "string", "example": "-1" },
                "from_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "per_minute_call_limit": { "type": "string", "example": "-1" },
                "per_day_call_limit": { "type": "string", "example": "-1" },
                "to_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "CONSUMER_ID",
            "description": "new consumer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~put~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/redirect_url": {
      "put": {
        "tags": ["Consumer"],
        "summary": "Update Consumer RedirectUrl",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-updateConsumerRedirectUrl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ConsumerRedirectUrlJSON object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["redirect_url"],
              "properties": {
                "redirect_url": {
                  "type": "string",
                  "example": "http://localhost:8888"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "CONSUMER_ID",
            "description": "new consumer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/historical/transactions ": {
      "post": {
        "tags": ["Transaction-Request", "New-Style"],
        "summary": "Save Historical Transactions ",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Import the historical transactions.</p><p>The fields bank_id, account_id, counterparty_id in the json body are all optional ones.<br />It support transfer money from account to account, account to counterparty and counterparty to counterparty<br />Both bank_id + account_id and counterparty_id can identify the account, so OBP only need one of them to make the payment.<br />So:<br />When you need the account to account, just omit counterparty_id field.eg:<br />{<br />&quot;from&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;: &quot;1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />},<br />&quot;to&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;: &quot;2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;: &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br />}</p><p>When you need the counterparty to counterparty, need to omit bank_id and account_id field.eg:<br />{<br />&quot;from&quot;: {<br />&quot;counterparty_id&quot;: &quot;f6392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />},<br />&quot;to&quot;: {<br />&quot;counterparty_id&quot;: &quot;26392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;: &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br />}</p><p>or, you can counterparty to account<br />{<br />&quot;from&quot;: {<br />&quot;counterparty_id&quot;: &quot;f6392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />},<br />&quot;to&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;: &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br />}</p><p>This call is experimental.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-saveHistoricalTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostHistoricalTransactionJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "description",
                "to",
                "completed",
                "charge_policy",
                "from",
                "type",
                "value",
                "posted"
              ],
              "properties": {
                "description": {
                  "type": "string",
                  "example": "this is for work"
                },
                "to": {
                  "properties": {
                    "bank_id": { "type": "string", "example": "gh.29.uk" },
                    "account_id": {
                      "type": "string",
                      "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                    },
                    "counterparty_id": {
                      "type": "string",
                      "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                    }
                  }
                },
                "completed": {
                  "type": "string",
                  "example": "2017-09-19T02:31:05Z"
                },
                "charge_policy": { "type": "string", "example": "SHARED" },
                "from": "~paths~/obp/v3.1.0/management/historical/transactions ~post~parameters~0~schema~properties~to",
                "type": { "type": "string", "example": "SANDBOX_TAN" },
                "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "posted": {
                  "type": "string",
                  "example": "2017-09-19T02:31:05Z"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": [
                "description",
                "to",
                "transaction_id",
                "transaction_request_type",
                "completed",
                "charge_policy",
                "from",
                "value",
                "posted"
              ],
              "properties": {
                "description": {
                  "type": "string",
                  "example": "this is for work"
                },
                "to": "~paths~/obp/v3.1.0/management/historical/transactions ~post~parameters~0~schema~properties~to",
                "transaction_id": {
                  "type": "string",
                  "example": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
                },
                "transaction_request_type": {
                  "type": "string",
                  "example": "SANDBOX_TAN"
                },
                "completed": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                },
                "charge_policy": { "type": "string", "example": "SHARED" },
                "from": "~paths~/obp/v3.1.0/management/historical/transactions ~post~parameters~0~schema~properties~to",
                "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "posted": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/method_routings": {
      "get": {
        "tags": ["Method-Routing", "API", "New-Style"],
        "summary": "Get MethodRoutings",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name: filter with method_name</li><li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li></ul><p>eg:<br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\">https://api3.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://api3.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getMethodRoutings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "required": ["method_routings"],
              "properties": {
                "method_routings": {
                  "type": "array",
                  "items": {
                    "required": [
                      "is_bank_id_exact_match",
                      "method_name",
                      "connector_name",
                      "parameters"
                    ],
                    "properties": {
                      "is_bank_id_exact_match": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "method_name": { "type": "string", "example": "getBank" },
                      "connector_name": {
                        "type": "string",
                        "example": "rest_vMar2019"
                      },
                      "method_routing_id": { "type": "string", "example": "" },
                      "bank_id_pattern": {
                        "type": "string",
                        "example": "some_bankId"
                      },
                      "parameters": {
                        "type": "array",
                        "items": {
                          "required": ["key", "value"],
                          "properties": {
                            "key": { "type": "string", "example": "url" },
                            "value": {
                              "type": "string",
                              "example": "http://mydomain.com/xxx"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Method-Routing", "API", "New-Style"],
        "summary": "Create MethodRouting",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explanation of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some parameters for this method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li><li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li><li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>",
        "operationId": "OBPv3.1.0-createMethodRouting",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "MethodRoutingCommons object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/management/method_routings~get~responses~200~schema~properties~method_routings~items"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/method_routings~get~responses~200~schema~properties~method_routings~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/method_routings/{METHOD_ROUTING_ID}": {
      "delete": {
        "tags": ["Method-Routing", "API", "New-Style"],
        "summary": "Delete MethodRouting",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteMethodRouting",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "METHOD_ROUTING_ID",
            "description": "the method routing id ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["Method-Routing", "API", "New-Style"],
        "summary": "Update MethodRouting",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explaination of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />note:</li><li><p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p></li></ul><p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>",
        "operationId": "OBPv3.1.0-updateMethodRouting",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "MethodRoutingCommons object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/management/method_routings~get~responses~200~schema~properties~method_routings~items"
          },
          {
            "in": "path",
            "name": "METHOD_ROUTING_ID",
            "description": "the method routing id ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/method_routings~get~responses~200~schema~properties~method_routings~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/metrics": {
      "get": {
        "tags": ["Metric", "API", "New-Style"],
        "summary": "Get Metrics",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the all metrics</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=2017-09-19T02:31:05.000Z</p><p>2 to_date (defaults to current date) eg:to_date=2017-09-19T02:31:05.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:<a href=\"&#x6d;&#x61;&#x69;&#108;&#116;o:&#x30;&#x35;&#x2e;&#x30;00&#x5a;&#38;&#x6c;&#105;&#109;&#x69;&#x74;&#61;&#49;&#48;&#x30;&#48;&#x30;&#38;&#x6f;&#102;&#x66;&#115;&#x65;&#116;=&#48;&#38;&#97;n&#x6f;&#x6e;&#x3d;&#102;a&#x6c;&#x73;&#x65;&#38;&#97;p&#112;&#95;&#x6e;&#97;&#x6d;&#101;&#x3d;&#x54;&#x65;&#97;&#x74;&#65;&#x70;&#112;&#38;&#105;&#x6d;&#112;&#108;&#x65;&#x6d;e&#110;t&#101;&#x64;&#95;&#x69;&#x6e;&#95;v&#x65;&#x72;&#115;&#105;o&#x6e;&#61;&#x76;&#50;&#x2e;&#49;&#x2e;&#48;&#38;v&#x65;&#x72;&#98;=&#80;&#x4f;&#83;&#84;&#38;&#117;&#115;&#101;&#114;&#x5f;&#x69;&#100;&#x3d;&#99;7b6&#x63;&#98;&#52;7&#45;c&#98;&#x39;&#x36;-4&#52;&#52;&#49;-&#56;8&#48;&#x31;&#45;&#x33;&#x35;&#x62;&#x35;&#55;&#x34;&#53;&#54;7&#x35;&#51;&#x61;&#38;&#x75;s&#x65;r&#x5f;&#x6e;&#x61;m&#x65;&#x3d;&#115;&#x75;sa&#110;&#46;u&#x6b;&#46;&#x32;&#x39;&#64;&#x65;&#x78;&#97;&#x6d;&#112;le&#x2e;&#99;o&#109;\">&#x30;&#x35;.0&#48;&#x30;&#x5a;&#x26;l&#x69;m&#105;&#x74;&#61;1&#x30;&#48;0&#48;&#x26;&#x6f;&#102;fs&#101;&#x74;=&#48;&#x26;a&#110;o&#x6e;&#61;&#102;a&#x6c;&#115;&#101;&#38;&#x61;&#112;&#x70;_&#110;a&#109;&#x65;=&#x54;e&#x61;&#116;&#65;p&#112;&amp;i&#x6d;&#x70;&#108;&#x65;&#x6d;e&#110;&#x74;&#x65;d&#x5f;&#105;&#x6e;&#x5f;&#118;e&#114;&#115;io&#x6e;&#x3d;&#x76;&#50;.&#x31;&#46;&#x30;&#x26;&#x76;&#x65;&#x72;b&#x3d;&#x50;&#79;&#x53;&#x54;&#38;&#x75;&#x73;&#101;&#x72;_&#105;&#100;&#61;&#99;7&#x62;6&#x63;b&#x34;&#55;&#x2d;&#99;&#98;&#57;&#x36;&#x2d;&#52;&#52;&#52;&#x31;&#45;8&#56;0&#49;&#x2d;&#51;&#53;&#98;&#53;&#55;&#x34;&#x35;&#x36;&#x37;&#x35;&#51;&#x61;&#x26;&#x75;s&#x65;&#114;_&#x6e;&#x61;&#109;&#101;&#x3d;&#x73;u&#x73;&#x61;n&#46;&#117;&#x6b;&#46;&#x32;&#x39;&#64;&#x65;&#x78;&#x61;&#109;&#x70;&#x6c;&#101;&#46;co&#x6d;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-getMetrics",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["metrics"],
              "properties": {
                "metrics": {
                  "type": "array",
                  "items": {
                    "required": [
                      "duration",
                      "implemented_in_version",
                      "url",
                      "correlation_id",
                      "implemented_by_partial_function",
                      "user_id",
                      "developer_email",
                      "date",
                      "consumer_id",
                      "verb",
                      "app_name",
                      "user_name"
                    ],
                    "properties": {
                      "duration": {
                        "type": "integer",
                        "format": "int64",
                        "example": "39"
                      },
                      "implemented_in_version": {
                        "type": "string",
                        "example": "v210"
                      },
                      "url": {
                        "type": "string",
                        "example": "www.openbankproject.com"
                      },
                      "correlation_id": {
                        "type": "string",
                        "example": "v8ho6h5ivel3uq7a5zcnv0w1"
                      },
                      "implemented_by_partial_function": {
                        "type": "string",
                        "example": "getBanks"
                      },
                      "user_id": {
                        "type": "string",
                        "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                      },
                      "developer_email": {
                        "type": "string",
                        "example": "felixsmith@example.com"
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "consumer_id": { "type": "string", "example": "123" },
                      "verb": { "type": "string", "example": "get" },
                      "app_name": { "type": "string", "example": "SOFI" },
                      "user_name": { "type": "string", "example": "OBP" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/metrics/top-apis": {
      "get": {
        "tags": ["Metric", "New-Style"],
        "summary": "Get Top APIs",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get metrics about the most popular APIs. e.g.: total count, response time (in ms), etc.</p><p>Should be able to filter on the following fields</p><p>eg: /management/metrics/top-apis?from_date=2020-08-03T06:25:43.107Z&amp;to_date=2021-08-03T06:25:43.107Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>1 from_date (defaults to the one year ago): eg:from_date=2020-08-03T06:25:43.107Z</p><p>2 to_date (defaults to the current date) eg:to_date=2021-08-03T06:25:43.107Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 duration (if null ignore) non digit chars will be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getTopAPIs",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["top_apis"],
              "properties": {
                "top_apis": {
                  "type": "array",
                  "items": {
                    "required": [
                      "count",
                      "Implemented_by_partial_function",
                      "implemented_in_version"
                    ],
                    "properties": {
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "example": "7076"
                      },
                      "Implemented_by_partial_function": {
                        "type": "string",
                        "example": "getBanks"
                      },
                      "implemented_in_version": {
                        "type": "string",
                        "example": "v1.2.1"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/metrics/top-consumers": {
      "get": {
        "tags": ["Metric", "New-Style"],
        "summary": "Get Top Consumers",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get metrics about the top consumers of the API usage e.g. total count, consumer_id and app_name.</p><p>Should be able to filter on the following fields</p><p>e.g.: /management/metrics/top-consumers?from_date=2020-08-03T06:25:43.108Z&amp;to_date=2021-08-03T06:25:43.109Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null<br />&amp;limit=100</p><p>1 from_date (defaults to the one year ago): eg:from_date=2020-08-03T06:25:43.109Z</p><p>2 to_date (defaults to the current date) eg:to_date=2021-08-03T06:25:43.109Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 duration (if null ignore) non digit chars will be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>16 limit (for pagination: defaults to 50)  eg:limit=200</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getMetricsTopConsumers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["top_consumers"],
              "properties": {
                "top_consumers": {
                  "type": "array",
                  "items": {
                    "required": [
                      "count",
                      "consumer_id",
                      "app_name",
                      "developer_email"
                    ],
                    "properties": {
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "example": "7076"
                      },
                      "consumer_id": {
                        "type": "string",
                        "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                      },
                      "app_name": {
                        "type": "string",
                        "example": "Api Explorer"
                      },
                      "developer_email": {
                        "type": "string",
                        "example": "felixsmith@example.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/users/current/consumers": {
      "get": {
        "tags": ["Consumer", "New-Style"],
        "summary": "Get Consumers (logged in User)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the Consumers for logged in User.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getConsumersForCurrentUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/consumers~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/webui_props": {
      "get": {
        "tags": ["WebUi-Props", "New-Style"],
        "summary": "Get WebUiProps",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the all WebUiProps key values, those props key with &quot;webui_&quot; can be stored in DB, this endpoint get all from DB.</p><p>url query parameter:<br />active: It must be a boolean string. and If active = true, it will show<br />combination of explicit (inserted) + implicit (default)  method_routings.</p><p>eg:<br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/management/webui_props\">https://api3.openbankproject.com/obp/v3.1.0/management/webui_props</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/management/webui_props?active=true\">https://api3.openbankproject.com/obp/v3.1.0/management/webui_props?active=true</a></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getWebUiProps",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "required": ["webui_props"],
              "properties": {
                "webui_props": {
                  "type": "array",
                  "items": {
                    "required": ["name", "value"],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "webui_api_explorer_url"
                      },
                      "value": {
                        "type": "string",
                        "example": "https://apiexplorer.openbankproject.com"
                      },
                      "web_ui_props_id": { "type": "string", "example": "" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["WebUi-Props", "New-Style"],
        "summary": "Create WebUiProps",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create a WebUiProps.</p><p>Authentication is Mandatory</p><p>Explaination of Fields:</p><ul><li>name is required String value</li><li>value is required String value</li></ul><p>The line break and double quotations should do escape, example:</p><pre><code>{&quot;name&quot;: &quot;webui_some&quot;, &quot;value&quot;: &quot;this valuehave &quot;line break&quot; and double quotations.&quot;}</code></pre><p>should do escape like this:</p><pre><code>{&quot;name&quot;: &quot;webui_some&quot;, &quot;value&quot;: &quot;this value\\nhave \\&quot;line break\\&quot; and double quotations.&quot;}</code></pre><p>Insert image examples:</p><pre><code>// set width=100 and height=50{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;100&quot; height=&quot;50&quot; /&gt;&quot;}// only set height=50{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;&quot; height=&quot;50&quot; /&gt;&quot;}// only width=20%{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;20%&quot; height=&quot;&quot; /&gt;&quot;}</code></pre>",
        "operationId": "OBPv3.1.0-createWebUiProps",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "WebUiPropsCommons object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/management/webui_props~get~responses~200~schema~properties~webui_props~items"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/management/webui_props~get~responses~200~schema~properties~webui_props~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/management/webui_props/{WEB_UI_PROPS_ID}": {
      "delete": {
        "tags": ["WebUi-Props", "New-Style"],
        "summary": "Delete WebUiProps",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete a WebUiProps specified by WEB_UI_PROPS_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteWebUiProps",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "WEB_UI_PROPS_ID",
            "description": "the web ui props id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/message-docs/CONNECTOR": {
      "get": {
        "tags": ["Documentation", "API", "New-Style"],
        "summary": "Get Message Docs",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>These message docs provide example messages sent by OBP to the (Kafka) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>:kafka_vMar2017 , kafka_vJune2017, kafka_vSept2018, stored_procedure_vDec2019 ...</p><p>Authentication is Optional</p>",
        "operationId": "OBPv2.2.0-getMessageDocs",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["message_docs"],
              "properties": {
                "message_docs": {
                  "type": "array",
                  "items": {
                    "required": [
                      "adapter_implementation",
                      "example_inbound_message",
                      "description",
                      "process",
                      "message_format",
                      "example_outbound_message",
                      "dependent_endpoints"
                    ],
                    "properties": {
                      "adapter_implementation": {
                        "required": ["group", "suggested_order"],
                        "properties": {
                          "group": { "type": "string", "example": "CORE" },
                          "suggested_order": {
                            "type": "integer",
                            "format": "int32",
                            "example": "3"
                          }
                        }
                      },
                      "outboundAvroSchema": {
                        "type": "object",
                        "properties": {
                          "jsonString": { "type": "string", "example": "{}" }
                        },
                        "required": ["jsonString"]
                      },
                      "example_inbound_message": {
                        "type": "object",
                        "properties": {
                          "jsonString": { "type": "string", "example": "{}" }
                        },
                        "required": ["jsonString"]
                      },
                      "inboundAvroSchema": {
                        "type": "object",
                        "properties": {
                          "jsonString": { "type": "string", "example": "{}" }
                        },
                        "required": ["jsonString"]
                      },
                      "requiredFieldInfo": { "properties": {} },
                      "description": {
                        "type": "string",
                        "example": "get Banks"
                      },
                      "process": { "type": "string", "example": "getAccounts" },
                      "message_format": {
                        "type": "string",
                        "example": "KafkaV2017"
                      },
                      "example_outbound_message": {
                        "type": "object",
                        "properties": {
                          "jsonString": { "type": "string", "example": "{}" }
                        },
                        "required": ["jsonString"]
                      },
                      "dependent_endpoints": {
                        "type": "array",
                        "items": {
                          "required": ["name", "version"],
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "getAccounts"
                            },
                            "version": {
                              "type": "string",
                              "example": "OBPv3.0.0"
                            }
                          }
                        }
                      },
                      "outbound_topic": {
                        "type": "string",
                        "example": "to.obp.api.1.caseclass.OutboundGetAccounts"
                      },
                      "inbound_topic": {
                        "type": "string",
                        "example": "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/message-docs/CONNECTOR/swagger2.0": {
      "get": {
        "tags": ["Documentation", "API", "New-Style"],
        "summary": "Get Message Docs Swagger",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>This endpoint provides example message docs in swagger format.<br />It is only relavent for REST Connectors.</p><p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.1.0-getMessageDocsSwagger",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/message-docs/CONNECTOR~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/my/accounts": {
      "get": {
        "tags": [
          "Account",
          "Account Information Service (AIS)",
          "PrivateData",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Accounts at all Banks (private)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns the list of accounts containing private views for the user.<br />Each account lists the views available to the user.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/my/accounts?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-corePrivateAccountsAllBanks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/private~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account": {
      "get": {
        "tags": [
          "Account",
          "Account Information Service (AIS)",
          "New-Style",
          "PSD2"
        ],
        "summary": "Get Account by Id (Core)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Information returned about the account specified by ACCOUNT_ID:</p><ul><li>Number - The human readable account number given by the bank that identifies the account.</li><li>Label - A label given by the owner of the account</li><li>Owners - Users that own this account</li><li>Type - The type of account</li><li>Balance - Currency and Value</li><li>Account Routings - A list that might include IBAN or national account identifiers</li><li>Account Rules - A list that might include Overdraft and other bank specific rules</li></ul><p>This call returns the owner view and requires access to that view.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getCoreAccountById",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "number",
                "account_routings",
                "label",
                "owners",
                "balance",
                "views_basic",
                "bank_id",
                "id",
                "type"
              ],
              "properties": {
                "number": { "type": "string", "example": "546387432" },
                "account_routings": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                },
                "label": { "type": "string", "example": "My Account" },
                "owners": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~owners~items"
                },
                "balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                "views_basic": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/private~get~responses~200~schema~properties~accounts~items~properties~views~items"
                },
                "bank_id": { "type": "string", "example": "gh.29.uk" },
                "id": {
                  "type": "string",
                  "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
                },
                "type": { "type": "string", "example": "AC" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions": {
      "get": {
        "tags": [
          "Transaction",
          "Account Information Service (AIS)",
          "Account",
          "PSD2",
          "New-Style"
        ],
        "summary": "Get Transactions for Account (Core)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns transactions list (Core info) of the account specified by ACCOUNT_ID.</p><p>Authentication is Mandatory</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 2020-08-03T06:25:43.086Z. NOTE! The default value is one year ago (2020-08-03T06:25:43.086Z).</li><li>to_date=DATE =&gt; example value: 2021-08-03T06:25:43.086Z. NOTE! The default value is now (2021-08-03T06:25:43.086Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(2017-09-19T02:31:05.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z</p>",
        "operationId": "OBPv3.0.0-getCoreTransactionsForBankAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["transactions"],
              "properties": {
                "transactions": {
                  "type": "array",
                  "items": {
                    "required": [
                      "this_account",
                      "id",
                      "details",
                      "other_account",
                      "transaction_attributes"
                    ],
                    "properties": {
                      "this_account": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~this_account",
                      "id": {
                        "type": "string",
                        "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                      },
                      "details": {
                        "required": [
                          "new_balance",
                          "description",
                          "completed",
                          "type",
                          "value",
                          "posted"
                        ],
                        "properties": {
                          "new_balance": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                          "description": { "type": "string", "example": "OBP" },
                          "completed": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-09-19T00:00:00Z"
                          },
                          "type": { "type": "string", "example": "AC" },
                          "value": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                          "posted": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-09-19T00:00:00Z"
                          }
                        }
                      },
                      "other_account": {
                        "required": [
                          "id",
                          "holder",
                          "bank_routing",
                          "account_routings"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
                          },
                          "holder": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~holder",
                          "bank_routing": "~paths~/obp/v3.1.0/banks~get~responses~200~schema~properties~banks~items~properties~bank_routing",
                          "account_routings": {
                            "type": "array",
                            "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items"
                          }
                        }
                      },
                      "transaction_attributes": {
                        "type": "array",
                        "items": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~transaction_attributes~items"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/my/entitlement-requests": {
      "get": {
        "tags": ["Role", "Entitlement", "User", "New-Style"],
        "summary": "Get Entitlement Requests for the current User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Entitlement Requests for the current User.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getEntitlementRequestsForCurrentUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/my/entitlements": {
      "get": {
        "tags": ["Role", "Entitlement", "User", "New-Style"],
        "summary": "Get Entitlements for the current User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Entitlements for the current User.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getEntitlementsForCurrentUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/rate-limiting": {
      "get": {
        "tags": ["API", "New-Style"],
        "summary": "Get Rate Limiting Info",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getRateLimitingInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "enabled",
                "technology",
                "service_available",
                "is_active"
              ],
              "properties": {
                "enabled": { "type": "boolean", "example": "true" },
                "technology": { "type": "string", "example": "REDIS" },
                "service_available": { "type": "boolean", "example": "true" },
                "is_active": { "type": "boolean", "example": "true" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/resource-docs/{API_VERSION}/obp": {
      "get": {
        "tags": ["Documentation", "API"],
        "summary": "Get Resource Docs.",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en and zh , e.g. ?language=zh</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Following are more examples:<br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/obp\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/obp</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/obp?tags=Account,Bank\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/obp?tags=Account,Bank</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/obp?functions=getBanks,bankById\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v4.0.0/obp?language=zh\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v4.0.0/obp?language=zh</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>Authentication is Optional</p>",
        "operationId": "OBPv1.4.0-getResourceDocsObp",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "API_VERSION",
            "description": "eg:v2.2.0, v3.0.0",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/resource-docs/{API_VERSION}/swagger": {
      "get": {
        "tags": ["Documentation", "API"],
        "summary": "Get Swagger documentation",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p><p>See the Resource Doc endpoint for more information.</p><p>Following are more examples:<br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br /><a href=\"https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://api3.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>Authentication is Optional</p>",
        "operationId": "OBPv1.4.0-getResourceDocsSwagger",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "API_VERSION",
            "description": "eg:v2.2.0, v3.0.0",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/roles": {
      "get": {
        "tags": ["Role", "New-Style"],
        "summary": "Get Roles",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns all available roles</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-getRoles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["roles"],
              "properties": {
                "roles": {
                  "type": "array",
                  "items": {
                    "required": ["role", "requires_bank_id"],
                    "properties": {
                      "role": {
                        "type": "string",
                        "example": "CanCreateBranch"
                      },
                      "requires_bank_id": {
                        "type": "boolean",
                        "example": "true"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/root": {
      "get": {
        "tags": ["API"],
        "summary": "Get API Info (root)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Git Commit</li></ul><p>Authentication is Optional</p>",
        "operationId": "OBPv1.2.1-root",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "version_status",
                "version",
                "connector",
                "hosted_by",
                "git_commit"
              ],
              "properties": {
                "version_status": { "type": "string", "example": "String" },
                "version": { "type": "string", "example": "String" },
                "connector": { "type": "string", "example": "String" },
                "hosted_by": {
                  "required": [
                    "organisation",
                    "email",
                    "phone",
                    "organisation_website"
                  ],
                  "properties": {
                    "organisation": { "type": "string", "example": "String" },
                    "email": { "type": "string", "example": "String" },
                    "phone": { "type": "string", "example": "String" },
                    "organisation_website": {
                      "type": "string",
                      "example": "String"
                    }
                  }
                },
                "git_commit": { "type": "string", "example": "String" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/sandbox/data-import": {
      "post": {
        "tags": ["Sandbox"],
        "summary": "Create sandbox",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Import bulk data into the sandbox (Authenticated access).</p><p>This call can be used to create banks, users, accounts and transactions which are stored in the local RDBMS.</p><p>The user needs to have CanCreateSandbox entitlement.</p><p>Note: This is a monolithic call. You could also use a combination of endpoints including create bank, create user, create account and create transaction request to create similar data.</p><p>An example of an import set of data (json) can be found <a href=\"https://raw.githubusercontent.com/OpenBankProject/OBP-API/develop/obp-api/src/main/scala/code/api/sandbox/example_data/2016-04-28/example_import.json\">here</a><br />Authentication is Mandatory</p>",
        "operationId": "OBPv2.1.0-sandboxDataImport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "SandboxDataImport object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "crm_events",
                "users",
                "products",
                "banks",
                "branches",
                "transactions",
                "accounts",
                "atms"
              ],
              "properties": {
                "crm_events": {
                  "type": "array",
                  "items": {
                    "required": [
                      "channel",
                      "bank_id",
                      "id",
                      "customer",
                      "category",
                      "detail",
                      "actual_date"
                    ],
                    "properties": {
                      "channel": { "type": "string", "example": "Phone" },
                      "bank_id": { "type": "string", "example": "bank1" },
                      "id": { "type": "string", "example": "KIFJA76876AS" },
                      "customer": {
                        "required": ["name", "number"],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "James Brown"
                          },
                          "number": {
                            "type": "string",
                            "example": "698761728934"
                          }
                        }
                      },
                      "category": { "type": "string", "example": "Call" },
                      "detail": {
                        "type": "string",
                        "example": "Check mortgage"
                      },
                      "actual_date": {
                        "type": "string",
                        "example": "2017-09-19T02:31:05.000Z"
                      }
                    }
                  }
                },
                "users": {
                  "type": "array",
                  "items": {
                    "required": ["email", "password", "user_name"],
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "user1@example.com"
                      },
                      "password": {
                        "type": "string",
                        "example": "TESOBE520berlin123!"
                      },
                      "user_name": { "type": "string", "example": "User 1" }
                    }
                  }
                },
                "products": {
                  "type": "array",
                  "items": {
                    "required": [
                      "name",
                      "more_info_url",
                      "super_family",
                      "code",
                      "bank_id",
                      "meta",
                      "category",
                      "family"
                    ],
                    "properties": {
                      "name": { "type": "string", "example": "product 1" },
                      "more_info_url": {
                        "type": "string",
                        "example": "www.example.com/index1"
                      },
                      "super_family": {
                        "type": "string",
                        "example": "sup fam 1"
                      },
                      "code": { "type": "string", "example": "prd1" },
                      "bank_id": { "type": "string", "example": "bank1" },
                      "meta": {
                        "required": ["license"],
                        "properties": {
                          "license": {
                            "required": ["id", "name"],
                            "properties": {
                              "id": { "type": "string", "example": "pddl" },
                              "name": {
                                "type": "string",
                                "example": "Open Data Commons Public Domain Dedication and License (PDDL)"
                              }
                            }
                          }
                        }
                      },
                      "category": { "type": "string", "example": "cat1" },
                      "family": { "type": "string", "example": "fam1" }
                    }
                  }
                },
                "banks": {
                  "type": "array",
                  "items": {
                    "required": [
                      "website",
                      "full_name",
                      "logo",
                      "id",
                      "short_name"
                    ],
                    "properties": {
                      "website": {
                        "type": "string",
                        "example": "http://example.com/2"
                      },
                      "full_name": {
                        "type": "string",
                        "example": "Bank 2 Inc."
                      },
                      "logo": {
                        "type": "string",
                        "example": "http://example.com/logo2"
                      },
                      "id": { "type": "string", "example": "bank2" },
                      "short_name": { "type": "string", "example": "bank 2" }
                    }
                  }
                },
                "branches": {
                  "type": "array",
                  "items": {
                    "required": [
                      "name",
                      "location",
                      "bank_id",
                      "id",
                      "meta",
                      "address"
                    ],
                    "properties": {
                      "name": { "type": "string", "example": "Genel Müdürlük" },
                      "location": {
                        "required": ["latitude", "longitude"],
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "format": "double",
                            "example": "52.556198"
                          },
                          "longitude": {
                            "type": "number",
                            "format": "double",
                            "example": "13.384099"
                          }
                        }
                      },
                      "driveUp": {
                        "required": ["hours"],
                        "properties": {
                          "hours": {
                            "type": "string",
                            "example": "M-Th 8:30-5:30, F-8:30-6, Sat 9-12"
                          }
                        }
                      },
                      "bank_id": { "type": "string", "example": "bank1" },
                      "id": { "type": "string", "example": "branch1" },
                      "meta": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~products~items~properties~meta",
                      "lobby": {
                        "required": ["hours"],
                        "properties": {
                          "hours": {
                            "type": "string",
                            "example": "M-TH 8:30-3:30, F 9-5"
                          }
                        }
                      },
                      "address": {
                        "required": [
                          "city",
                          "line_2",
                          "state",
                          "post_code",
                          "county",
                          "country_code",
                          "line_3",
                          "line_1"
                        ],
                        "properties": {
                          "city": { "type": "string", "example": "Ashbourne" },
                          "line_2": {
                            "type": "string",
                            "example": "Rosy Place"
                          },
                          "state": { "type": "string", "example": "" },
                          "post_code": {
                            "type": "string",
                            "example": "WHY RU4"
                          },
                          "county": {
                            "type": "string",
                            "example": "Derbyshire"
                          },
                          "country_code": { "type": "string", "example": "UK" },
                          "line_3": {
                            "type": "string",
                            "example": "Sunny Village"
                          },
                          "line_1": {
                            "type": "string",
                            "example": "5 Some Street"
                          }
                        }
                      }
                    }
                  }
                },
                "transactions": {
                  "type": "array",
                  "items": {
                    "required": ["id", "this_account", "details"],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "blankCounterpartNameTransaction"
                      },
                      "this_account": {
                        "required": ["id", "bank"],
                        "properties": {
                          "id": { "type": "string", "example": "account1" },
                          "bank": { "type": "string", "example": "bank1" }
                        }
                      },
                      "counterparty": {
                        "properties": {
                          "name": { "type": "string", "example": "Acme Inc." },
                          "account_number": {
                            "type": "string",
                            "example": "12345-B"
                          }
                        }
                      },
                      "details": {
                        "required": [
                          "new_balance",
                          "description",
                          "completed",
                          "type",
                          "value",
                          "posted"
                        ],
                        "properties": {
                          "new_balance": {
                            "type": "string",
                            "example": "1244.00"
                          },
                          "description": {
                            "type": "string",
                            "example": "some description"
                          },
                          "completed": {
                            "type": "string",
                            "example": "2012-04-07T00:00:00.001Z"
                          },
                          "type": { "type": "string", "example": "SEPA" },
                          "value": { "type": "string", "example": "-135.33" },
                          "posted": {
                            "type": "string",
                            "example": "2012-03-07T00:00:00.001Z"
                          }
                        }
                      }
                    }
                  }
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "required": [
                      "generate_auditors_view",
                      "number",
                      "IBAN",
                      "label",
                      "owners",
                      "balance",
                      "bank",
                      "id",
                      "type",
                      "generate_accountants_view",
                      "generate_public_view"
                    ],
                    "properties": {
                      "generate_auditors_view": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "number": { "type": "string", "example": "22" },
                      "IBAN": { "type": "string", "example": "21234567890" },
                      "label": {
                        "type": "string",
                        "example": "Account 1 at Bank 2"
                      },
                      "owners": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "balance": {
                        "required": ["currency", "amount"],
                        "properties": {
                          "currency": { "type": "string", "example": "EUR" },
                          "amount": { "type": "string", "example": "1000.00" }
                        }
                      },
                      "bank": { "type": "string", "example": "bank2" },
                      "id": { "type": "string", "example": "account1" },
                      "type": { "type": "string", "example": "savings" },
                      "generate_accountants_view": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "generate_public_view": {
                        "type": "boolean",
                        "example": "false"
                      }
                    }
                  }
                },
                "atms": {
                  "type": "array",
                  "items": {
                    "required": [
                      "name",
                      "location",
                      "bank_id",
                      "id",
                      "meta",
                      "address"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Ashbourne Atm 1"
                      },
                      "location": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~branches~items~properties~location",
                      "bank_id": { "type": "string", "example": "bank1" },
                      "id": { "type": "string", "example": "atm1" },
                      "meta": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~products~items~properties~meta",
                      "address": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~branches~items~properties~address"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/search/metrics": {
      "get": {
        "tags": ["Metric", "API"],
        "summary": "Search API Metrics via Elasticsearch",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-elasticSearchMetrics",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/search/warehouse/{INDEX}": {
      "post": {
        "tags": ["Data-Warehouse", "New-Style"],
        "summary": "Data Warehouse Search",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Search the data warehouse and get row level results.</p><p>Authentication is Mandatory</p><p>CanSearchWarehouse entitlement is required. You can request the Role below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p><p>POST /search/warehouse/INDEX1,INDEX2</p><p>POST /search/warehouse/ALL</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p>",
        "operationId": "OBPv3.0.0-dataWarehouseSearch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ElasticSearchJsonV300 object that needs to be added.",
            "required": true,
            "schema": {
              "required": ["query"],
              "properties": {
                "query": {
                  "required": ["match_all"],
                  "properties": {
                    "match_all": {
                      "properties": {
                        "none": { "type": "string", "example": "" }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "INDEX",
            "description": "the elastic search index",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/search/warehouse/statistics/{INDEX}/{FIELD}": {
      "post": {
        "tags": ["Data-Warehouse", "New-Style"],
        "summary": "Data Warehouse Statistics",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Search the data warehouse and get statistical aggregations over a warehouse field</p><p>Does a stats aggregation over some numeric field:</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p><p>Authentication is Mandatory</p><p>CanSearchWarehouseStats Role is required. You can request this below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/statistics/INDEX/FIELD</p><p>POST /search/warehouse/statistics/ALL/FIELD</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p>",
        "operationId": "OBPv3.0.0-dataWarehouseStatistics",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ElasticSearchJsonV300 object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/search/warehouse/{INDEX}~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "FIELD",
            "description": "the elastic search field",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "INDEX",
            "description": "the elastic search index",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/system-views": {
      "post": {
        "tags": ["View-System", "New-Style"],
        "summary": "Create System View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create a system view</p><p>Authentication is Mandatory and the user needs to have access to the CanCreateSystemView entitlement.<br />The 'alias' field in the JSON can take one of two values:</p><ul><li><em>public</em>: to use the public alias if there is one specified for the other account.</li><li><em>private</em>: to use the public alias if there is one specified for the other account.</li><li><p><em>''(empty string)</em>: to use no alias; the view shows the real name of the other account.</p></li></ul><p>The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to <code>true</code> and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.</p><p>The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to <code>true</code> on the view creation, the rest will be set to <code>false</code>.</p><p>Please note that system views cannot be public. In case you try to set it you will get the error OBP-30258: System view cannot be public</p>",
        "operationId": "OBPv3.1.0-createSystemView",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateViewJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views~post~parameters~0~schema"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}~get~responses~200~schema~properties~views~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/system-views/{VIEW_ID}": {
      "delete": {
        "tags": ["View-System", "New-Style"],
        "summary": "Delete System View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Deletes the system view specified by VIEW_ID</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteSystemView",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["View-System", "New-Style"],
        "summary": "Get System View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get System View</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getSystemView",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "can_see_transaction_start_date",
                "can_add_url",
                "can_add_where_tag",
                "can_see_transaction_this_bank_account",
                "can_see_bank_account_owners",
                "can_see_private_alias",
                "can_edit_owner_comment",
                "can_see_other_account_national_identifier",
                "can_see_public_alias",
                "can_see_physical_location",
                "can_see_owner_comment",
                "can_see_bank_account_iban",
                "can_see_corporate_location",
                "can_see_bank_account_number",
                "can_see_other_account_bank_name",
                "description",
                "can_see_transaction_other_bank_account",
                "can_delete_corporate_location",
                "can_see_comments",
                "can_see_bank_account_bank_name",
                "can_add_more_info",
                "can_see_other_account_number",
                "can_see_other_account_swift_bic",
                "can_add_open_corporates_url",
                "can_see_other_account_kind",
                "can_delete_physical_location",
                "can_see_bank_account_label",
                "can_see_transaction_currency",
                "is_public",
                "can_see_transaction_finish_date",
                "can_add_tag",
                "can_see_images",
                "can_see_bank_account_currency",
                "hide_metadata_if_alias_used",
                "can_delete_where_tag",
                "alias",
                "can_add_image_url",
                "can_add_comment",
                "can_see_image_url",
                "id",
                "can_see_bank_account_national_identifier",
                "can_add_counterparty",
                "can_see_tags",
                "can_see_open_corporates_url",
                "short_name",
                "can_delete_tag",
                "can_see_more_info",
                "can_see_transaction_metadata",
                "can_delete_comment",
                "can_see_where_tag",
                "can_add_private_alias",
                "can_add_public_alias",
                "can_see_bank_account_swift_bic",
                "can_add_image",
                "can_see_transaction_type",
                "can_see_other_account_iban",
                "can_add_physical_location",
                "can_add_corporate_location",
                "can_delete_image",
                "can_see_url",
                "can_see_bank_account_balance",
                "can_see_transaction_balance",
                "can_see_transaction_amount",
                "can_see_other_account_metadata",
                "can_see_bank_account_type",
                "can_see_transaction_description"
              ],
              "properties": {
                "can_see_transaction_start_date": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_url": { "type": "boolean", "example": "true" },
                "can_add_where_tag": { "type": "boolean", "example": "true" },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_private_alias": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_edit_owner_comment": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_public_alias": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_physical_location": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_owner_comment": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_corporate_location": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_bank_account_number": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean",
                  "example": "true"
                },
                "description": { "type": "string", "example": "description" },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_delete_corporate_location": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_comments": { "type": "boolean", "example": "true" },
                "can_see_bank_account_bank_name": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_more_info": { "type": "boolean", "example": "true" },
                "can_see_other_account_number": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_other_account_swift_bic": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_other_account_kind": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_delete_physical_location": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_bank_account_label": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_transaction_currency": {
                  "type": "boolean",
                  "example": "true"
                },
                "is_public": { "type": "boolean", "example": "true" },
                "can_see_transaction_finish_date": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_tag": { "type": "boolean", "example": "true" },
                "can_see_images": { "type": "boolean", "example": "true" },
                "can_see_bank_account_currency": {
                  "type": "boolean",
                  "example": "true"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_delete_where_tag": {
                  "type": "boolean",
                  "example": "true"
                },
                "alias": { "type": "string", "example": "No" },
                "can_add_image_url": { "type": "boolean", "example": "true" },
                "can_add_comment": { "type": "boolean", "example": "true" },
                "can_see_image_url": { "type": "boolean", "example": "true" },
                "id": { "type": "string", "example": "1234" },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_counterparty": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_tags": { "type": "boolean", "example": "true" },
                "can_see_open_corporates_url": {
                  "type": "boolean",
                  "example": "true"
                },
                "short_name": { "type": "string", "example": "short_name" },
                "can_delete_tag": { "type": "boolean", "example": "true" },
                "can_see_more_info": { "type": "boolean", "example": "true" },
                "can_see_transaction_metadata": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_delete_comment": { "type": "boolean", "example": "true" },
                "can_see_where_tag": { "type": "boolean", "example": "true" },
                "can_add_private_alias": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_public_alias": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_image": { "type": "boolean", "example": "true" },
                "can_see_transaction_type": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_other_account_iban": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_physical_location": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_add_corporate_location": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_delete_image": { "type": "boolean", "example": "true" },
                "can_see_url": { "type": "boolean", "example": "true" },
                "can_see_bank_account_balance": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_transaction_balance": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_transaction_amount": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_bank_account_type": {
                  "type": "boolean",
                  "example": "true"
                },
                "can_see_transaction_description": {
                  "type": "boolean",
                  "example": "true"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["View-System", "New-Style"],
        "summary": "Update System View",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Update an existing view on a bank account</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p><p>The json sent is the same as during view creation (above), with one difference: the 'name' field<br />of a view is not editable (it is only set when a view is created)</p>",
        "operationId": "OBPv3.1.0-updateSystemView",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "UpdateViewJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}~put~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}~get~responses~200~schema~properties~views~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks~post~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users": {
      "get": {
        "tags": ["User", "New-Style"],
        "summary": "Get all Users",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get all users</p><p>Authentication is Mandatory</p><p>CanGetAnyUser entitlement is required,</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 50</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>locked_status (if null ignore)</li></ul>",
        "operationId": "OBPv3.0.0-getUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["users"],
              "properties": {
                "users": {
                  "type": "array",
                  "items": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema~properties~entitlement_requests~items~properties~user"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["User", "Onboarding"],
        "summary": "Create User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Creates OBP user.<br />No authorisation (currently) required.</p><p>Mimics current webform to Register.</p><p>Requires username(email) and password.</p><p>Returns 409 error if username not unique.</p><p>May require validation of email address.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-createUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateUserJson object that needs to be added.",
            "required": true,
            "schema": {
              "required": [
                "first_name",
                "email",
                "username",
                "last_name",
                "password"
              ],
              "properties": {
                "first_name": { "type": "string", "example": "Simon" },
                "email": {
                  "type": "string",
                  "example": "felixsmith@example.com"
                },
                "username": { "type": "string", "example": "felixsmith" },
                "last_name": { "type": "string", "example": "Redfern" },
                "password": { "type": "string", "example": "String" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema~properties~entitlement_requests~items~properties~user"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/{USERNAME}/lock-status": {
      "get": {
        "tags": ["User", "New-Style"],
        "summary": "Get User Lock Status",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get User Login Status.<br />Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getBadLoginStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USERNAME",
            "description": "the user name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": [
                "username",
                "bad_attempts_since_last_success_or_reset",
                "last_failure_date"
              ],
              "properties": {
                "username": { "type": "string", "example": "felixsmith" },
                "bad_attempts_since_last_success_or_reset": {
                  "type": "integer",
                  "format": "int32",
                  "example": "0"
                },
                "last_failure_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-09-19T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "put": {
        "tags": ["User", "New-Style"],
        "summary": "Unlock the user",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Unlock a User.</p><p>(Perhaps the user was locked due to multiple failed login attempts)</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-unlockUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USERNAME",
            "description": "the user name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/users/{USERNAME}/lock-status~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/{USER_ID}/auth-context": {
      "delete": {
        "tags": ["User", "New-Style"],
        "summary": "Delete User's Auth Contexts",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete the Auth Contexts of a User specified by USER_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteUserAuthContexts",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "get": {
        "tags": ["User", "New-Style"],
        "summary": "Get User Auth Contexts",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get User Auth Contexts for a User.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-getUserAuthContexts",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["user_auth_contexts"],
              "properties": {
                "user_auth_contexts": {
                  "type": "array",
                  "items": {
                    "required": [
                      "user_auth_context_id",
                      "user_id",
                      "key",
                      "value"
                    ],
                    "properties": {
                      "user_auth_context_id": {
                        "type": "string",
                        "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
                      },
                      "user_id": {
                        "type": "string",
                        "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
                      },
                      "key": { "type": "string", "example": "CUSTOMER_NUMBER" },
                      "value": { "type": "string", "example": "78987432" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["User", "New-Style"],
        "summary": "Create User Auth Context",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create User Auth Context. These key value pairs will be propagated over connector to adapter. Normally used for mapping OBP user and<br />Bank User/Customer.<br />Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-createUserAuthContext",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PostUserAuthContextJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{SCA_METHOD}~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/users/{USER_ID}/auth-context~get~responses~200~schema~properties~user_auth_contexts~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/{USER_ID}/auth-context/{USER_AUTH_CONTEXT_ID}": {
      "delete": {
        "tags": ["User", "New-Style"],
        "summary": "Delete User Auth Context",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete a User AuthContext of the User specified by USER_AUTH_CONTEXT_ID.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-deleteUserAuthContextById",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_AUTH_CONTEXT_ID",
            "description": "the user auth context id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/{USER_ID}/entitlement-requests": {
      "get": {
        "tags": ["Role", "Entitlement", "User", "New-Style"],
        "summary": "Get Entitlement Requests for a User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get Entitlement Requests for a User.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getEntitlementRequests",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/{USER_ID}/entitlement/{ENTITLEMENT_ID}": {
      "delete": {
        "tags": ["Role", "User", "Entitlement", "New-Style"],
        "summary": "Delete Entitlement",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Delete Entitlement specified by ENTITLEMENT_ID for an user specified by USER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-deleteEntitlement",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "ENTITLEMENT_ID",
            "description": "The entitblement id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/{USER_ID}/entitlements": {
      "get": {
        "tags": ["Role", "Entitlement", "User"],
        "summary": "Get Entitlements for User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-getEntitlements",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      },
      "post": {
        "tags": ["Role", "Entitlement", "User", "New-Style"],
        "summary": "Add Entitlement for a User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Create Entitlement. Grant Role to User.</p><p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication is required and the user needs to be a Super Admin. Super Admins are listed in the Props file.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-addEntitlement",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateEntitlementJSON object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/entitlement-requests~post~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements~get~responses~200~schema~properties~list~items"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/{USER_ID}/refresh": {
      "post": {
        "tags": ["User", "New-Style"],
        "summary": "Refresh User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>The endpoint is used for updating the accounts, views, account holders for the user.<br />As to the Json body, you can leave it as Empty.<br />This call will get data from backend, no need to prepare the json body in api side.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.1.0-refreshUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "required": ["duration_time"],
              "properties": {
                "duration_time": { "type": "string", "example": "10 ms" }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OBP-20006: User is missing one or more roles: "
                }
              }
            }
          }
        }
      }
    },
    "/obp/v3.1.0/users/current": {
      "get": {
        "tags": ["User", "New-Style"],
        "summary": "Get User (Current)",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get the logged in user</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getCurrentUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema~properties~entitlement_requests~items~properties~user"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/current/customers": {
      "get": {
        "tags": ["Customer", "User", "New-Style"],
        "summary": "Get Customers for Current User",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Gets all Customers that are linked to a User.</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv3.0.0-getCustomersForUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "required": ["customers"],
              "properties": {
                "customers": {
                  "type": "array",
                  "items": {
                    "required": [
                      "customer_id",
                      "name_suffix",
                      "email",
                      "branch_id",
                      "mobile_phone_number",
                      "customer_number",
                      "highest_education_attained",
                      "dob_of_dependants",
                      "bank_id",
                      "date_of_birth",
                      "last_ok_date",
                      "employment_status",
                      "legal_name",
                      "title",
                      "face_image",
                      "dependants",
                      "relationship_status",
                      "kyc_status"
                    ],
                    "properties": {
                      "customer_id": {
                        "type": "string",
                        "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
                      },
                      "name_suffix": { "type": "string", "example": "Sr" },
                      "email": {
                        "type": "string",
                        "example": "felixsmith@example.com"
                      },
                      "branch_id": { "type": "string", "example": "DERBY6" },
                      "mobile_phone_number": {
                        "type": "string",
                        "example": "+44 07972 444 876"
                      },
                      "customer_number": {
                        "type": "string",
                        "example": "5987953"
                      },
                      "highest_education_attained": {
                        "type": "string",
                        "example": "Master"
                      },
                      "dob_of_dependants": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "bank_id": { "type": "string", "example": "gh.29.uk" },
                      "date_of_birth": {
                        "type": "string",
                        "example": "19900101"
                      },
                      "credit_rating": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_rating",
                      "last_ok_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-09-19T00:00:00Z"
                      },
                      "employment_status": {
                        "type": "string",
                        "example": "worker"
                      },
                      "legal_name": {
                        "type": "string",
                        "example": "Eveline Tripman"
                      },
                      "credit_limit": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
                      "title": { "type": "string", "example": "Dr." },
                      "face_image": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~face_image",
                      "dependants": {
                        "type": "integer",
                        "format": "int32",
                        "example": "1"
                      },
                      "relationship_status": {
                        "type": "string",
                        "example": "single"
                      },
                      "kyc_status": { "type": "boolean", "example": "true" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/email/EMAIL/terminator": {
      "get": {
        "tags": ["User", "New-Style"],
        "summary": "Get Users by Email Address",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get users by email address</p><p>Authentication is Mandatory<br />CanGetAnyUser entitlement is required,</p>",
        "operationId": "OBPv3.0.0-getUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/users~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/user_id/{USER_ID}": {
      "get": {
        "tags": ["User", "New-Style"],
        "summary": "Get User by USER_ID",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get user by USER_ID</p><p>Authentication is Mandatory<br />CanGetAnyUser entitlement is required,</p>",
        "operationId": "OBPv3.0.0-getUserByUserId",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/users~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/obp/v3.1.0/users/username/{USERNAME}": {
      "get": {
        "tags": ["User", "New-Style"],
        "summary": "Get User by USERNAME",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>Get user by USERNAME</p><p>Authentication is Mandatory</p><p>CanGetAnyUser entitlement is required,</p>",
        "operationId": "OBPv3.0.0-getUserByUsername",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "EmptyClassJson object that needs to be added.",
            "required": true,
            "schema": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema"
          },
          {
            "in": "path",
            "name": "USERNAME",
            "description": "the user name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "~paths~/obp/v3.1.0/users~get~responses~200~schema"
          },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema"
          }
        }
      }
    },
    "/test-dynamic-resource-doc/my_user/MY_USER_ID": {
      "post": {
        "tags": ["Dynamic-Resource-Doc-Manage", "New-Style"],
        "summary": "A test endpoint",
        "security": [{ "directLogin": [], "gatewayLogin": [] }],
        "description": "<p>A test endpoint.<br />Just for debug method body of dynamic resource doc</p><p>Authentication is Optional</p>",
        "operationId": "OBPv4.0.0-test-dynamic-resource-doc",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "string type value.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "201": { "description": "Success", "schema": { "type": "string" } },
          "400": {
            "description": "Error",
            "schema": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorInvalidJsonFormat": "~paths~/obp/v3.1.0/banks~post~responses~400~schema",
    "ErrorInvalidISOCurrencyCode": "~paths~/obp/v3.1.0/banks/{BANK_ID}/fx/{FROM_CURRENCY_CODE}/{TO_CURRENCY_CODE}~get~responses~400~schema",
    "ErrorInvalidDateFormat": "~paths~/obp/v3.1.0/management/connector/metrics~get~responses~400~schema",
    "ErrorFilterSortDirectionError": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~400~schema",
    "ErrorUserNotLoggedIn": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~400~schema",
    "ErrorUserHasMissingRoles": "~paths~/obp/v3.1.0/users/{USER_ID}/refresh~post~responses~400~schema",
    "ErrorBankNotFound": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts~get~responses~400~schema",
    "ErrorBranchNotFoundByBranchId": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~get~responses~400~schema",
    "ErrorProductNotFoundByProductCode": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-tree/{PRODUCT_CODE}~get~responses~400~schema",
    "ErrorBankAccountNotFound": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~400~schema",
    "ErrorNoViewPermission": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags/{TAG_ID}~delete~responses~400~schema",
    "ErrorCannotGetAccounts": "~paths~/obp/v3.1.0/accounts/public~get~responses~400~schema",
    "ErrorUnknownError": "~paths~/obp/v3.1.0/adapter~get~responses~400~schema",
    "ProductAttributeResponseWithoutBankIdJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema~properties~products~items~properties~product_attributes~items",
    "AkkaJSON": "~paths~/obp/v3.1.0/config~get~responses~200~schema~properties~akka",
    "NewModeratedCoreAccountJsonV300": "~paths~/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account~get~responses~200~schema",
    "AddCustomerMessageJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customer/{CUSTOMER_ID}/messages~post~parameters~0~schema",
    "TransactionRequestBodyFreeFormJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/FREE_FORM/transaction-requests~post~parameters~0~schema",
    "BanksJSON": "~paths~/obp/v3.1.0/banks~get~responses~200~schema",
    "PhysicalCardsJsonV310": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards~get~responses~200~schema",
    "PostCustomerAddressJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address~post~parameters~0~schema",
    "AmountOfMoneyJsonV121": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_limit",
    "PutUpdateCustomerNumberJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/number~put~parameters~0~schema",
    "ProductCollectionJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~put~responses~200~schema~properties~product_collection~items",
    "WarehouseJSON": "~paths~/obp/v3.1.0/config~get~responses~200~schema~properties~elastic_search~properties~warehouse~items",
    "PostCustomerNumberJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/customer-number~post~parameters~0~schema",
    "TransactionRequestWithChargeJSONs210": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests~get~responses~200~schema",
    "LicenseJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~meta~properties~license",
    "AvailableRolesJSON": "~paths~/obp/v3.1.0/roles~get~responses~200~schema",
    "CounterpartyMetadataJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~post~responses~201~schema~properties~metadata",
    "CorporateLocationJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location~post~parameters~0~schema",
    "AccountWebhookJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-web-hooks~post~responses~201~schema",
    "ProductsJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/products~get~responses~200~schema",
    "AccountApplicationJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~post~parameters~0~schema",
    "GlossaryDescriptionJsonV300": "~paths~/obp/v3.1.0/api/glossary~get~responses~200~schema~properties~glossary_items~items~properties~description",
    "TransactionRequestTransferToAccount": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_account",
    "UpdateViewJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}~put~parameters~0~schema",
    "TopConsumerJson": "~paths~/obp/v3.1.0/management/metrics/top-consumers~get~responses~200~schema~properties~top_consumers~items",
    "HostedBy": "~paths~/obp/v3.1.0/root~get~responses~200~schema~properties~hosted_by",
    "ResourceUserJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~user",
    "OtherAccountJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items",
    "AccountsBalancesV310Json": "~paths~/obp/v3.1.0/banks/{BANK_ID}/balances~get~responses~200~schema",
    "PostKycDocumentJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_documents/{KYC_DOCUMENT_ID}~put~parameters~0~schema",
    "TransactionMetadataJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata",
    "TransactionRequestTypeJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types~get~responses~200~schema~properties~transaction_request_types~items",
    "KycStatusesJSON": "~paths~/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_statuses~get~responses~200~schema",
    "OpenCorporateUrlJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url~post~parameters~0~schema",
    "RateLimitingInfoV310": "~paths~/obp/v3.1.0/rate-limiting~get~responses~200~schema",
    "EntitlementRequestsJSON": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema",
    "PinResetJSON": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~pin_reset~items",
    "CreateEntitlementJSON": "~paths~/obp/v3.1.0/entitlement-requests~post~parameters~0~schema",
    "AccountWebhookPutJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-web-hooks~put~parameters~0~schema",
    "CustomerAddressesJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses~get~responses~200~schema",
    "CustomerJsonV300": "~paths~/obp/v3.1.0/users/current/customers~get~responses~200~schema~properties~customers~items",
    "CounterpartyIdJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~parameters~0~schema~properties~to",
    "DriveUpStringJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~put~parameters~0~schema~properties~drive_up",
    "AccountWebhookPostJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-web-hooks~post~parameters~0~schema",
    "OrderObjectJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders~get~responses~200~schema~properties~orders~items~properties~order",
    "AdapterImplementationJson": "~paths~/obp/v3.1.0/message-docs/CONNECTOR~get~responses~200~schema~properties~message_docs~items~properties~adapter_implementation",
    "ProductTreeJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-tree/{PRODUCT_CODE}~get~responses~200~schema",
    "ImageUrlJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url~post~parameters~0~schema",
    "UserAuthContextUpdateJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{AUTH_CONTEXT_UPDATE_ID}/challenge~post~responses~201~schema",
    "AccountApplicationsJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema",
    "PutUpdateCustomerBranchJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/branch~put~parameters~0~schema",
    "CustomerCreditRatingJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~credit_rating",
    "TransactionRequestChargeJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types~get~responses~200~schema~properties~transaction_request_types~items~properties~charge",
    "PostTransactionCommentJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments~post~parameters~0~schema",
    "BranchJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches~get~responses~200~schema~properties~branches~items",
    "ElasticSearchJsonV300": "~paths~/obp/v3.1.0/search/warehouse/{INDEX}~post~parameters~0~schema",
    "ThisAccountJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~this_account",
    "PortJSON": "~paths~/obp/v3.1.0/config~get~responses~200~schema~properties~akka~properties~ports~items",
    "BasicAccountJSON": "~paths~/obp/v3.1.0/accounts/public~get~responses~200~schema~properties~accounts~items",
    "OrderJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders~get~responses~200~schema~properties~orders~items",
    "AdapterInfoJsonV300": "~paths~/obp/v3.1.0/adapter~get~responses~200~schema",
    "AmountOfMoney": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~value",
    "CoreAccountJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/private~get~responses~200~schema~properties~accounts~items",
    "SuccessMessage": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~responses~201~schema",
    "PostTransactionImageJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images~post~parameters~0~schema",
    "UserCustomerLinkJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/user_customer_links~post~responses~201~schema",
    "KycDocumentJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_documents/{KYC_DOCUMENT_ID}~put~responses~200~schema",
    "TransactionRequestBodyJsonV200": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SANDBOX_TAN/transaction-requests~post~parameters~0~schema",
    "UpdateAccountRequestJsonV310": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~parameters~0~schema",
    "IbanJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SEPA/transaction-requests~post~parameters~0~schema~properties~to",
    "ProductAttributeJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attribute~post~parameters~0~schema",
    "PostTransactionWhereJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where~post~parameters~0~schema",
    "TransactionTypesJsonV200": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-types~get~responses~200~schema",
    "CreditLimitRequestJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit_limit/requests~post~parameters~0~schema",
    "EmptyElasticSearch": "~paths~/obp/v3.1.0/search/warehouse/{INDEX}~post~parameters~0~schema~properties~query~properties~match_all",
    "BankJSONV220": "~paths~/obp/v3.1.0/banks~post~parameters~0~schema",
    "TransactionRequestBodySEPAJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SEPA/transaction-requests~post~parameters~0~schema",
    "ViewIdsJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}/views~post~parameters~0~schema",
    "CoreCounterpartyJsonV300": "~paths~/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~other_account",
    "TransactionRequestWithChargeJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge~post~responses~201~schema",
    "TransactionTypeJsonV200": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-types~get~responses~200~schema~properties~transaction_types~items",
    "PhysicalCardWithAttributesJsonV310": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}~get~responses~200~schema",
    "AccountHeldJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items",
    "CustomerWithAttributesJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}~get~responses~200~schema",
    "ProductJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema~properties~products~items",
    "AccountRoutingJsonV121": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema~properties~accounts~items~properties~account_routings~items",
    "PutProductCollectionsV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~put~parameters~0~schema",
    "TransactionRequestChargeJsonV200": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~charge",
    "MoreInfoJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info~post~parameters~0~schema",
    "PostCounterpartyJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~post~parameters~0~schema",
    "TransactionAttributeResponseJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~transaction_attributes~items",
    "TransactionTagJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~tags~items",
    "TransactionRequestTypeJSONV210": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-request-types~get~responses~200~schema~properties~transaction_request_types~items",
    "PutUpdateCustomerMobilePhoneNumberJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/mobile-number~put~parameters~0~schema",
    "RefreshUserJson": "~paths~/obp/v3.1.0/users/{USER_ID}/refresh~post~responses~201~schema",
    "LobbyJsonV330": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches~get~responses~200~schema~properties~branches~items~properties~lobby",
    "CreateUserJson": "~paths~/obp/v3.1.0/users~post~parameters~0~schema",
    "PostKycMediaJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_media/{KYC_MEDIA_ID}~put~parameters~0~schema",
    "ConsumersJsonV310": "~paths~/obp/v3.1.0/management/consumers~get~responses~200~schema",
    "AccountRouting": "~paths~/obp/v3.1.0/banks/{BANK_ID}/balances~get~responses~200~schema~properties~accounts~items~properties~account_routings~items",
    "UserJsonV200": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema~properties~entitlement_requests~items~properties~user",
    "AccountBalanceV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/balances~get~responses~200~schema~properties~accounts~items",
    "TaxResidenceV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residence~post~responses~201~schema",
    "RateLimit": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~get~responses~200~schema~properties~current_state~properties~per_week",
    "MetaJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~meta",
    "CustomerAddressJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address~post~responses~201~schema",
    "HistoricalTransactionAccountJsonV310": "~paths~/obp/v3.1.0/management/historical/transactions ~post~parameters~0~schema~properties~to",
    "AccountAttributeResponseJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~responses~200~schema~properties~account_attributes~items",
    "MeetingsJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema",
    "FXRateJsonV220": "~paths~/obp/v3.1.0/banks/{BANK_ID}/fx~put~parameters~0~schema",
    "KycChecksJSON": "~paths~/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_checks~get~responses~200~schema",
    "BasicViewJson": "~paths~/obp/v3.1.0/accounts/public~get~responses~200~schema~properties~accounts~items~properties~views_available~items",
    "TransactionType": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-types~put~responses~200~schema",
    "ModeratedCoreAccountJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/firehose/accounts/views/{VIEW_ID}~get~responses~200~schema~properties~accounts~items",
    "ConsumerJsonV310": "~paths~/obp/v3.1.0/management/consumers~get~responses~200~schema~properties~consumers~items",
    "ProductCollectionsJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~put~responses~200~schema",
    "TransactionRequestBodyAllTypes": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details",
    "CreatePhysicalCardJsonV310": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards~post~parameters~0~schema",
    "TransactionRequestTypesJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types~get~responses~200~schema",
    "CounterpartiesJsonV220": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~get~responses~200~schema",
    "ProductCollectionItemJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~put~responses~200~schema~properties~product_collection~items~properties~items~items",
    "TopApisJson": "~paths~/obp/v3.1.0/management/metrics/top-apis~get~responses~200~schema",
    "CheckbookOrdersJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders~get~responses~200~schema",
    "PostHistoricalTransactionJson": "~paths~/obp/v3.1.0/management/historical/transactions ~post~parameters~0~schema",
    "KycMediasJSON": "~paths~/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_media~get~responses~200~schema",
    "BranchesJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches~get~responses~200~schema",
    "AccountsIdsJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/account_ids/private~get~responses~200~schema",
    "TransactionRequestAccountJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~from",
    "AvailableRoleJSON": "~paths~/obp/v3.1.0/roles~get~responses~200~schema~properties~roles~items",
    "CustomerJSONsV300": "~paths~/obp/v3.1.0/users/current/customers~get~responses~200~schema",
    "AccountV310Json": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders~get~responses~200~schema~properties~account",
    "AccountJSON": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~account",
    "CardAttributeCommons": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}~get~responses~200~schema~properties~card_attributes~items",
    "DriveUpJsonV330": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches~get~responses~200~schema~properties~branches~items~properties~drive_up",
    "CounterpartyJsonV220": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~get~responses~200~schema~properties~counterparties~items",
    "LocationJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~location",
    "ChallengeAnswerJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge~post~parameters~0~schema",
    "CustomerFaceImageJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer~properties~face_image",
    "CreateViewJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views~post~parameters~0~schema",
    "KycMediaJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_media/{KYC_MEDIA_ID}~put~responses~200~schema",
    "CrmEventJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/crm-events~get~responses~200~schema~properties~crm_events~items",
    "CreditLimitOrderJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit_limit/requests~get~responses~200~schema",
    "ContactDetailsJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items~properties~creator",
    "ToAccountTransferToAtmKycDocument": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_atm~properties~to~properties~kyc_document",
    "MeetingJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items",
    "UpdatePhysicalCardJsonV310": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}~put~parameters~0~schema",
    "MessageDocJson": "~paths~/obp/v3.1.0/message-docs/CONNECTOR~get~responses~200~schema~properties~message_docs~items",
    "ConsumerJSON": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}~get~responses~200~schema",
    "MetricJson": "~paths~/obp/v3.1.0/management/metrics~get~responses~200~schema~properties~metrics~items",
    "CoreTransactionDetailsJSON": "~paths~/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~details",
    "TransactionWhereJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where~get~responses~200~schema",
    "TransactionJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items",
    "TransactionRequestIban": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_sepa",
    "CreateAccountResponseJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~responses~200~schema",
    "AccountWebhooksJson": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/account-web-hooks~get~responses~200~schema",
    "PutUpdateCustomerCreditRatingAndSourceJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit-rating-and-source~put~parameters~0~schema",
    "ElasticSearchJSON": "~paths~/obp/v3.1.0/config~get~responses~200~schema~properties~elastic_search",
    "PostKycStatusJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_statuses~put~parameters~0~schema",
    "OAuth2ServerJwksUrisJson": "~paths~/obp/v3.1.0/jwks-uris~get~responses~200~schema",
    "TransactionRequestAccount": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_sandbox_tan",
    "PostTaxResidenceJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residence~post~parameters~0~schema",
    "PermissionJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions~get~responses~200~schema~properties~permissions~items",
    "MetricsJson": "~paths~/obp/v3.1.0/management/metrics~get~responses~200~schema",
    "ViewJSONV121": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~views_available~items",
    "OtherAccountJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/other_account~get~responses~200~schema",
    "RedisCallLimitJson": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~get~responses~200~schema~properties~current_state",
    "CoreTransactionJsonV300": "~paths~/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions~get~responses~200~schema~properties~transactions~items",
    "LobbyStringJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~put~parameters~0~schema~properties~lobby",
    "ReplacementJSON": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items~properties~replacement",
    "MessageDocsJson": "~paths~/obp/v3.1.0/message-docs/CONNECTOR~get~responses~200~schema",
    "MetricsJSON": "~paths~/obp/v3.1.0/config~get~responses~200~schema~properties~elastic_search~properties~metrics~items",
    "BankJSON": "~paths~/obp/v3.1.0/banks~get~responses~200~schema~properties~banks~items",
    "BankId": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-types~put~responses~200~schema~properties~bankId",
    "AliasJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias~get~responses~200~schema",
    "ViewsJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}~get~responses~200~schema",
    "BankRoutingJsonV121": "~paths~/obp/v3.1.0/banks~get~responses~200~schema~properties~banks~items~properties~bank_routing",
    "TransactionImagesJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images~get~responses~200~schema",
    "PostHistoricalTransactionResponseJson": "~paths~/obp/v3.1.0/management/historical/transactions ~post~responses~201~schema",
    "CustomerJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items~properties~customer",
    "PhysicalCardsJSON": "~paths~/obp/v3.1.0/cards~get~responses~200~schema",
    "AccountIdJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/account_ids/private~get~responses~200~schema~properties~accounts~items",
    "TransactionRequestBodyCounterpartyJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~parameters~0~schema",
    "ViewBasic": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}~get~responses~200~schema~properties~account~properties~views_available~items",
    "PostTransactionTagJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags~post~parameters~0~schema",
    "CreditLimitOrderResponseJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit_limit/requests~post~responses~201~schema",
    "OtherAccountMetadataJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~metadata",
    "ViewJSONV220": "~paths~/obp/v3.1.0/system-views/{VIEW_ID}~get~responses~200~schema",
    "CoreAccountsHeldJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts-held~get~responses~200~schema",
    "UpdateAccountResponseJsonV310": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~responses~200~schema",
    "PutUpdateCustomerIdentityJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/identity~put~parameters~0~schema",
    "BasicAccountsJSON": "~paths~/obp/v3.1.0/accounts/public~get~responses~200~schema",
    "CounterpartyWithMetadataJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~post~responses~201~schema",
    "TransactionRequestCounterpartyId": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_counterparty",
    "TransactionRequestBody": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge~post~responses~201~schema~properties~details",
    "ViewJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}~get~responses~200~schema~properties~views~items",
    "MinimalBankJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/other_account~get~responses~200~schema~properties~bank",
    "TransactionTypeId": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-types~get~responses~200~schema~properties~transaction_types~items~properties~id",
    "CardObjectJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/credit_cards/orders~get~responses~200~schema~properties~cards~items",
    "PhysicalCardJsonV310": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards~get~responses~200~schema~properties~cards~items",
    "PostKycCheckJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_check/{KYC_CHECK_ID}~put~parameters~0~schema",
    "UserAuthContextJson": "~paths~/obp/v3.1.0/users/{USER_ID}/auth-context~get~responses~200~schema~properties~user_auth_contexts~items",
    "PutUpdateCustomerEmailJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/email~put~parameters~0~schema",
    "PostCounterpartyBespokeJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~get~responses~200~schema~properties~counterparties~items~properties~bespoke~items",
    "AddressJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~address",
    "ProductCollectionJsonTreeV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}~get~responses~200~schema",
    "ScopesJSON": "~paths~/obp/v3.1.0/config~get~responses~200~schema~properties~scopes",
    "OtherAccountsJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema",
    "PutUpdateCustomerDataJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/data~put~parameters~0~schema",
    "ViewBasicV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/private~get~responses~200~schema~properties~accounts~items~properties~views~items",
    "OAuth2ServerJWKURIJson": "~paths~/obp/v3.1.0/jwks-uris~get~responses~200~schema~properties~jwks_uris~items",
    "ConsentJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents~get~responses~200~schema~properties~consents~items",
    "AccountApplicationUpdateStatusJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications/{ACCOUNT_APPLICATION_ID}~put~parameters~0~schema",
    "ConnectorMetricJson": "~paths~/obp/v3.1.0/management/connector/metrics~get~responses~200~schema~properties~metrics~items",
    "GlossaryItemJsonV300": "~paths~/obp/v3.1.0/api/glossary~get~responses~200~schema~properties~glossary_items~items",
    "CustomerMessageJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customer/messages~get~responses~200~schema~properties~messages~items",
    "MeetingKeysJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items~properties~keys",
    "ToAccountTransferToAtm": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_atm~properties~to",
    "PostConsentEmailJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents/EMAIL~post~parameters~0~schema",
    "UrlJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url~post~parameters~0~schema",
    "CallLimitPostJson": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~put~parameters~0~schema",
    "TransactionCommentJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~comments~items",
    "TransactionDetailsJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~details",
    "APIInfoJSON": "~paths~/obp/v3.1.0/root~get~responses~200~schema",
    "AtmJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema",
    "CallLimitJson": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits~get~responses~200~schema",
    "ConsumerRedirectUrlJSON": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}/consumer/redirect_url~put~parameters~0~schema",
    "BadLoginStatusJson": "~paths~/obp/v3.1.0/users/{USERNAME}/lock-status~get~responses~200~schema",
    "PutUpdateCustomerCreditLimitJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit-limit~put~parameters~0~schema",
    "CheckFundsAvailableJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/funds-available~get~responses~200~schema",
    "SocialMediaJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles~get~responses~200~schema~properties~checks~items",
    "ChallengeJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~challenge",
    "TaxResidenceJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residences~get~responses~200~schema",
    "EntitlementJSONs": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements~get~responses~200~schema",
    "ModeratedAccountJSON310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema",
    "UserJSONV121": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account~get~responses~200~schema~properties~owners~items",
    "BranchJsonPutV210": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~put~parameters~0~schema",
    "CrmEventsJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/crm-events~get~responses~200~schema",
    "CustomerMessagesJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customer/messages~get~responses~200~schema",
    "CreateScopeJson": "~paths~/obp/v3.1.0/consumers/{CONSUMER_ID}/scopes~post~parameters~0~schema",
    "PutEnabledJSON": "~paths~/obp/v3.1.0/management/consumers/{CONSUMER_ID}~put~parameters~0~schema",
    "AccountBasicV310": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}~get~responses~200~schema~properties~account",
    "ElasticSearchQuery": "~paths~/obp/v3.1.0/search/warehouse/{INDEX}~post~parameters~0~schema~properties~query",
    "LocationJsonV210": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~post~responses~201~schema~properties~metadata~properties~physical_location",
    "CoreTransactionsJsonV300": "~paths~/obp/v3.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions~get~responses~200~schema",
    "AccountApplicationResponseJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/account-applications~get~responses~200~schema~properties~account_applications~items",
    "TransactionRequestTransferToAtm": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_atm",
    "KycCheckJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_check/{KYC_CHECK_ID}~put~responses~200~schema",
    "PostUserAuthContextJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{SCA_METHOD}~post~parameters~0~schema",
    "SepaCreditTransfers": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_sepa_credit_transfers",
    "ToAccountTransferToAccount": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_account~properties~to",
    "TransactionImageJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema~properties~transactions~items~properties~metadata~properties~images~items",
    "CreateAccountRequestJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~put~parameters~0~schema",
    "UserJSONV210": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties~post~responses~201~schema~properties~metadata~properties~physical_location~properties~user",
    "PostConsentPhoneJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents/SMS~post~parameters~0~schema",
    "CachedFunctionJSON": "~paths~/obp/v3.1.0/config~get~responses~200~schema~properties~cache~items",
    "BankJson400": "~paths~/obp/v3.1.0/banks/{BANK_ID}~get~responses~200~schema",
    "PostCustomerJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers~post~parameters~0~schema",
    "UsersJsonV200": "~paths~/obp/v3.1.0/users~get~responses~200~schema",
    "AddressJsonV140": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~put~parameters~0~schema~properties~address",
    "CreditCardOrderStatusResponseJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/credit_cards/orders~get~responses~200~schema",
    "MeetingPresentJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items~properties~present",
    "GlossaryItemsJsonV300": "~paths~/obp/v3.1.0/api/glossary~get~responses~200~schema",
    "CreateUserCustomerLinkJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/user_customer_links~post~parameters~0~schema",
    "BranchRoutingJsonV141": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders~get~responses~200~schema~properties~account~properties~branch_routings~items",
    "ConfigurationJSON": "~paths~/obp/v3.1.0/config~get~responses~200~schema",
    "AggregateMetricJSON": "~paths~/obp/v3.1.0/management/aggregate-metrics~get~responses~200~schema",
    "ScopeJsons": "~paths~/obp/v3.1.0/consumers/{CONSUMER_ID}/scopes~get~responses~200~schema",
    "AccountHolderJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~holder",
    "SeverJWK": "~paths~/obp/v3.1.0/certs~get~responses~200~schema",
    "ToAccountTransferToAccountAccount": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_account~properties~to~properties~account",
    "AccountRuleJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/firehose/accounts/views/{VIEW_ID}~get~responses~200~schema~properties~accounts~items~properties~account_rules~items",
    "KycStatusJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_statuses~put~responses~200~schema",
    "InviteeJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~get~responses~200~schema~properties~meetings~items~properties~invitees~items",
    "ToAccountTransferToPhone": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_phone~properties~to",
    "ScopeJson": "~paths~/obp/v3.1.0/consumers/{CONSUMER_ID}/scopes~get~responses~200~schema~properties~list~items",
    "TransactionsJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions~get~responses~200~schema",
    "CreateMeetingJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/meetings~post~parameters~0~schema",
    "ObpApiLoopbackJson": "~paths~/obp/v3.1.0/connector/loopback~get~responses~200~schema",
    "CustomerJSONs": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers~get~responses~200~schema",
    "CustomerJsonV210": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers~get~responses~200~schema~properties~customers~items",
    "TransactionRequestTypesJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/transaction-request-types~get~responses~200~schema",
    "EntitlementRequestJSON": "~paths~/obp/v3.1.0/entitlement-requests~get~responses~200~schema~properties~entitlement_requests~items",
    "TransactionCommentsJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments~get~responses~200~schema",
    "TransactionNarrativeJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative~get~responses~200~schema",
    "UpdateAccountJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}~post~parameters~0~schema",
    "ConnectorMetricsJson": "~paths~/obp/v3.1.0/management/connector/metrics~get~responses~200~schema",
    "SocialMediasJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles~get~responses~200~schema",
    "PhysicalLocationJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location~post~parameters~0~schema",
    "CoreAccountsJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/private~get~responses~200~schema",
    "UserAuthContextsJson": "~paths~/obp/v3.1.0/users/{USER_ID}/auth-context~get~responses~200~schema",
    "PermissionsJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions~get~responses~200~schema",
    "BranchJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}~put~responses~200~schema",
    "FromAccountTransfer": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_phone~properties~from",
    "LocationJSONV121": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts~get~responses~200~schema~properties~other_accounts~items~properties~metadata~properties~physical_location",
    "ModeratedCoreAccountsJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/firehose/accounts/views/{VIEW_ID}~get~responses~200~schema",
    "EntitlementJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements~get~responses~200~schema~properties~list~items",
    "LocationPlainJSON": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location~post~parameters~0~schema~properties~corporate_location",
    "TransactionRequestTransferToPhone": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_transfer_to_phone",
    "CustomerAttributeResponseJsonV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}~get~responses~200~schema~properties~customer_attributes~items",
    "TopApiJson": "~paths~/obp/v3.1.0/management/metrics/top-apis~get~responses~200~schema~properties~top_apis~items",
    "TransactionRequestWithChargeJSON210": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema",
    "AccountAttributeJson": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/{PRODUCT_CODE}/attribute~post~parameters~0~schema",
    "PhysicalCardJSON": "~paths~/obp/v3.1.0/cards~get~responses~200~schema~properties~cards~items",
    "ViewsJSONV121": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}/views~post~responses~201~schema",
    "PostPutProductJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}~put~parameters~0~schema",
    "KycDocumentsJSON": "~paths~/obp/v3.1.0/customers/{CUSTOMER_ID}/kyc_documents~get~responses~200~schema",
    "OpeningTimesV300": "~paths~/obp/v3.1.0/banks/{BANK_ID}/atms~get~responses~200~schema~properties~sunday",
    "TopConsumersJson": "~paths~/obp/v3.1.0/management/metrics/top-consumers~get~responses~200~schema",
    "ConsentsJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents~get~responses~200~schema",
    "SandboxUserImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~users~items",
    "SandboxBankImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~banks~items",
    "SandboxTransactionImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~transactions~items",
    "SandboxTransactionCounterparty": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~transactions~items~properties~counterparty",
    "SandboxAccountDetailsImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~transactions~items~properties~details",
    "SandboxAccountImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~accounts~items",
    "SandboxLobbyImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~branches~items~properties~lobby",
    "SandboxBalanceImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~accounts~items~properties~balance",
    "SandboxCrmEventImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~crm_events~items",
    "SandboxAccountIdImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~transactions~items~properties~this_account",
    "SandboxProductImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~products~items",
    "SandboxLocationImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~branches~items~properties~location",
    "SandboxLicenseImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~products~items~properties~meta~properties~license",
    "SandboxAddressImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~branches~items~properties~address",
    "SandboxCustomerImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~crm_events~items~properties~customer",
    "SandboxBranchImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~branches~items",
    "SandboxMetaImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~products~items~properties~meta",
    "SandboxAtmImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~atms~items",
    "SandboxDriveUpImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema~properties~branches~items~properties~driveUp",
    "SandboxDataImport": "~paths~/obp/v3.1.0/sandbox/data-import~post~parameters~0~schema",
    "PaymentAccount": "~paths~/obp/v3.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests~post~responses~201~schema~properties~details~properties~to_sepa_credit_transfers~properties~debtorAccount",
    "EndpointInfo": "~paths~/obp/v3.1.0/message-docs/CONNECTOR~get~responses~200~schema~properties~message_docs~items~properties~dependent_endpoints~items",
    "FieldNameApiVersions": "~paths~/obp/v3.1.0/message-docs/CONNECTOR~get~responses~200~schema~properties~message_docs~items~properties~requiredFieldInfo",
    "PostConsentViewJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents/EMAIL~post~parameters~0~schema~properties~views~items",
    "PostConsentEntitlementJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/my/consents/EMAIL~post~parameters~0~schema~properties~entitlements~items",
    "MethodRoutingCommons": "~paths~/obp/v3.1.0/management/method_routings~get~responses~200~schema~properties~method_routings~items",
    "EmptyClassJson": "~paths~/obp/v3.1.0/accounts/public~get~parameters~0~schema",
    "PostUserAuthContextUpdateJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{AUTH_CONTEXT_UPDATE_ID}/challenge~post~parameters~0~schema",
    "CardAttributeJson": "~paths~/obp/v3.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attribute~post~parameters~0~schema",
    "WebUiPropsCommons": "~paths~/obp/v3.1.0/management/webui_props~get~responses~200~schema~properties~webui_props~items",
    "PostConsentChallengeJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}/challenge~post~parameters~0~schema",
    "ConsentChallengeJsonV310": "~paths~/obp/v3.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}/challenge~post~responses~201~schema",
    "MethodRoutingParam": "~paths~/obp/v3.1.0/management/method_routings~get~responses~200~schema~properties~method_routings~items~properties~parameters~items"
  }
}
